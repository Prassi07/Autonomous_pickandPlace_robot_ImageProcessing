
lm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00005182  00005216  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005182  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800308  00800308  0000531e  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000531e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002f0  00000000  00000000  0000533e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000116f  00000000  00000000  0000562e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000019c  00000000  00000000  0000679d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000018d0  00000000  00000000  00006939  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000270  00000000  00000000  0000820c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000383  00000000  00000000  0000847c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_5>
      18:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__vector_6>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 72 21 	jmp	0x42e4	; 0x42e4 <__vector_25>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e8       	ldi	r30, 0x82	; 130
      fc:	f1 e5       	ldi	r31, 0x51	; 81
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a5 31       	cpi	r26, 0x15	; 21
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 af 21 	call	0x435e	; 0x435e <main>
     122:	0c 94 bf 28 	jmp	0x517e	; 0x517e <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <buzzer_pin_config>:
unsigned long int ShaftCountLeft = 0; //to keep track of left position encoder
unsigned long int ShaftCountRight = 0; //to keep track of right position encoder
unsigned int Degrees; //to accept angle in degrees for turning
int orientation=0;
void buzzer_pin_config (void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
 DDRC = DDRC | 0x08;		//Setting PORTC 3 as outpt
     132:	a7 e2       	ldi	r26, 0x27	; 39
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	e7 e2       	ldi	r30, 0x27	; 39
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	88 60       	ori	r24, 0x08	; 8
     13e:	8c 93       	st	X, r24
 PORTC = PORTC & 0xF7;		//Setting PORTC 3 logic low to turnoff buzzer
     140:	a8 e2       	ldi	r26, 0x28	; 40
     142:	b0 e0       	ldi	r27, 0x00	; 0
     144:	e8 e2       	ldi	r30, 0x28	; 40
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	80 81       	ld	r24, Z
     14a:	87 7f       	andi	r24, 0xF7	; 247
     14c:	8c 93       	st	X, r24
}
     14e:	cf 91       	pop	r28
     150:	df 91       	pop	r29
     152:	08 95       	ret

00000154 <servo1_pin_config>:

void servo1_pin_config (void)
{
     154:	df 93       	push	r29
     156:	cf 93       	push	r28
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x20;  //making PORTB 5 pin output
     15c:	a4 e2       	ldi	r26, 0x24	; 36
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 e2       	ldi	r30, 0x24	; 36
     162:	f0 e0       	ldi	r31, 0x00	; 0
     164:	80 81       	ld	r24, Z
     166:	80 62       	ori	r24, 0x20	; 32
     168:	8c 93       	st	X, r24
 PORTB = PORTB | 0x20; //setting PORTB 5 pin to logic 1
     16a:	a5 e2       	ldi	r26, 0x25	; 37
     16c:	b0 e0       	ldi	r27, 0x00	; 0
     16e:	e5 e2       	ldi	r30, 0x25	; 37
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	80 62       	ori	r24, 0x20	; 32
     176:	8c 93       	st	X, r24
}
     178:	cf 91       	pop	r28
     17a:	df 91       	pop	r29
     17c:	08 95       	ret

0000017e <servo2_pin_config>:

//Configure PORTB 6 pin for servo motor 2 operation
void servo2_pin_config (void)
{
     17e:	df 93       	push	r29
     180:	cf 93       	push	r28
     182:	cd b7       	in	r28, 0x3d	; 61
     184:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x40;  //making PORTB 6 pin output
     186:	a4 e2       	ldi	r26, 0x24	; 36
     188:	b0 e0       	ldi	r27, 0x00	; 0
     18a:	e4 e2       	ldi	r30, 0x24	; 36
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 64       	ori	r24, 0x40	; 64
     192:	8c 93       	st	X, r24
 PORTB = PORTB | 0x40; //setting PORTB 6 pin to logic 1
     194:	a5 e2       	ldi	r26, 0x25	; 37
     196:	b0 e0       	ldi	r27, 0x00	; 0
     198:	e5 e2       	ldi	r30, 0x25	; 37
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	80 81       	ld	r24, Z
     19e:	80 64       	ori	r24, 0x40	; 64
     1a0:	8c 93       	st	X, r24
}
     1a2:	cf 91       	pop	r28
     1a4:	df 91       	pop	r29
     1a6:	08 95       	ret

000001a8 <servo3_pin_config>:

//Configure PORTB 7 pin for servo motor 3 operation
void servo3_pin_config (void)
{
     1a8:	df 93       	push	r29
     1aa:	cf 93       	push	r28
     1ac:	cd b7       	in	r28, 0x3d	; 61
     1ae:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x80;  //making PORTB 7 pin output
     1b0:	a4 e2       	ldi	r26, 0x24	; 36
     1b2:	b0 e0       	ldi	r27, 0x00	; 0
     1b4:	e4 e2       	ldi	r30, 0x24	; 36
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 81       	ld	r24, Z
     1ba:	80 68       	ori	r24, 0x80	; 128
     1bc:	8c 93       	st	X, r24
 PORTB = PORTB | 0x80; //setting PORTB 7 pin to logic 1
     1be:	a5 e2       	ldi	r26, 0x25	; 37
     1c0:	b0 e0       	ldi	r27, 0x00	; 0
     1c2:	e5 e2       	ldi	r30, 0x25	; 37
     1c4:	f0 e0       	ldi	r31, 0x00	; 0
     1c6:	80 81       	ld	r24, Z
     1c8:	80 68       	ori	r24, 0x80	; 128
     1ca:	8c 93       	st	X, r24
}
     1cc:	cf 91       	pop	r28
     1ce:	df 91       	pop	r29
     1d0:	08 95       	ret

000001d2 <motion_pin_config>:
void motion_pin_config (void)
{
     1d2:	df 93       	push	r29
     1d4:	cf 93       	push	r28
     1d6:	cd b7       	in	r28, 0x3d	; 61
     1d8:	de b7       	in	r29, 0x3e	; 62
 DDRA = DDRA | 0x0F;
     1da:	a1 e2       	ldi	r26, 0x21	; 33
     1dc:	b0 e0       	ldi	r27, 0x00	; 0
     1de:	e1 e2       	ldi	r30, 0x21	; 33
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	80 81       	ld	r24, Z
     1e4:	8f 60       	ori	r24, 0x0F	; 15
     1e6:	8c 93       	st	X, r24
 PORTA = PORTA & 0xF0;
     1e8:	a2 e2       	ldi	r26, 0x22	; 34
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	e2 e2       	ldi	r30, 0x22	; 34
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 81       	ld	r24, Z
     1f2:	80 7f       	andi	r24, 0xF0	; 240
     1f4:	8c 93       	st	X, r24
 DDRL = DDRL | 0x18;   //Setting PL3 and PL4 pins as output for PWM generation
     1f6:	aa e0       	ldi	r26, 0x0A	; 10
     1f8:	b1 e0       	ldi	r27, 0x01	; 1
     1fa:	ea e0       	ldi	r30, 0x0A	; 10
     1fc:	f1 e0       	ldi	r31, 0x01	; 1
     1fe:	80 81       	ld	r24, Z
     200:	88 61       	ori	r24, 0x18	; 24
     202:	8c 93       	st	X, r24
 PORTL = PORTL | 0x18; //PL3 and PL4 pins are for velocity control using PWM.
     204:	ab e0       	ldi	r26, 0x0B	; 11
     206:	b1 e0       	ldi	r27, 0x01	; 1
     208:	eb e0       	ldi	r30, 0x0B	; 11
     20a:	f1 e0       	ldi	r31, 0x01	; 1
     20c:	80 81       	ld	r24, Z
     20e:	88 61       	ori	r24, 0x18	; 24
     210:	8c 93       	st	X, r24
}
     212:	cf 91       	pop	r28
     214:	df 91       	pop	r29
     216:	08 95       	ret

00000218 <left_encoder_pin_config>:

//Function to configure INT4 (PORTE 4) pin as input for the left position encoder
void left_encoder_pin_config (void)
{
     218:	df 93       	push	r29
     21a:	cf 93       	push	r28
     21c:	cd b7       	in	r28, 0x3d	; 61
     21e:	de b7       	in	r29, 0x3e	; 62
 DDRE  = DDRE & 0xEF;  //Set the direction of the PORTE 4 pin as input
     220:	ad e2       	ldi	r26, 0x2D	; 45
     222:	b0 e0       	ldi	r27, 0x00	; 0
     224:	ed e2       	ldi	r30, 0x2D	; 45
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	8f 7e       	andi	r24, 0xEF	; 239
     22c:	8c 93       	st	X, r24
 PORTE = PORTE | 0x10; //Enable internal pull-up for PORTE 4 pin
     22e:	ae e2       	ldi	r26, 0x2E	; 46
     230:	b0 e0       	ldi	r27, 0x00	; 0
     232:	ee e2       	ldi	r30, 0x2E	; 46
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	80 61       	ori	r24, 0x10	; 16
     23a:	8c 93       	st	X, r24
}
     23c:	cf 91       	pop	r28
     23e:	df 91       	pop	r29
     240:	08 95       	ret

00000242 <right_encoder_pin_config>:

//Function to configure INT5 (PORTE 5) pin as input for the right position encoder
void right_encoder_pin_config (void)
{
     242:	df 93       	push	r29
     244:	cf 93       	push	r28
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
 DDRE  = DDRE & 0xDF;  //Set the direction of the PORTE 4 pin as input
     24a:	ad e2       	ldi	r26, 0x2D	; 45
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	ed e2       	ldi	r30, 0x2D	; 45
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	80 81       	ld	r24, Z
     254:	8f 7d       	andi	r24, 0xDF	; 223
     256:	8c 93       	st	X, r24
 PORTE = PORTE | 0x20; //Enable internal pull-up for PORTE 4 pin
     258:	ae e2       	ldi	r26, 0x2E	; 46
     25a:	b0 e0       	ldi	r27, 0x00	; 0
     25c:	ee e2       	ldi	r30, 0x2E	; 46
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 81       	ld	r24, Z
     262:	80 62       	ori	r24, 0x20	; 32
     264:	8c 93       	st	X, r24
}
     266:	cf 91       	pop	r28
     268:	df 91       	pop	r29
     26a:	08 95       	ret

0000026c <port_init>:

//Function to initialize ports
void port_init()
{
     26c:	df 93       	push	r29
     26e:	cf 93       	push	r28
     270:	cd b7       	in	r28, 0x3d	; 61
     272:	de b7       	in	r29, 0x3e	; 62
	motion_pin_config();
     274:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <motion_pin_config>
	buzzer_pin_config();//robot motion pins config
     278:	0e 94 95 00 	call	0x12a	; 0x12a <buzzer_pin_config>
    left_encoder_pin_config(); //left encoder pin config
     27c:	0e 94 0c 01 	call	0x218	; 0x218 <left_encoder_pin_config>
    right_encoder_pin_config(); //right encoder pin config
     280:	0e 94 21 01 	call	0x242	; 0x242 <right_encoder_pin_config>
	servo1_pin_config(); //Configure PORTB 5 pin for servo motor 1 operation
     284:	0e 94 aa 00 	call	0x154	; 0x154 <servo1_pin_config>
 	servo2_pin_config(); //Configure PORTB 6 pin for servo motor 2 operation
     288:	0e 94 bf 00 	call	0x17e	; 0x17e <servo2_pin_config>
 	servo3_pin_config(); //Configure PORTB 7 pin for servo motor 3 operation
     28c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <servo3_pin_config>
}
     290:	cf 91       	pop	r28
     292:	df 91       	pop	r29
     294:	08 95       	ret

00000296 <left_position_encoder_interrupt_init>:
void left_position_encoder_interrupt_init (void) //Interrupt 4 enable
{
     296:	df 93       	push	r29
     298:	cf 93       	push	r28
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupt
     29e:	f8 94       	cli
 EICRB = EICRB | 0x02; // INT4 is set to trigger with falling edge
     2a0:	aa e6       	ldi	r26, 0x6A	; 106
     2a2:	b0 e0       	ldi	r27, 0x00	; 0
     2a4:	ea e6       	ldi	r30, 0x6A	; 106
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	82 60       	ori	r24, 0x02	; 2
     2ac:	8c 93       	st	X, r24
 EIMSK = EIMSK | 0x10; // Enable Interrupt INT4 for left position encoder
     2ae:	ad e3       	ldi	r26, 0x3D	; 61
     2b0:	b0 e0       	ldi	r27, 0x00	; 0
     2b2:	ed e3       	ldi	r30, 0x3D	; 61
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	80 81       	ld	r24, Z
     2b8:	80 61       	ori	r24, 0x10	; 16
     2ba:	8c 93       	st	X, r24
 sei();   // Enables the global interrupt
     2bc:	78 94       	sei
}
     2be:	cf 91       	pop	r28
     2c0:	df 91       	pop	r29
     2c2:	08 95       	ret

000002c4 <right_position_encoder_interrupt_init>:

void right_position_encoder_interrupt_init (void) //Interrupt 5 enable
{
     2c4:	df 93       	push	r29
     2c6:	cf 93       	push	r28
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupt
     2cc:	f8 94       	cli
 EICRB = EICRB | 0x08; // INT5 is set to trigger with falling edge
     2ce:	aa e6       	ldi	r26, 0x6A	; 106
     2d0:	b0 e0       	ldi	r27, 0x00	; 0
     2d2:	ea e6       	ldi	r30, 0x6A	; 106
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	88 60       	ori	r24, 0x08	; 8
     2da:	8c 93       	st	X, r24
 EIMSK = EIMSK | 0x20; // Enable Interrupt INT5 for right position encoder
     2dc:	ad e3       	ldi	r26, 0x3D	; 61
     2de:	b0 e0       	ldi	r27, 0x00	; 0
     2e0:	ed e3       	ldi	r30, 0x3D	; 61
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	80 62       	ori	r24, 0x20	; 32
     2e8:	8c 93       	st	X, r24
 sei();   // Enables the global interrupt
     2ea:	78 94       	sei
}
     2ec:	cf 91       	pop	r28
     2ee:	df 91       	pop	r29
     2f0:	08 95       	ret

000002f2 <__vector_6>:

//ISR for right position encoder
ISR(INT5_vect)
{
     2f2:	1f 92       	push	r1
     2f4:	0f 92       	push	r0
     2f6:	0f b6       	in	r0, 0x3f	; 63
     2f8:	0f 92       	push	r0
     2fa:	11 24       	eor	r1, r1
     2fc:	8f 93       	push	r24
     2fe:	9f 93       	push	r25
     300:	af 93       	push	r26
     302:	bf 93       	push	r27
     304:	df 93       	push	r29
     306:	cf 93       	push	r28
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
 ShaftCountRight++;  //increment right shaft position count
     30c:	80 91 0d 03 	lds	r24, 0x030D
     310:	90 91 0e 03 	lds	r25, 0x030E
     314:	a0 91 0f 03 	lds	r26, 0x030F
     318:	b0 91 10 03 	lds	r27, 0x0310
     31c:	01 96       	adiw	r24, 0x01	; 1
     31e:	a1 1d       	adc	r26, r1
     320:	b1 1d       	adc	r27, r1
     322:	80 93 0d 03 	sts	0x030D, r24
     326:	90 93 0e 03 	sts	0x030E, r25
     32a:	a0 93 0f 03 	sts	0x030F, r26
     32e:	b0 93 10 03 	sts	0x0310, r27
}
     332:	cf 91       	pop	r28
     334:	df 91       	pop	r29
     336:	bf 91       	pop	r27
     338:	af 91       	pop	r26
     33a:	9f 91       	pop	r25
     33c:	8f 91       	pop	r24
     33e:	0f 90       	pop	r0
     340:	0f be       	out	0x3f, r0	; 63
     342:	0f 90       	pop	r0
     344:	1f 90       	pop	r1
     346:	18 95       	reti

00000348 <__vector_5>:


//ISR for left position encoder
ISR(INT4_vect)
{
     348:	1f 92       	push	r1
     34a:	0f 92       	push	r0
     34c:	0f b6       	in	r0, 0x3f	; 63
     34e:	0f 92       	push	r0
     350:	11 24       	eor	r1, r1
     352:	8f 93       	push	r24
     354:	9f 93       	push	r25
     356:	af 93       	push	r26
     358:	bf 93       	push	r27
     35a:	df 93       	push	r29
     35c:	cf 93       	push	r28
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
 ShaftCountLeft++;  //increment left shaft position count
     362:	80 91 09 03 	lds	r24, 0x0309
     366:	90 91 0a 03 	lds	r25, 0x030A
     36a:	a0 91 0b 03 	lds	r26, 0x030B
     36e:	b0 91 0c 03 	lds	r27, 0x030C
     372:	01 96       	adiw	r24, 0x01	; 1
     374:	a1 1d       	adc	r26, r1
     376:	b1 1d       	adc	r27, r1
     378:	80 93 09 03 	sts	0x0309, r24
     37c:	90 93 0a 03 	sts	0x030A, r25
     380:	a0 93 0b 03 	sts	0x030B, r26
     384:	b0 93 0c 03 	sts	0x030C, r27
}
     388:	cf 91       	pop	r28
     38a:	df 91       	pop	r29
     38c:	bf 91       	pop	r27
     38e:	af 91       	pop	r26
     390:	9f 91       	pop	r25
     392:	8f 91       	pop	r24
     394:	0f 90       	pop	r0
     396:	0f be       	out	0x3f, r0	; 63
     398:	0f 90       	pop	r0
     39a:	1f 90       	pop	r1
     39c:	18 95       	reti

0000039e <timer5_init>:

void timer5_init()
{
     39e:	df 93       	push	r29
     3a0:	cf 93       	push	r28
     3a2:	cd b7       	in	r28, 0x3d	; 61
     3a4:	de b7       	in	r29, 0x3e	; 62
	TCCR5B = 0x00;	//Stop
     3a6:	e1 e2       	ldi	r30, 0x21	; 33
     3a8:	f1 e0       	ldi	r31, 0x01	; 1
     3aa:	10 82       	st	Z, r1
	TCNT5H = 0xFF;	//Counter higher 8-bit value to which OCR5xH value is compared with
     3ac:	e5 e2       	ldi	r30, 0x25	; 37
     3ae:	f1 e0       	ldi	r31, 0x01	; 1
     3b0:	8f ef       	ldi	r24, 0xFF	; 255
     3b2:	80 83       	st	Z, r24
	TCNT5L = 0x01;	//Counter lower 8-bit value to which OCR5xH value is compared with
     3b4:	e4 e2       	ldi	r30, 0x24	; 36
     3b6:	f1 e0       	ldi	r31, 0x01	; 1
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	80 83       	st	Z, r24
	OCR5AH = 0x00;	//Output compare register high value for Left Motor
     3bc:	e9 e2       	ldi	r30, 0x29	; 41
     3be:	f1 e0       	ldi	r31, 0x01	; 1
     3c0:	10 82       	st	Z, r1
	OCR5AL = 0xFF;	//Output compare register low value for Left Motor
     3c2:	e8 e2       	ldi	r30, 0x28	; 40
     3c4:	f1 e0       	ldi	r31, 0x01	; 1
     3c6:	8f ef       	ldi	r24, 0xFF	; 255
     3c8:	80 83       	st	Z, r24
	OCR5BH = 0x00;	//Output compare register high value for Right Motor
     3ca:	eb e2       	ldi	r30, 0x2B	; 43
     3cc:	f1 e0       	ldi	r31, 0x01	; 1
     3ce:	10 82       	st	Z, r1
	OCR5BL = 0xFF;	//Output compare register low value for Right Motor
     3d0:	ea e2       	ldi	r30, 0x2A	; 42
     3d2:	f1 e0       	ldi	r31, 0x01	; 1
     3d4:	8f ef       	ldi	r24, 0xFF	; 255
     3d6:	80 83       	st	Z, r24
	OCR5CH = 0x00;	//Output compare register high value for Motor C1
     3d8:	ed e2       	ldi	r30, 0x2D	; 45
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	10 82       	st	Z, r1
	OCR5CL = 0xFF;	//Output compare register low value for Motor C1
     3de:	ec e2       	ldi	r30, 0x2C	; 44
     3e0:	f1 e0       	ldi	r31, 0x01	; 1
     3e2:	8f ef       	ldi	r24, 0xFF	; 255
     3e4:	80 83       	st	Z, r24
	TCCR5A = 0xA9;	/*{COM5A1=1, COM5A0=0; COM5B1=1, COM5B0=0; COM5C1=1 COM5C0=0}
     3e6:	e0 e2       	ldi	r30, 0x20	; 32
     3e8:	f1 e0       	ldi	r31, 0x01	; 1
     3ea:	89 ea       	ldi	r24, 0xA9	; 169
     3ec:	80 83       	st	Z, r24
 					  For Overriding normal port functionality to OCRnA outputs.
				  	  {WGM51=0, WGM50=1} Along With WGM52 in TCCR5B for Selecting FAST PWM 8-bit Mode*/
	
	TCCR5B = 0x0B;	//WGM12=1; CS12=0, CS11=1, CS10=1 (Prescaler=64)
     3ee:	e1 e2       	ldi	r30, 0x21	; 33
     3f0:	f1 e0       	ldi	r31, 0x01	; 1
     3f2:	8b e0       	ldi	r24, 0x0B	; 11
     3f4:	80 83       	st	Z, r24
}
     3f6:	cf 91       	pop	r28
     3f8:	df 91       	pop	r29
     3fa:	08 95       	ret

000003fc <velocity>:

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
     3fc:	df 93       	push	r29
     3fe:	cf 93       	push	r28
     400:	0f 92       	push	r0
     402:	0f 92       	push	r0
     404:	cd b7       	in	r28, 0x3d	; 61
     406:	de b7       	in	r29, 0x3e	; 62
     408:	89 83       	std	Y+1, r24	; 0x01
     40a:	6a 83       	std	Y+2, r22	; 0x02
	OCR5AL = (unsigned char)left_motor;
     40c:	e8 e2       	ldi	r30, 0x28	; 40
     40e:	f1 e0       	ldi	r31, 0x01	; 1
     410:	89 81       	ldd	r24, Y+1	; 0x01
     412:	80 83       	st	Z, r24
	OCR5BL = (unsigned char)right_motor;
     414:	ea e2       	ldi	r30, 0x2A	; 42
     416:	f1 e0       	ldi	r31, 0x01	; 1
     418:	8a 81       	ldd	r24, Y+2	; 0x02
     41a:	80 83       	st	Z, r24
}
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	cf 91       	pop	r28
     422:	df 91       	pop	r29
     424:	08 95       	ret

00000426 <motion_set>:


//Function used for setting motor's direction
void motion_set (unsigned char Direction)
{
     426:	df 93       	push	r29
     428:	cf 93       	push	r28
     42a:	0f 92       	push	r0
     42c:	0f 92       	push	r0
     42e:	cd b7       	in	r28, 0x3d	; 61
     430:	de b7       	in	r29, 0x3e	; 62
     432:	8a 83       	std	Y+2, r24	; 0x02
 unsigned char PortARestore = 0;
     434:	19 82       	std	Y+1, r1	; 0x01

 Direction &= 0x0F; 		// removing upper nibbel for the protection
     436:	8a 81       	ldd	r24, Y+2	; 0x02
     438:	8f 70       	andi	r24, 0x0F	; 15
     43a:	8a 83       	std	Y+2, r24	; 0x02
 PortARestore = PORTA; 		// reading the PORTA original status
     43c:	e2 e2       	ldi	r30, 0x22	; 34
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	89 83       	std	Y+1, r24	; 0x01
 PortARestore &= 0xF0; 		// making lower direction nibbel to 0
     444:	89 81       	ldd	r24, Y+1	; 0x01
     446:	80 7f       	andi	r24, 0xF0	; 240
     448:	89 83       	std	Y+1, r24	; 0x01
 PortARestore |= Direction; // adding lower nibbel for forward command and restoring the PORTA status
     44a:	99 81       	ldd	r25, Y+1	; 0x01
     44c:	8a 81       	ldd	r24, Y+2	; 0x02
     44e:	89 2b       	or	r24, r25
     450:	89 83       	std	Y+1, r24	; 0x01
 PORTA = PortARestore; 		// executing the command
     452:	e2 e2       	ldi	r30, 0x22	; 34
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	89 81       	ldd	r24, Y+1	; 0x01
     458:	80 83       	st	Z, r24
}
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
     45e:	cf 91       	pop	r28
     460:	df 91       	pop	r29
     462:	08 95       	ret

00000464 <forward>:

void forward (void) //both wheels forward
{
     464:	df 93       	push	r29
     466:	cf 93       	push	r28
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
   motion_set(0x06);
     46c:	86 e0       	ldi	r24, 0x06	; 6
     46e:	0e 94 13 02 	call	0x426	; 0x426 <motion_set>
}
     472:	cf 91       	pop	r28
     474:	df 91       	pop	r29
     476:	08 95       	ret

00000478 <back>:

void back (void) //both wheels backward
{
     478:	df 93       	push	r29
     47a:	cf 93       	push	r28
     47c:	cd b7       	in	r28, 0x3d	; 61
     47e:	de b7       	in	r29, 0x3e	; 62
   motion_set(0x09);
     480:	89 e0       	ldi	r24, 0x09	; 9
     482:	0e 94 13 02 	call	0x426	; 0x426 <motion_set>
}
     486:	cf 91       	pop	r28
     488:	df 91       	pop	r29
     48a:	08 95       	ret

0000048c <left>:

void left (void) //Left wheel backward, Right wheel forward
{
     48c:	df 93       	push	r29
     48e:	cf 93       	push	r28
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
   motion_set(0x05);
     494:	85 e0       	ldi	r24, 0x05	; 5
     496:	0e 94 13 02 	call	0x426	; 0x426 <motion_set>
}
     49a:	cf 91       	pop	r28
     49c:	df 91       	pop	r29
     49e:	08 95       	ret

000004a0 <right>:

void right (void) //Left wheel forward, Right wheel backward
{
     4a0:	df 93       	push	r29
     4a2:	cf 93       	push	r28
     4a4:	cd b7       	in	r28, 0x3d	; 61
     4a6:	de b7       	in	r29, 0x3e	; 62
  motion_set(0x0A);
     4a8:	8a e0       	ldi	r24, 0x0A	; 10
     4aa:	0e 94 13 02 	call	0x426	; 0x426 <motion_set>
}
     4ae:	cf 91       	pop	r28
     4b0:	df 91       	pop	r29
     4b2:	08 95       	ret

000004b4 <stop>:

void stop (void)
{
     4b4:	df 93       	push	r29
     4b6:	cf 93       	push	r28
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
  motion_set(0x00);
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	0e 94 13 02 	call	0x426	; 0x426 <motion_set>
}
     4c2:	cf 91       	pop	r28
     4c4:	df 91       	pop	r29
     4c6:	08 95       	ret

000004c8 <angle_rotate>:

//Function used for turning robot by specified degrees
void angle_rotate(unsigned int Degrees)
{
     4c8:	df 93       	push	r29
     4ca:	cf 93       	push	r28
     4cc:	cd b7       	in	r28, 0x3d	; 61
     4ce:	de b7       	in	r29, 0x3e	; 62
     4d0:	2c 97       	sbiw	r28, 0x0c	; 12
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	9a 87       	std	Y+10, r25	; 0x0a
     4de:	89 87       	std	Y+9, r24	; 0x09
 float ReqdShaftCount = 0;
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	a0 e0       	ldi	r26, 0x00	; 0
     4e6:	b0 e0       	ldi	r27, 0x00	; 0
     4e8:	8d 83       	std	Y+5, r24	; 0x05
     4ea:	9e 83       	std	Y+6, r25	; 0x06
     4ec:	af 83       	std	Y+7, r26	; 0x07
     4ee:	b8 87       	std	Y+8, r27	; 0x08
 unsigned long int ReqdShaftCountInt = 0;
     4f0:	19 82       	std	Y+1, r1	; 0x01
     4f2:	1a 82       	std	Y+2, r1	; 0x02
     4f4:	1b 82       	std	Y+3, r1	; 0x03
     4f6:	1c 82       	std	Y+4, r1	; 0x04
 ReqdShaftCount = (float) Degrees/ 4.090; // division by resolution to get shaft count
     4f8:	89 85       	ldd	r24, Y+9	; 0x09
     4fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fc:	cc 01       	movw	r24, r24
     4fe:	a0 e0       	ldi	r26, 0x00	; 0
     500:	b0 e0       	ldi	r27, 0x00	; 0
     502:	bc 01       	movw	r22, r24
     504:	cd 01       	movw	r24, r26
     506:	0e 94 1a 26 	call	0x4c34	; 0x4c34 <__floatunsisf>
     50a:	dc 01       	movw	r26, r24
     50c:	cb 01       	movw	r24, r22
     50e:	bc 01       	movw	r22, r24
     510:	cd 01       	movw	r24, r26
     512:	28 e4       	ldi	r18, 0x48	; 72
     514:	31 ee       	ldi	r19, 0xE1	; 225
     516:	42 e8       	ldi	r20, 0x82	; 130
     518:	50 e4       	ldi	r21, 0x40	; 64
     51a:	0e 94 8a 24 	call	0x4914	; 0x4914 <__divsf3>
     51e:	dc 01       	movw	r26, r24
     520:	cb 01       	movw	r24, r22
     522:	8d 83       	std	Y+5, r24	; 0x05
     524:	9e 83       	std	Y+6, r25	; 0x06
     526:	af 83       	std	Y+7, r26	; 0x07
     528:	b8 87       	std	Y+8, r27	; 0x08
 ReqdShaftCountInt = (unsigned int) ReqdShaftCount;
     52a:	6d 81       	ldd	r22, Y+5	; 0x05
     52c:	7e 81       	ldd	r23, Y+6	; 0x06
     52e:	8f 81       	ldd	r24, Y+7	; 0x07
     530:	98 85       	ldd	r25, Y+8	; 0x08
     532:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     536:	dc 01       	movw	r26, r24
     538:	cb 01       	movw	r24, r22
     53a:	cc 01       	movw	r24, r24
     53c:	a0 e0       	ldi	r26, 0x00	; 0
     53e:	b0 e0       	ldi	r27, 0x00	; 0
     540:	89 83       	std	Y+1, r24	; 0x01
     542:	9a 83       	std	Y+2, r25	; 0x02
     544:	ab 83       	std	Y+3, r26	; 0x03
     546:	bc 83       	std	Y+4, r27	; 0x04
 ShaftCountRight = 0;
     548:	10 92 0d 03 	sts	0x030D, r1
     54c:	10 92 0e 03 	sts	0x030E, r1
     550:	10 92 0f 03 	sts	0x030F, r1
     554:	10 92 10 03 	sts	0x0310, r1
 ShaftCountLeft = 0;
     558:	10 92 09 03 	sts	0x0309, r1
     55c:	10 92 0a 03 	sts	0x030A, r1
     560:	10 92 0b 03 	sts	0x030B, r1
     564:	10 92 0c 03 	sts	0x030C, r1

 while (1)
 {
  if((ShaftCountRight >= ReqdShaftCountInt) | (ShaftCountLeft >= ReqdShaftCountInt))
     568:	20 91 0d 03 	lds	r18, 0x030D
     56c:	30 91 0e 03 	lds	r19, 0x030E
     570:	40 91 0f 03 	lds	r20, 0x030F
     574:	50 91 10 03 	lds	r21, 0x0310
     578:	1c 86       	std	Y+12, r1	; 0x0c
     57a:	89 81       	ldd	r24, Y+1	; 0x01
     57c:	9a 81       	ldd	r25, Y+2	; 0x02
     57e:	ab 81       	ldd	r26, Y+3	; 0x03
     580:	bc 81       	ldd	r27, Y+4	; 0x04
     582:	28 17       	cp	r18, r24
     584:	39 07       	cpc	r19, r25
     586:	4a 07       	cpc	r20, r26
     588:	5b 07       	cpc	r21, r27
     58a:	10 f0       	brcs	.+4      	; 0x590 <angle_rotate+0xc8>
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	8c 87       	std	Y+12, r24	; 0x0c
     590:	20 91 09 03 	lds	r18, 0x0309
     594:	30 91 0a 03 	lds	r19, 0x030A
     598:	40 91 0b 03 	lds	r20, 0x030B
     59c:	50 91 0c 03 	lds	r21, 0x030C
     5a0:	1b 86       	std	Y+11, r1	; 0x0b
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	9a 81       	ldd	r25, Y+2	; 0x02
     5a6:	ab 81       	ldd	r26, Y+3	; 0x03
     5a8:	bc 81       	ldd	r27, Y+4	; 0x04
     5aa:	28 17       	cp	r18, r24
     5ac:	39 07       	cpc	r19, r25
     5ae:	4a 07       	cpc	r20, r26
     5b0:	5b 07       	cpc	r21, r27
     5b2:	10 f0       	brcs	.+4      	; 0x5b8 <angle_rotate+0xf0>
     5b4:	91 e0       	ldi	r25, 0x01	; 1
     5b6:	9b 87       	std	Y+11, r25	; 0x0b
     5b8:	8c 85       	ldd	r24, Y+12	; 0x0c
     5ba:	9b 85       	ldd	r25, Y+11	; 0x0b
     5bc:	89 2b       	or	r24, r25
     5be:	88 23       	and	r24, r24
     5c0:	99 f2       	breq	.-90     	; 0x568 <angle_rotate+0xa0>
  break;
 }
 stop(); //Stop robot
     5c2:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
}
     5c6:	2c 96       	adiw	r28, 0x0c	; 12
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	f8 94       	cli
     5cc:	de bf       	out	0x3e, r29	; 62
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	cd bf       	out	0x3d, r28	; 61
     5d2:	cf 91       	pop	r28
     5d4:	df 91       	pop	r29
     5d6:	08 95       	ret

000005d8 <linear_distance_mm>:

//Function used for moving robot forward by specified distance

void linear_distance_mm(unsigned int DistanceInMM)
{
     5d8:	df 93       	push	r29
     5da:	cf 93       	push	r28
     5dc:	cd b7       	in	r28, 0x3d	; 61
     5de:	de b7       	in	r29, 0x3e	; 62
     5e0:	2a 97       	sbiw	r28, 0x0a	; 10
     5e2:	0f b6       	in	r0, 0x3f	; 63
     5e4:	f8 94       	cli
     5e6:	de bf       	out	0x3e, r29	; 62
     5e8:	0f be       	out	0x3f, r0	; 63
     5ea:	cd bf       	out	0x3d, r28	; 61
     5ec:	9a 87       	std	Y+10, r25	; 0x0a
     5ee:	89 87       	std	Y+9, r24	; 0x09
 float ReqdShaftCount = 0;
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	a0 e0       	ldi	r26, 0x00	; 0
     5f6:	b0 e0       	ldi	r27, 0x00	; 0
     5f8:	8d 83       	std	Y+5, r24	; 0x05
     5fa:	9e 83       	std	Y+6, r25	; 0x06
     5fc:	af 83       	std	Y+7, r26	; 0x07
     5fe:	b8 87       	std	Y+8, r27	; 0x08
 unsigned long int ReqdShaftCountInt = 0;
     600:	19 82       	std	Y+1, r1	; 0x01
     602:	1a 82       	std	Y+2, r1	; 0x02
     604:	1b 82       	std	Y+3, r1	; 0x03
     606:	1c 82       	std	Y+4, r1	; 0x04
 ReqdShaftCount = DistanceInMM / 5.338; // division by resolution to get shaft count
     608:	89 85       	ldd	r24, Y+9	; 0x09
     60a:	9a 85       	ldd	r25, Y+10	; 0x0a
     60c:	cc 01       	movw	r24, r24
     60e:	a0 e0       	ldi	r26, 0x00	; 0
     610:	b0 e0       	ldi	r27, 0x00	; 0
     612:	bc 01       	movw	r22, r24
     614:	cd 01       	movw	r24, r26
     616:	0e 94 1a 26 	call	0x4c34	; 0x4c34 <__floatunsisf>
     61a:	dc 01       	movw	r26, r24
     61c:	cb 01       	movw	r24, r22
     61e:	bc 01       	movw	r22, r24
     620:	cd 01       	movw	r24, r26
     622:	25 ee       	ldi	r18, 0xE5	; 229
     624:	30 ed       	ldi	r19, 0xD0	; 208
     626:	4a ea       	ldi	r20, 0xAA	; 170
     628:	50 e4       	ldi	r21, 0x40	; 64
     62a:	0e 94 8a 24 	call	0x4914	; 0x4914 <__divsf3>
     62e:	dc 01       	movw	r26, r24
     630:	cb 01       	movw	r24, r22
     632:	8d 83       	std	Y+5, r24	; 0x05
     634:	9e 83       	std	Y+6, r25	; 0x06
     636:	af 83       	std	Y+7, r26	; 0x07
     638:	b8 87       	std	Y+8, r27	; 0x08
 ReqdShaftCountInt = (unsigned long int) ReqdShaftCount;
     63a:	6d 81       	ldd	r22, Y+5	; 0x05
     63c:	7e 81       	ldd	r23, Y+6	; 0x06
     63e:	8f 81       	ldd	r24, Y+7	; 0x07
     640:	98 85       	ldd	r25, Y+8	; 0x08
     642:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	89 83       	std	Y+1, r24	; 0x01
     64c:	9a 83       	std	Y+2, r25	; 0x02
     64e:	ab 83       	std	Y+3, r26	; 0x03
     650:	bc 83       	std	Y+4, r27	; 0x04

 ShaftCountRight = 0;
     652:	10 92 0d 03 	sts	0x030D, r1
     656:	10 92 0e 03 	sts	0x030E, r1
     65a:	10 92 0f 03 	sts	0x030F, r1
     65e:	10 92 10 03 	sts	0x0310, r1
 while(1)
 {
  if(ShaftCountRight > ReqdShaftCountInt)
     662:	20 91 0d 03 	lds	r18, 0x030D
     666:	30 91 0e 03 	lds	r19, 0x030E
     66a:	40 91 0f 03 	lds	r20, 0x030F
     66e:	50 91 10 03 	lds	r21, 0x0310
     672:	89 81       	ldd	r24, Y+1	; 0x01
     674:	9a 81       	ldd	r25, Y+2	; 0x02
     676:	ab 81       	ldd	r26, Y+3	; 0x03
     678:	bc 81       	ldd	r27, Y+4	; 0x04
     67a:	82 17       	cp	r24, r18
     67c:	93 07       	cpc	r25, r19
     67e:	a4 07       	cpc	r26, r20
     680:	b5 07       	cpc	r27, r21
     682:	78 f7       	brcc	.-34     	; 0x662 <linear_distance_mm+0x8a>
  {
  	break;
  }
 }
 stop(); //Stop robot
     684:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
}
     688:	2a 96       	adiw	r28, 0x0a	; 10
     68a:	0f b6       	in	r0, 0x3f	; 63
     68c:	f8 94       	cli
     68e:	de bf       	out	0x3e, r29	; 62
     690:	0f be       	out	0x3f, r0	; 63
     692:	cd bf       	out	0x3d, r28	; 61
     694:	cf 91       	pop	r28
     696:	df 91       	pop	r29
     698:	08 95       	ret

0000069a <timer1_init>:
//TIMER1 initialization in 10 bit fast PWM mode
//prescale:256
// WGM: 7) PWM 10bit fast, TOP=0x03FF
// actual value: 52.25Hz
void timer1_init(void)
{
     69a:	df 93       	push	r29
     69c:	cf 93       	push	r28
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
 TCCR1B = 0x00; //stop
     6a2:	e1 e8       	ldi	r30, 0x81	; 129
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	10 82       	st	Z, r1
 TCNT1H = 0xFC; //Counter high value to which OCR1xH value is to be compared with
     6a8:	e5 e8       	ldi	r30, 0x85	; 133
     6aa:	f0 e0       	ldi	r31, 0x00	; 0
     6ac:	8c ef       	ldi	r24, 0xFC	; 252
     6ae:	80 83       	st	Z, r24
 TCNT1L = 0x01;	//Counter low value to which OCR1xH value is to be compared with
     6b0:	e4 e8       	ldi	r30, 0x84	; 132
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	80 83       	st	Z, r24
 OCR1AH = 0x03;	//Output compare Register high value for servo 1
     6b8:	e9 e8       	ldi	r30, 0x89	; 137
     6ba:	f0 e0       	ldi	r31, 0x00	; 0
     6bc:	83 e0       	ldi	r24, 0x03	; 3
     6be:	80 83       	st	Z, r24
 OCR1AL = 0xFF;	//Output Compare Register low Value For servo 1
     6c0:	e8 e8       	ldi	r30, 0x88	; 136
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	8f ef       	ldi	r24, 0xFF	; 255
     6c6:	80 83       	st	Z, r24
 OCR1BH = 0x03;	//Output compare Register high value for servo 2
     6c8:	eb e8       	ldi	r30, 0x8B	; 139
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	83 e0       	ldi	r24, 0x03	; 3
     6ce:	80 83       	st	Z, r24
 OCR1BL = 0xFF;	//Output Compare Register low Value For servo 2
     6d0:	ea e8       	ldi	r30, 0x8A	; 138
     6d2:	f0 e0       	ldi	r31, 0x00	; 0
     6d4:	8f ef       	ldi	r24, 0xFF	; 255
     6d6:	80 83       	st	Z, r24
 OCR1CH = 0x03;	//Output compare Register high value for servo 3
     6d8:	ed e8       	ldi	r30, 0x8D	; 141
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	83 e0       	ldi	r24, 0x03	; 3
     6de:	80 83       	st	Z, r24
 OCR1CL = 0xFF;	//Output Compare Register low Value For servo 3
     6e0:	ec e8       	ldi	r30, 0x8C	; 140
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	8f ef       	ldi	r24, 0xFF	; 255
     6e6:	80 83       	st	Z, r24
 ICR1H  = 0x03;
     6e8:	e7 e8       	ldi	r30, 0x87	; 135
     6ea:	f0 e0       	ldi	r31, 0x00	; 0
     6ec:	83 e0       	ldi	r24, 0x03	; 3
     6ee:	80 83       	st	Z, r24
 ICR1L  = 0xFF;
     6f0:	e6 e8       	ldi	r30, 0x86	; 134
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	8f ef       	ldi	r24, 0xFF	; 255
     6f6:	80 83       	st	Z, r24
 TCCR1A = 0xAB; /*{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0}
     6f8:	e0 e8       	ldi	r30, 0x80	; 128
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	8b ea       	ldi	r24, 0xAB	; 171
     6fe:	80 83       	st	Z, r24
 					For Overriding normal port functionality to OCRnA outputs.
				  {WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode*/
 TCCR1C = 0x00;
     700:	e2 e8       	ldi	r30, 0x82	; 130
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	10 82       	st	Z, r1
 TCCR1B = 0x0C; //WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
     706:	e1 e8       	ldi	r30, 0x81	; 129
     708:	f0 e0       	ldi	r31, 0x00	; 0
     70a:	8c e0       	ldi	r24, 0x0C	; 12
     70c:	80 83       	st	Z, r24
}
     70e:	cf 91       	pop	r28
     710:	df 91       	pop	r29
     712:	08 95       	ret

00000714 <forward_mm>:


void forward_mm(unsigned int DistanceInMM)
{
     714:	df 93       	push	r29
     716:	cf 93       	push	r28
     718:	0f 92       	push	r0
     71a:	0f 92       	push	r0
     71c:	cd b7       	in	r28, 0x3d	; 61
     71e:	de b7       	in	r29, 0x3e	; 62
     720:	9a 83       	std	Y+2, r25	; 0x02
     722:	89 83       	std	Y+1, r24	; 0x01
 forward();
     724:	0e 94 32 02 	call	0x464	; 0x464 <forward>
 linear_distance_mm(DistanceInMM);
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	9a 81       	ldd	r25, Y+2	; 0x02
     72c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <linear_distance_mm>
}
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	cf 91       	pop	r28
     736:	df 91       	pop	r29
     738:	08 95       	ret

0000073a <back_mm>:

void back_mm(unsigned int DistanceInMM)
{
     73a:	df 93       	push	r29
     73c:	cf 93       	push	r28
     73e:	0f 92       	push	r0
     740:	0f 92       	push	r0
     742:	cd b7       	in	r28, 0x3d	; 61
     744:	de b7       	in	r29, 0x3e	; 62
     746:	9a 83       	std	Y+2, r25	; 0x02
     748:	89 83       	std	Y+1, r24	; 0x01
 back();
     74a:	0e 94 3c 02 	call	0x478	; 0x478 <back>
 linear_distance_mm(DistanceInMM);
     74e:	89 81       	ldd	r24, Y+1	; 0x01
     750:	9a 81       	ldd	r25, Y+2	; 0x02
     752:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <linear_distance_mm>
}
     756:	0f 90       	pop	r0
     758:	0f 90       	pop	r0
     75a:	cf 91       	pop	r28
     75c:	df 91       	pop	r29
     75e:	08 95       	ret

00000760 <left_degrees>:

void left_degrees(unsigned int Degrees)
{
     760:	df 93       	push	r29
     762:	cf 93       	push	r28
     764:	0f 92       	push	r0
     766:	0f 92       	push	r0
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	9a 83       	std	Y+2, r25	; 0x02
     76e:	89 83       	std	Y+1, r24	; 0x01
// 88 pulses for 360 degrees rotation 4.090 degrees per count
 left(); //Turn left
     770:	0e 94 46 02 	call	0x48c	; 0x48c <left>
 angle_rotate(Degrees);
     774:	89 81       	ldd	r24, Y+1	; 0x01
     776:	9a 81       	ldd	r25, Y+2	; 0x02
     778:	0e 94 64 02 	call	0x4c8	; 0x4c8 <angle_rotate>
}
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	cf 91       	pop	r28
     782:	df 91       	pop	r29
     784:	08 95       	ret

00000786 <right_degrees>:



void right_degrees(unsigned int Degrees)
{
     786:	df 93       	push	r29
     788:	cf 93       	push	r28
     78a:	0f 92       	push	r0
     78c:	0f 92       	push	r0
     78e:	cd b7       	in	r28, 0x3d	; 61
     790:	de b7       	in	r29, 0x3e	; 62
     792:	9a 83       	std	Y+2, r25	; 0x02
     794:	89 83       	std	Y+1, r24	; 0x01
// 88 pulses for 360 degrees rotation 4.090 degrees per count
 right(); //Turn right
     796:	0e 94 50 02 	call	0x4a0	; 0x4a0 <right>
 angle_rotate(Degrees);
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	9a 81       	ldd	r25, Y+2	; 0x02
     79e:	0e 94 64 02 	call	0x4c8	; 0x4c8 <angle_rotate>
}
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	cf 91       	pop	r28
     7a8:	df 91       	pop	r29
     7aa:	08 95       	ret

000007ac <buzzer_on>:


void buzzer_on (void)
{
     7ac:	df 93       	push	r29
     7ae:	cf 93       	push	r28
     7b0:	0f 92       	push	r0
     7b2:	cd b7       	in	r28, 0x3d	; 61
     7b4:	de b7       	in	r29, 0x3e	; 62
 unsigned char port_restore = 0;
     7b6:	19 82       	std	Y+1, r1	; 0x01
 port_restore = PINC;
     7b8:	e6 e2       	ldi	r30, 0x26	; 38
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	80 81       	ld	r24, Z
     7be:	89 83       	std	Y+1, r24	; 0x01
 port_restore = port_restore | 0x08;
     7c0:	89 81       	ldd	r24, Y+1	; 0x01
     7c2:	88 60       	ori	r24, 0x08	; 8
     7c4:	89 83       	std	Y+1, r24	; 0x01
 PORTC = port_restore;
     7c6:	e8 e2       	ldi	r30, 0x28	; 40
     7c8:	f0 e0       	ldi	r31, 0x00	; 0
     7ca:	89 81       	ldd	r24, Y+1	; 0x01
     7cc:	80 83       	st	Z, r24
}
     7ce:	0f 90       	pop	r0
     7d0:	cf 91       	pop	r28
     7d2:	df 91       	pop	r29
     7d4:	08 95       	ret

000007d6 <buzzer_off>:

void buzzer_off (void)
{
     7d6:	df 93       	push	r29
     7d8:	cf 93       	push	r28
     7da:	0f 92       	push	r0
     7dc:	cd b7       	in	r28, 0x3d	; 61
     7de:	de b7       	in	r29, 0x3e	; 62
 unsigned char port_restore = 0;
     7e0:	19 82       	std	Y+1, r1	; 0x01
 port_restore = PINC;
     7e2:	e6 e2       	ldi	r30, 0x26	; 38
     7e4:	f0 e0       	ldi	r31, 0x00	; 0
     7e6:	80 81       	ld	r24, Z
     7e8:	89 83       	std	Y+1, r24	; 0x01
 port_restore = port_restore & 0xF7;
     7ea:	89 81       	ldd	r24, Y+1	; 0x01
     7ec:	87 7f       	andi	r24, 0xF7	; 247
     7ee:	89 83       	std	Y+1, r24	; 0x01
 PORTC = port_restore;
     7f0:	e8 e2       	ldi	r30, 0x28	; 40
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	80 83       	st	Z, r24
}
     7f8:	0f 90       	pop	r0
     7fa:	cf 91       	pop	r28
     7fc:	df 91       	pop	r29
     7fe:	08 95       	ret

00000800 <servo_1>:

void servo_1(unsigned char degrees)
{
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	df 93       	push	r29
     806:	cf 93       	push	r28
     808:	00 d0       	rcall	.+0      	; 0x80a <servo_1+0xa>
     80a:	0f 92       	push	r0
     80c:	0f 92       	push	r0
     80e:	cd b7       	in	r28, 0x3d	; 61
     810:	de b7       	in	r29, 0x3e	; 62
     812:	8d 83       	std	Y+5, r24	; 0x05
 float PositionPanServo = 0;
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	a0 e0       	ldi	r26, 0x00	; 0
     81a:	b0 e0       	ldi	r27, 0x00	; 0
     81c:	89 83       	std	Y+1, r24	; 0x01
     81e:	9a 83       	std	Y+2, r25	; 0x02
     820:	ab 83       	std	Y+3, r26	; 0x03
     822:	bc 83       	std	Y+4, r27	; 0x04
  PositionPanServo = ((float)degrees / 1.86) + 35.0;
     824:	8d 81       	ldd	r24, Y+5	; 0x05
     826:	88 2f       	mov	r24, r24
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	a0 e0       	ldi	r26, 0x00	; 0
     82c:	b0 e0       	ldi	r27, 0x00	; 0
     82e:	bc 01       	movw	r22, r24
     830:	cd 01       	movw	r24, r26
     832:	0e 94 1a 26 	call	0x4c34	; 0x4c34 <__floatunsisf>
     836:	dc 01       	movw	r26, r24
     838:	cb 01       	movw	r24, r22
     83a:	bc 01       	movw	r22, r24
     83c:	cd 01       	movw	r24, r26
     83e:	2b e7       	ldi	r18, 0x7B	; 123
     840:	34 e1       	ldi	r19, 0x14	; 20
     842:	4e ee       	ldi	r20, 0xEE	; 238
     844:	5f e3       	ldi	r21, 0x3F	; 63
     846:	0e 94 8a 24 	call	0x4914	; 0x4914 <__divsf3>
     84a:	dc 01       	movw	r26, r24
     84c:	cb 01       	movw	r24, r22
     84e:	bc 01       	movw	r22, r24
     850:	cd 01       	movw	r24, r26
     852:	20 e0       	ldi	r18, 0x00	; 0
     854:	30 e0       	ldi	r19, 0x00	; 0
     856:	4c e0       	ldi	r20, 0x0C	; 12
     858:	52 e4       	ldi	r21, 0x42	; 66
     85a:	0e 94 63 23 	call	0x46c6	; 0x46c6 <__addsf3>
     85e:	dc 01       	movw	r26, r24
     860:	cb 01       	movw	r24, r22
     862:	89 83       	std	Y+1, r24	; 0x01
     864:	9a 83       	std	Y+2, r25	; 0x02
     866:	ab 83       	std	Y+3, r26	; 0x03
     868:	bc 83       	std	Y+4, r27	; 0x04
 OCR1AH = 0x00;
     86a:	e9 e8       	ldi	r30, 0x89	; 137
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	10 82       	st	Z, r1
 OCR1AL = (unsigned char) PositionPanServo;
     870:	08 e8       	ldi	r16, 0x88	; 136
     872:	10 e0       	ldi	r17, 0x00	; 0
     874:	69 81       	ldd	r22, Y+1	; 0x01
     876:	7a 81       	ldd	r23, Y+2	; 0x02
     878:	8b 81       	ldd	r24, Y+3	; 0x03
     87a:	9c 81       	ldd	r25, Y+4	; 0x04
     87c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     880:	dc 01       	movw	r26, r24
     882:	cb 01       	movw	r24, r22
     884:	f8 01       	movw	r30, r16
     886:	80 83       	st	Z, r24
}
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	cf 91       	pop	r28
     894:	df 91       	pop	r29
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	08 95       	ret

0000089c <servo_2>:


//Function to rotate Servo 2 by a specified angle in the multiples of 1.86 degrees
void servo_2(unsigned char degrees)
{
     89c:	0f 93       	push	r16
     89e:	1f 93       	push	r17
     8a0:	df 93       	push	r29
     8a2:	cf 93       	push	r28
     8a4:	00 d0       	rcall	.+0      	; 0x8a6 <servo_2+0xa>
     8a6:	0f 92       	push	r0
     8a8:	0f 92       	push	r0
     8aa:	cd b7       	in	r28, 0x3d	; 61
     8ac:	de b7       	in	r29, 0x3e	; 62
     8ae:	8d 83       	std	Y+5, r24	; 0x05
 float PositionTiltServo = 0;
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	89 83       	std	Y+1, r24	; 0x01
     8ba:	9a 83       	std	Y+2, r25	; 0x02
     8bc:	ab 83       	std	Y+3, r26	; 0x03
     8be:	bc 83       	std	Y+4, r27	; 0x04
 PositionTiltServo = ((float)degrees / 1.86) + 35.0;
     8c0:	8d 81       	ldd	r24, Y+5	; 0x05
     8c2:	88 2f       	mov	r24, r24
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	a0 e0       	ldi	r26, 0x00	; 0
     8c8:	b0 e0       	ldi	r27, 0x00	; 0
     8ca:	bc 01       	movw	r22, r24
     8cc:	cd 01       	movw	r24, r26
     8ce:	0e 94 1a 26 	call	0x4c34	; 0x4c34 <__floatunsisf>
     8d2:	dc 01       	movw	r26, r24
     8d4:	cb 01       	movw	r24, r22
     8d6:	bc 01       	movw	r22, r24
     8d8:	cd 01       	movw	r24, r26
     8da:	2b e7       	ldi	r18, 0x7B	; 123
     8dc:	34 e1       	ldi	r19, 0x14	; 20
     8de:	4e ee       	ldi	r20, 0xEE	; 238
     8e0:	5f e3       	ldi	r21, 0x3F	; 63
     8e2:	0e 94 8a 24 	call	0x4914	; 0x4914 <__divsf3>
     8e6:	dc 01       	movw	r26, r24
     8e8:	cb 01       	movw	r24, r22
     8ea:	bc 01       	movw	r22, r24
     8ec:	cd 01       	movw	r24, r26
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	4c e0       	ldi	r20, 0x0C	; 12
     8f4:	52 e4       	ldi	r21, 0x42	; 66
     8f6:	0e 94 63 23 	call	0x46c6	; 0x46c6 <__addsf3>
     8fa:	dc 01       	movw	r26, r24
     8fc:	cb 01       	movw	r24, r22
     8fe:	89 83       	std	Y+1, r24	; 0x01
     900:	9a 83       	std	Y+2, r25	; 0x02
     902:	ab 83       	std	Y+3, r26	; 0x03
     904:	bc 83       	std	Y+4, r27	; 0x04
 OCR1BH = 0x00;
     906:	eb e8       	ldi	r30, 0x8B	; 139
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	10 82       	st	Z, r1
 OCR1BL = (unsigned char) PositionTiltServo;
     90c:	0a e8       	ldi	r16, 0x8A	; 138
     90e:	10 e0       	ldi	r17, 0x00	; 0
     910:	69 81       	ldd	r22, Y+1	; 0x01
     912:	7a 81       	ldd	r23, Y+2	; 0x02
     914:	8b 81       	ldd	r24, Y+3	; 0x03
     916:	9c 81       	ldd	r25, Y+4	; 0x04
     918:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     91c:	dc 01       	movw	r26, r24
     91e:	cb 01       	movw	r24, r22
     920:	f8 01       	movw	r30, r16
     922:	80 83       	st	Z, r24
}
     924:	0f 90       	pop	r0
     926:	0f 90       	pop	r0
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	cf 91       	pop	r28
     930:	df 91       	pop	r29
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <servo_3>:

//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void servo_3(unsigned char degrees)
{
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	df 93       	push	r29
     93e:	cf 93       	push	r28
     940:	00 d0       	rcall	.+0      	; 0x942 <servo_3+0xa>
     942:	0f 92       	push	r0
     944:	0f 92       	push	r0
     946:	cd b7       	in	r28, 0x3d	; 61
     948:	de b7       	in	r29, 0x3e	; 62
     94a:	8d 83       	std	Y+5, r24	; 0x05
 float PositionServo = 0;
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	a0 e0       	ldi	r26, 0x00	; 0
     952:	b0 e0       	ldi	r27, 0x00	; 0
     954:	89 83       	std	Y+1, r24	; 0x01
     956:	9a 83       	std	Y+2, r25	; 0x02
     958:	ab 83       	std	Y+3, r26	; 0x03
     95a:	bc 83       	std	Y+4, r27	; 0x04
 PositionServo = ((float)degrees / 1.86) + 35.0;
     95c:	8d 81       	ldd	r24, Y+5	; 0x05
     95e:	88 2f       	mov	r24, r24
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e0       	ldi	r26, 0x00	; 0
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	bc 01       	movw	r22, r24
     968:	cd 01       	movw	r24, r26
     96a:	0e 94 1a 26 	call	0x4c34	; 0x4c34 <__floatunsisf>
     96e:	dc 01       	movw	r26, r24
     970:	cb 01       	movw	r24, r22
     972:	bc 01       	movw	r22, r24
     974:	cd 01       	movw	r24, r26
     976:	2b e7       	ldi	r18, 0x7B	; 123
     978:	34 e1       	ldi	r19, 0x14	; 20
     97a:	4e ee       	ldi	r20, 0xEE	; 238
     97c:	5f e3       	ldi	r21, 0x3F	; 63
     97e:	0e 94 8a 24 	call	0x4914	; 0x4914 <__divsf3>
     982:	dc 01       	movw	r26, r24
     984:	cb 01       	movw	r24, r22
     986:	bc 01       	movw	r22, r24
     988:	cd 01       	movw	r24, r26
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	4c e0       	ldi	r20, 0x0C	; 12
     990:	52 e4       	ldi	r21, 0x42	; 66
     992:	0e 94 63 23 	call	0x46c6	; 0x46c6 <__addsf3>
     996:	dc 01       	movw	r26, r24
     998:	cb 01       	movw	r24, r22
     99a:	89 83       	std	Y+1, r24	; 0x01
     99c:	9a 83       	std	Y+2, r25	; 0x02
     99e:	ab 83       	std	Y+3, r26	; 0x03
     9a0:	bc 83       	std	Y+4, r27	; 0x04
 OCR1CH = 0x00;
     9a2:	ed e8       	ldi	r30, 0x8D	; 141
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	10 82       	st	Z, r1
 OCR1CL = (unsigned char) PositionServo;
     9a8:	0c e8       	ldi	r16, 0x8C	; 140
     9aa:	10 e0       	ldi	r17, 0x00	; 0
     9ac:	69 81       	ldd	r22, Y+1	; 0x01
     9ae:	7a 81       	ldd	r23, Y+2	; 0x02
     9b0:	8b 81       	ldd	r24, Y+3	; 0x03
     9b2:	9c 81       	ldd	r25, Y+4	; 0x04
     9b4:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	f8 01       	movw	r30, r16
     9be:	80 83       	st	Z, r24
}
     9c0:	0f 90       	pop	r0
     9c2:	0f 90       	pop	r0
     9c4:	0f 90       	pop	r0
     9c6:	0f 90       	pop	r0
     9c8:	0f 90       	pop	r0
     9ca:	cf 91       	pop	r28
     9cc:	df 91       	pop	r29
     9ce:	1f 91       	pop	r17
     9d0:	0f 91       	pop	r16
     9d2:	08 95       	ret

000009d4 <update_orientation>:


void update_orientation(unsigned char data)
{
     9d4:	df 93       	push	r29
     9d6:	cf 93       	push	r28
     9d8:	0f 92       	push	r0
     9da:	cd b7       	in	r28, 0x3d	; 61
     9dc:	de b7       	in	r29, 0x3e	; 62
     9de:	89 83       	std	Y+1, r24	; 0x01
if (data==0x34 || data==0x61)
     9e0:	89 81       	ldd	r24, Y+1	; 0x01
     9e2:	84 33       	cpi	r24, 0x34	; 52
     9e4:	19 f0       	breq	.+6      	; 0x9ec <update_orientation+0x18>
     9e6:	89 81       	ldd	r24, Y+1	; 0x01
     9e8:	81 36       	cpi	r24, 0x61	; 97
     9ea:	31 f4       	brne	.+12     	; 0x9f8 <update_orientation+0x24>
	orientation = 1;
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	90 93 12 03 	sts	0x0312, r25
     9f4:	80 93 11 03 	sts	0x0311, r24
if (data == 0x32 || data==0x62)
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	82 33       	cpi	r24, 0x32	; 50
     9fc:	19 f0       	breq	.+6      	; 0xa04 <update_orientation+0x30>
     9fe:	89 81       	ldd	r24, Y+1	; 0x01
     a00:	82 36       	cpi	r24, 0x62	; 98
     a02:	31 f4       	brne	.+12     	; 0xa10 <update_orientation+0x3c>
	orientation = 3;
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	90 93 12 03 	sts	0x0312, r25
     a0c:	80 93 11 03 	sts	0x0311, r24

if (data==0x33 || data== 0x63)
     a10:	89 81       	ldd	r24, Y+1	; 0x01
     a12:	83 33       	cpi	r24, 0x33	; 51
     a14:	19 f0       	breq	.+6      	; 0xa1c <update_orientation+0x48>
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	83 36       	cpi	r24, 0x63	; 99
     a1a:	21 f4       	brne	.+8      	; 0xa24 <update_orientation+0x50>
	orientation =0;
     a1c:	10 92 12 03 	sts	0x0312, r1
     a20:	10 92 11 03 	sts	0x0311, r1
if (data == 0x31 || data==0x64)
     a24:	89 81       	ldd	r24, Y+1	; 0x01
     a26:	81 33       	cpi	r24, 0x31	; 49
     a28:	19 f0       	breq	.+6      	; 0xa30 <update_orientation+0x5c>
     a2a:	89 81       	ldd	r24, Y+1	; 0x01
     a2c:	84 36       	cpi	r24, 0x64	; 100
     a2e:	31 f4       	brne	.+12     	; 0xa3c <update_orientation+0x68>
	orientation = 2;
     a30:	82 e0       	ldi	r24, 0x02	; 2
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	90 93 12 03 	sts	0x0312, r25
     a38:	80 93 11 03 	sts	0x0311, r24
}
     a3c:	0f 90       	pop	r0
     a3e:	cf 91       	pop	r28
     a40:	df 91       	pop	r29
     a42:	08 95       	ret

00000a44 <run>:



void run(unsigned char data)
{
     a44:	0f 93       	push	r16
     a46:	1f 93       	push	r17
     a48:	df 93       	push	r29
     a4a:	cf 93       	push	r28
     a4c:	cd b7       	in	r28, 0x3d	; 61
     a4e:	de b7       	in	r29, 0x3e	; 62
     a50:	c5 51       	subi	r28, 0x15	; 21
     a52:	d2 40       	sbci	r29, 0x02	; 2
     a54:	0f b6       	in	r0, 0x3f	; 63
     a56:	f8 94       	cli
     a58:	de bf       	out	0x3e, r29	; 62
     a5a:	0f be       	out	0x3f, r0	; 63
     a5c:	cd bf       	out	0x3d, r28	; 61
     a5e:	fe 01       	movw	r30, r28
     a60:	eb 5e       	subi	r30, 0xEB	; 235
     a62:	fd 4f       	sbci	r31, 0xFD	; 253
     a64:	80 83       	st	Z, r24
		velocity(255,249);
     a66:	8f ef       	ldi	r24, 0xFF	; 255
     a68:	69 ef       	ldi	r22, 0xF9	; 249
     a6a:	0e 94 fe 01 	call	0x3fc	; 0x3fc <velocity>
		if((data == 0x34 && orientation==0) || (data == 0x32 && orientation==2) || (data == 0x33 && orientation==3) || (data == 0x31 && orientation==1)) //ASCII value of 8
     a6e:	fe 01       	movw	r30, r28
     a70:	eb 5e       	subi	r30, 0xEB	; 235
     a72:	fd 4f       	sbci	r31, 0xFD	; 253
     a74:	80 81       	ld	r24, Z
     a76:	84 33       	cpi	r24, 0x34	; 52
     a78:	31 f4       	brne	.+12     	; 0xa86 <run+0x42>
     a7a:	80 91 11 03 	lds	r24, 0x0311
     a7e:	90 91 12 03 	lds	r25, 0x0312
     a82:	00 97       	sbiw	r24, 0x00	; 0
     a84:	49 f1       	breq	.+82     	; 0xad8 <run+0x94>
     a86:	fe 01       	movw	r30, r28
     a88:	eb 5e       	subi	r30, 0xEB	; 235
     a8a:	fd 4f       	sbci	r31, 0xFD	; 253
     a8c:	80 81       	ld	r24, Z
     a8e:	82 33       	cpi	r24, 0x32	; 50
     a90:	39 f4       	brne	.+14     	; 0xaa0 <run+0x5c>
     a92:	80 91 11 03 	lds	r24, 0x0311
     a96:	90 91 12 03 	lds	r25, 0x0312
     a9a:	82 30       	cpi	r24, 0x02	; 2
     a9c:	91 05       	cpc	r25, r1
     a9e:	e1 f0       	breq	.+56     	; 0xad8 <run+0x94>
     aa0:	fe 01       	movw	r30, r28
     aa2:	eb 5e       	subi	r30, 0xEB	; 235
     aa4:	fd 4f       	sbci	r31, 0xFD	; 253
     aa6:	80 81       	ld	r24, Z
     aa8:	83 33       	cpi	r24, 0x33	; 51
     aaa:	39 f4       	brne	.+14     	; 0xaba <run+0x76>
     aac:	80 91 11 03 	lds	r24, 0x0311
     ab0:	90 91 12 03 	lds	r25, 0x0312
     ab4:	83 30       	cpi	r24, 0x03	; 3
     ab6:	91 05       	cpc	r25, r1
     ab8:	79 f0       	breq	.+30     	; 0xad8 <run+0x94>
     aba:	fe 01       	movw	r30, r28
     abc:	eb 5e       	subi	r30, 0xEB	; 235
     abe:	fd 4f       	sbci	r31, 0xFD	; 253
     ac0:	80 81       	ld	r24, Z
     ac2:	81 33       	cpi	r24, 0x31	; 49
     ac4:	09 f0       	breq	.+2      	; 0xac8 <run+0x84>
     ac6:	a2 c3       	rjmp	.+1860   	; 0x120c <run+0x7c8>
     ac8:	80 91 11 03 	lds	r24, 0x0311
     acc:	90 91 12 03 	lds	r25, 0x0312
     ad0:	81 30       	cpi	r24, 0x01	; 1
     ad2:	91 05       	cpc	r25, r1
     ad4:	09 f0       	breq	.+2      	; 0xad8 <run+0x94>
     ad6:	9a c3       	rjmp	.+1844   	; 0x120c <run+0x7c8>
		{   forward_mm(35);
     ad8:	83 e2       	ldi	r24, 0x23	; 35
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
     ae0:	fe 01       	movw	r30, r28
     ae2:	ef 5e       	subi	r30, 0xEF	; 239
     ae4:	fd 4f       	sbci	r31, 0xFD	; 253
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	a8 e4       	ldi	r26, 0x48	; 72
     aec:	b2 e4       	ldi	r27, 0x42	; 66
     aee:	80 83       	st	Z, r24
     af0:	91 83       	std	Z+1, r25	; 0x01
     af2:	a2 83       	std	Z+2, r26	; 0x02
     af4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     af6:	8e 01       	movw	r16, r28
     af8:	03 5f       	subi	r16, 0xF3	; 243
     afa:	1d 4f       	sbci	r17, 0xFD	; 253
     afc:	fe 01       	movw	r30, r28
     afe:	ef 5e       	subi	r30, 0xEF	; 239
     b00:	fd 4f       	sbci	r31, 0xFD	; 253
     b02:	60 81       	ld	r22, Z
     b04:	71 81       	ldd	r23, Z+1	; 0x01
     b06:	82 81       	ldd	r24, Z+2	; 0x02
     b08:	93 81       	ldd	r25, Z+3	; 0x03
     b0a:	26 e6       	ldi	r18, 0x66	; 102
     b0c:	36 e6       	ldi	r19, 0x66	; 102
     b0e:	46 e6       	ldi	r20, 0x66	; 102
     b10:	55 e4       	ldi	r21, 0x45	; 69
     b12:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     b16:	dc 01       	movw	r26, r24
     b18:	cb 01       	movw	r24, r22
     b1a:	f8 01       	movw	r30, r16
     b1c:	80 83       	st	Z, r24
     b1e:	91 83       	std	Z+1, r25	; 0x01
     b20:	a2 83       	std	Z+2, r26	; 0x02
     b22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b24:	fe 01       	movw	r30, r28
     b26:	e3 5f       	subi	r30, 0xF3	; 243
     b28:	fd 4f       	sbci	r31, 0xFD	; 253
     b2a:	60 81       	ld	r22, Z
     b2c:	71 81       	ldd	r23, Z+1	; 0x01
     b2e:	82 81       	ldd	r24, Z+2	; 0x02
     b30:	93 81       	ldd	r25, Z+3	; 0x03
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	40 e8       	ldi	r20, 0x80	; 128
     b38:	5f e3       	ldi	r21, 0x3F	; 63
     b3a:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
     b3e:	88 23       	and	r24, r24
     b40:	44 f4       	brge	.+16     	; 0xb52 <run+0x10e>
		__ticks = 1;
     b42:	fe 01       	movw	r30, r28
     b44:	e5 5f       	subi	r30, 0xF5	; 245
     b46:	fd 4f       	sbci	r31, 0xFD	; 253
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	91 83       	std	Z+1, r25	; 0x01
     b4e:	80 83       	st	Z, r24
     b50:	64 c0       	rjmp	.+200    	; 0xc1a <run+0x1d6>
	else if (__tmp > 65535)
     b52:	fe 01       	movw	r30, r28
     b54:	e3 5f       	subi	r30, 0xF3	; 243
     b56:	fd 4f       	sbci	r31, 0xFD	; 253
     b58:	60 81       	ld	r22, Z
     b5a:	71 81       	ldd	r23, Z+1	; 0x01
     b5c:	82 81       	ldd	r24, Z+2	; 0x02
     b5e:	93 81       	ldd	r25, Z+3	; 0x03
     b60:	20 e0       	ldi	r18, 0x00	; 0
     b62:	3f ef       	ldi	r19, 0xFF	; 255
     b64:	4f e7       	ldi	r20, 0x7F	; 127
     b66:	57 e4       	ldi	r21, 0x47	; 71
     b68:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
     b6c:	18 16       	cp	r1, r24
     b6e:	0c f0       	brlt	.+2      	; 0xb72 <run+0x12e>
     b70:	43 c0       	rjmp	.+134    	; 0xbf8 <run+0x1b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b72:	fe 01       	movw	r30, r28
     b74:	ef 5e       	subi	r30, 0xEF	; 239
     b76:	fd 4f       	sbci	r31, 0xFD	; 253
     b78:	60 81       	ld	r22, Z
     b7a:	71 81       	ldd	r23, Z+1	; 0x01
     b7c:	82 81       	ldd	r24, Z+2	; 0x02
     b7e:	93 81       	ldd	r25, Z+3	; 0x03
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	40 e2       	ldi	r20, 0x20	; 32
     b86:	51 e4       	ldi	r21, 0x41	; 65
     b88:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     b8c:	dc 01       	movw	r26, r24
     b8e:	cb 01       	movw	r24, r22
     b90:	8e 01       	movw	r16, r28
     b92:	05 5f       	subi	r16, 0xF5	; 245
     b94:	1d 4f       	sbci	r17, 0xFD	; 253
     b96:	bc 01       	movw	r22, r24
     b98:	cd 01       	movw	r24, r26
     b9a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     b9e:	dc 01       	movw	r26, r24
     ba0:	cb 01       	movw	r24, r22
     ba2:	f8 01       	movw	r30, r16
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	80 83       	st	Z, r24
     ba8:	1f c0       	rjmp	.+62     	; 0xbe8 <run+0x1a4>
     baa:	fe 01       	movw	r30, r28
     bac:	e7 5f       	subi	r30, 0xF7	; 247
     bae:	fd 4f       	sbci	r31, 0xFD	; 253
     bb0:	80 e7       	ldi	r24, 0x70	; 112
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	91 83       	std	Z+1, r25	; 0x01
     bb6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     bb8:	fe 01       	movw	r30, r28
     bba:	e7 5f       	subi	r30, 0xF7	; 247
     bbc:	fd 4f       	sbci	r31, 0xFD	; 253
     bbe:	80 81       	ld	r24, Z
     bc0:	91 81       	ldd	r25, Z+1	; 0x01
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	f1 f7       	brne	.-4      	; 0xbc2 <run+0x17e>
     bc6:	fe 01       	movw	r30, r28
     bc8:	e7 5f       	subi	r30, 0xF7	; 247
     bca:	fd 4f       	sbci	r31, 0xFD	; 253
     bcc:	91 83       	std	Z+1, r25	; 0x01
     bce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bd0:	de 01       	movw	r26, r28
     bd2:	a5 5f       	subi	r26, 0xF5	; 245
     bd4:	bd 4f       	sbci	r27, 0xFD	; 253
     bd6:	fe 01       	movw	r30, r28
     bd8:	e5 5f       	subi	r30, 0xF5	; 245
     bda:	fd 4f       	sbci	r31, 0xFD	; 253
     bdc:	80 81       	ld	r24, Z
     bde:	91 81       	ldd	r25, Z+1	; 0x01
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	11 96       	adiw	r26, 0x01	; 1
     be4:	9c 93       	st	X, r25
     be6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     be8:	fe 01       	movw	r30, r28
     bea:	e5 5f       	subi	r30, 0xF5	; 245
     bec:	fd 4f       	sbci	r31, 0xFD	; 253
     bee:	80 81       	ld	r24, Z
     bf0:	91 81       	ldd	r25, Z+1	; 0x01
     bf2:	00 97       	sbiw	r24, 0x00	; 0
     bf4:	d1 f6       	brne	.-76     	; 0xbaa <run+0x166>
     bf6:	27 c0       	rjmp	.+78     	; 0xc46 <run+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bf8:	8e 01       	movw	r16, r28
     bfa:	05 5f       	subi	r16, 0xF5	; 245
     bfc:	1d 4f       	sbci	r17, 0xFD	; 253
     bfe:	fe 01       	movw	r30, r28
     c00:	e3 5f       	subi	r30, 0xF3	; 243
     c02:	fd 4f       	sbci	r31, 0xFD	; 253
     c04:	60 81       	ld	r22, Z
     c06:	71 81       	ldd	r23, Z+1	; 0x01
     c08:	82 81       	ldd	r24, Z+2	; 0x02
     c0a:	93 81       	ldd	r25, Z+3	; 0x03
     c0c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	f8 01       	movw	r30, r16
     c16:	91 83       	std	Z+1, r25	; 0x01
     c18:	80 83       	st	Z, r24
     c1a:	de 01       	movw	r26, r28
     c1c:	a9 5f       	subi	r26, 0xF9	; 249
     c1e:	bd 4f       	sbci	r27, 0xFD	; 253
     c20:	fe 01       	movw	r30, r28
     c22:	e5 5f       	subi	r30, 0xF5	; 245
     c24:	fd 4f       	sbci	r31, 0xFD	; 253
     c26:	80 81       	ld	r24, Z
     c28:	91 81       	ldd	r25, Z+1	; 0x01
     c2a:	8d 93       	st	X+, r24
     c2c:	9c 93       	st	X, r25
     c2e:	fe 01       	movw	r30, r28
     c30:	e9 5f       	subi	r30, 0xF9	; 249
     c32:	fd 4f       	sbci	r31, 0xFD	; 253
     c34:	80 81       	ld	r24, Z
     c36:	91 81       	ldd	r25, Z+1	; 0x01
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	f1 f7       	brne	.-4      	; 0xc38 <run+0x1f4>
     c3c:	fe 01       	movw	r30, r28
     c3e:	e9 5f       	subi	r30, 0xF9	; 249
     c40:	fd 4f       	sbci	r31, 0xFD	; 253
     c42:	91 83       	std	Z+1, r25	; 0x01
     c44:	80 83       	st	Z, r24
			_delay_ms(50);
		    right_degrees(90);
     c46:	8a e5       	ldi	r24, 0x5A	; 90
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 c3 03 	call	0x786	; 0x786 <right_degrees>
     c4e:	fe 01       	movw	r30, r28
     c50:	ed 5f       	subi	r30, 0xFD	; 253
     c52:	fd 4f       	sbci	r31, 0xFD	; 253
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	a8 e4       	ldi	r26, 0x48	; 72
     c5a:	b2 e4       	ldi	r27, 0x42	; 66
     c5c:	80 83       	st	Z, r24
     c5e:	91 83       	std	Z+1, r25	; 0x01
     c60:	a2 83       	std	Z+2, r26	; 0x02
     c62:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c64:	8e 01       	movw	r16, r28
     c66:	01 50       	subi	r16, 0x01	; 1
     c68:	1e 4f       	sbci	r17, 0xFE	; 254
     c6a:	fe 01       	movw	r30, r28
     c6c:	ed 5f       	subi	r30, 0xFD	; 253
     c6e:	fd 4f       	sbci	r31, 0xFD	; 253
     c70:	60 81       	ld	r22, Z
     c72:	71 81       	ldd	r23, Z+1	; 0x01
     c74:	82 81       	ldd	r24, Z+2	; 0x02
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	26 e6       	ldi	r18, 0x66	; 102
     c7a:	36 e6       	ldi	r19, 0x66	; 102
     c7c:	46 e6       	ldi	r20, 0x66	; 102
     c7e:	55 e4       	ldi	r21, 0x45	; 69
     c80:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     c84:	dc 01       	movw	r26, r24
     c86:	cb 01       	movw	r24, r22
     c88:	f8 01       	movw	r30, r16
     c8a:	80 83       	st	Z, r24
     c8c:	91 83       	std	Z+1, r25	; 0x01
     c8e:	a2 83       	std	Z+2, r26	; 0x02
     c90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c92:	fe 01       	movw	r30, r28
     c94:	e1 50       	subi	r30, 0x01	; 1
     c96:	fe 4f       	sbci	r31, 0xFE	; 254
     c98:	60 81       	ld	r22, Z
     c9a:	71 81       	ldd	r23, Z+1	; 0x01
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	93 81       	ldd	r25, Z+3	; 0x03
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e8       	ldi	r20, 0x80	; 128
     ca6:	5f e3       	ldi	r21, 0x3F	; 63
     ca8:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
     cac:	88 23       	and	r24, r24
     cae:	44 f4       	brge	.+16     	; 0xcc0 <run+0x27c>
		__ticks = 1;
     cb0:	fe 01       	movw	r30, r28
     cb2:	e3 50       	subi	r30, 0x03	; 3
     cb4:	fe 4f       	sbci	r31, 0xFE	; 254
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	91 83       	std	Z+1, r25	; 0x01
     cbc:	80 83       	st	Z, r24
     cbe:	64 c0       	rjmp	.+200    	; 0xd88 <run+0x344>
	else if (__tmp > 65535)
     cc0:	fe 01       	movw	r30, r28
     cc2:	e1 50       	subi	r30, 0x01	; 1
     cc4:	fe 4f       	sbci	r31, 0xFE	; 254
     cc6:	60 81       	ld	r22, Z
     cc8:	71 81       	ldd	r23, Z+1	; 0x01
     cca:	82 81       	ldd	r24, Z+2	; 0x02
     ccc:	93 81       	ldd	r25, Z+3	; 0x03
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	3f ef       	ldi	r19, 0xFF	; 255
     cd2:	4f e7       	ldi	r20, 0x7F	; 127
     cd4:	57 e4       	ldi	r21, 0x47	; 71
     cd6:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
     cda:	18 16       	cp	r1, r24
     cdc:	0c f0       	brlt	.+2      	; 0xce0 <run+0x29c>
     cde:	43 c0       	rjmp	.+134    	; 0xd66 <run+0x322>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ce0:	fe 01       	movw	r30, r28
     ce2:	ed 5f       	subi	r30, 0xFD	; 253
     ce4:	fd 4f       	sbci	r31, 0xFD	; 253
     ce6:	60 81       	ld	r22, Z
     ce8:	71 81       	ldd	r23, Z+1	; 0x01
     cea:	82 81       	ldd	r24, Z+2	; 0x02
     cec:	93 81       	ldd	r25, Z+3	; 0x03
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	40 e2       	ldi	r20, 0x20	; 32
     cf4:	51 e4       	ldi	r21, 0x41	; 65
     cf6:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     cfa:	dc 01       	movw	r26, r24
     cfc:	cb 01       	movw	r24, r22
     cfe:	8e 01       	movw	r16, r28
     d00:	03 50       	subi	r16, 0x03	; 3
     d02:	1e 4f       	sbci	r17, 0xFE	; 254
     d04:	bc 01       	movw	r22, r24
     d06:	cd 01       	movw	r24, r26
     d08:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     d0c:	dc 01       	movw	r26, r24
     d0e:	cb 01       	movw	r24, r22
     d10:	f8 01       	movw	r30, r16
     d12:	91 83       	std	Z+1, r25	; 0x01
     d14:	80 83       	st	Z, r24
     d16:	1f c0       	rjmp	.+62     	; 0xd56 <run+0x312>
     d18:	fe 01       	movw	r30, r28
     d1a:	e5 50       	subi	r30, 0x05	; 5
     d1c:	fe 4f       	sbci	r31, 0xFE	; 254
     d1e:	80 e7       	ldi	r24, 0x70	; 112
     d20:	91 e0       	ldi	r25, 0x01	; 1
     d22:	91 83       	std	Z+1, r25	; 0x01
     d24:	80 83       	st	Z, r24
     d26:	fe 01       	movw	r30, r28
     d28:	e5 50       	subi	r30, 0x05	; 5
     d2a:	fe 4f       	sbci	r31, 0xFE	; 254
     d2c:	80 81       	ld	r24, Z
     d2e:	91 81       	ldd	r25, Z+1	; 0x01
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	f1 f7       	brne	.-4      	; 0xd30 <run+0x2ec>
     d34:	fe 01       	movw	r30, r28
     d36:	e5 50       	subi	r30, 0x05	; 5
     d38:	fe 4f       	sbci	r31, 0xFE	; 254
     d3a:	91 83       	std	Z+1, r25	; 0x01
     d3c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d3e:	de 01       	movw	r26, r28
     d40:	a3 50       	subi	r26, 0x03	; 3
     d42:	be 4f       	sbci	r27, 0xFE	; 254
     d44:	fe 01       	movw	r30, r28
     d46:	e3 50       	subi	r30, 0x03	; 3
     d48:	fe 4f       	sbci	r31, 0xFE	; 254
     d4a:	80 81       	ld	r24, Z
     d4c:	91 81       	ldd	r25, Z+1	; 0x01
     d4e:	01 97       	sbiw	r24, 0x01	; 1
     d50:	11 96       	adiw	r26, 0x01	; 1
     d52:	9c 93       	st	X, r25
     d54:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d56:	fe 01       	movw	r30, r28
     d58:	e3 50       	subi	r30, 0x03	; 3
     d5a:	fe 4f       	sbci	r31, 0xFE	; 254
     d5c:	80 81       	ld	r24, Z
     d5e:	91 81       	ldd	r25, Z+1	; 0x01
     d60:	00 97       	sbiw	r24, 0x00	; 0
     d62:	d1 f6       	brne	.-76     	; 0xd18 <run+0x2d4>
     d64:	27 c0       	rjmp	.+78     	; 0xdb4 <run+0x370>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d66:	8e 01       	movw	r16, r28
     d68:	03 50       	subi	r16, 0x03	; 3
     d6a:	1e 4f       	sbci	r17, 0xFE	; 254
     d6c:	fe 01       	movw	r30, r28
     d6e:	e1 50       	subi	r30, 0x01	; 1
     d70:	fe 4f       	sbci	r31, 0xFE	; 254
     d72:	60 81       	ld	r22, Z
     d74:	71 81       	ldd	r23, Z+1	; 0x01
     d76:	82 81       	ldd	r24, Z+2	; 0x02
     d78:	93 81       	ldd	r25, Z+3	; 0x03
     d7a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     d7e:	dc 01       	movw	r26, r24
     d80:	cb 01       	movw	r24, r22
     d82:	f8 01       	movw	r30, r16
     d84:	91 83       	std	Z+1, r25	; 0x01
     d86:	80 83       	st	Z, r24
     d88:	de 01       	movw	r26, r28
     d8a:	a7 50       	subi	r26, 0x07	; 7
     d8c:	be 4f       	sbci	r27, 0xFE	; 254
     d8e:	fe 01       	movw	r30, r28
     d90:	e3 50       	subi	r30, 0x03	; 3
     d92:	fe 4f       	sbci	r31, 0xFE	; 254
     d94:	80 81       	ld	r24, Z
     d96:	91 81       	ldd	r25, Z+1	; 0x01
     d98:	8d 93       	st	X+, r24
     d9a:	9c 93       	st	X, r25
     d9c:	fe 01       	movw	r30, r28
     d9e:	e7 50       	subi	r30, 0x07	; 7
     da0:	fe 4f       	sbci	r31, 0xFE	; 254
     da2:	80 81       	ld	r24, Z
     da4:	91 81       	ldd	r25, Z+1	; 0x01
     da6:	01 97       	sbiw	r24, 0x01	; 1
     da8:	f1 f7       	brne	.-4      	; 0xda6 <run+0x362>
     daa:	fe 01       	movw	r30, r28
     dac:	e7 50       	subi	r30, 0x07	; 7
     dae:	fe 4f       	sbci	r31, 0xFE	; 254
     db0:	91 83       	std	Z+1, r25	; 0x01
     db2:	80 83       	st	Z, r24
			_delay_ms(50);
            back_mm(35);
     db4:	83 e2       	ldi	r24, 0x23	; 35
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
     dbc:	fe 01       	movw	r30, r28
     dbe:	eb 50       	subi	r30, 0x0B	; 11
     dc0:	fe 4f       	sbci	r31, 0xFE	; 254
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	a8 e4       	ldi	r26, 0x48	; 72
     dc8:	b2 e4       	ldi	r27, 0x42	; 66
     dca:	80 83       	st	Z, r24
     dcc:	91 83       	std	Z+1, r25	; 0x01
     dce:	a2 83       	std	Z+2, r26	; 0x02
     dd0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dd2:	8e 01       	movw	r16, r28
     dd4:	0f 50       	subi	r16, 0x0F	; 15
     dd6:	1e 4f       	sbci	r17, 0xFE	; 254
     dd8:	fe 01       	movw	r30, r28
     dda:	eb 50       	subi	r30, 0x0B	; 11
     ddc:	fe 4f       	sbci	r31, 0xFE	; 254
     dde:	60 81       	ld	r22, Z
     de0:	71 81       	ldd	r23, Z+1	; 0x01
     de2:	82 81       	ldd	r24, Z+2	; 0x02
     de4:	93 81       	ldd	r25, Z+3	; 0x03
     de6:	26 e6       	ldi	r18, 0x66	; 102
     de8:	36 e6       	ldi	r19, 0x66	; 102
     dea:	46 e6       	ldi	r20, 0x66	; 102
     dec:	55 e4       	ldi	r21, 0x45	; 69
     dee:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     df2:	dc 01       	movw	r26, r24
     df4:	cb 01       	movw	r24, r22
     df6:	f8 01       	movw	r30, r16
     df8:	80 83       	st	Z, r24
     dfa:	91 83       	std	Z+1, r25	; 0x01
     dfc:	a2 83       	std	Z+2, r26	; 0x02
     dfe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e00:	fe 01       	movw	r30, r28
     e02:	ef 50       	subi	r30, 0x0F	; 15
     e04:	fe 4f       	sbci	r31, 0xFE	; 254
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e8       	ldi	r20, 0x80	; 128
     e14:	5f e3       	ldi	r21, 0x3F	; 63
     e16:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
     e1a:	88 23       	and	r24, r24
     e1c:	44 f4       	brge	.+16     	; 0xe2e <run+0x3ea>
		__ticks = 1;
     e1e:	fe 01       	movw	r30, r28
     e20:	e1 51       	subi	r30, 0x11	; 17
     e22:	fe 4f       	sbci	r31, 0xFE	; 254
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	91 83       	std	Z+1, r25	; 0x01
     e2a:	80 83       	st	Z, r24
     e2c:	64 c0       	rjmp	.+200    	; 0xef6 <run+0x4b2>
	else if (__tmp > 65535)
     e2e:	fe 01       	movw	r30, r28
     e30:	ef 50       	subi	r30, 0x0F	; 15
     e32:	fe 4f       	sbci	r31, 0xFE	; 254
     e34:	60 81       	ld	r22, Z
     e36:	71 81       	ldd	r23, Z+1	; 0x01
     e38:	82 81       	ldd	r24, Z+2	; 0x02
     e3a:	93 81       	ldd	r25, Z+3	; 0x03
     e3c:	20 e0       	ldi	r18, 0x00	; 0
     e3e:	3f ef       	ldi	r19, 0xFF	; 255
     e40:	4f e7       	ldi	r20, 0x7F	; 127
     e42:	57 e4       	ldi	r21, 0x47	; 71
     e44:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
     e48:	18 16       	cp	r1, r24
     e4a:	0c f0       	brlt	.+2      	; 0xe4e <run+0x40a>
     e4c:	43 c0       	rjmp	.+134    	; 0xed4 <run+0x490>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e4e:	fe 01       	movw	r30, r28
     e50:	eb 50       	subi	r30, 0x0B	; 11
     e52:	fe 4f       	sbci	r31, 0xFE	; 254
     e54:	60 81       	ld	r22, Z
     e56:	71 81       	ldd	r23, Z+1	; 0x01
     e58:	82 81       	ldd	r24, Z+2	; 0x02
     e5a:	93 81       	ldd	r25, Z+3	; 0x03
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	40 e2       	ldi	r20, 0x20	; 32
     e62:	51 e4       	ldi	r21, 0x41	; 65
     e64:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     e68:	dc 01       	movw	r26, r24
     e6a:	cb 01       	movw	r24, r22
     e6c:	8e 01       	movw	r16, r28
     e6e:	01 51       	subi	r16, 0x11	; 17
     e70:	1e 4f       	sbci	r17, 0xFE	; 254
     e72:	bc 01       	movw	r22, r24
     e74:	cd 01       	movw	r24, r26
     e76:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     e7a:	dc 01       	movw	r26, r24
     e7c:	cb 01       	movw	r24, r22
     e7e:	f8 01       	movw	r30, r16
     e80:	91 83       	std	Z+1, r25	; 0x01
     e82:	80 83       	st	Z, r24
     e84:	1f c0       	rjmp	.+62     	; 0xec4 <run+0x480>
     e86:	fe 01       	movw	r30, r28
     e88:	e3 51       	subi	r30, 0x13	; 19
     e8a:	fe 4f       	sbci	r31, 0xFE	; 254
     e8c:	80 e7       	ldi	r24, 0x70	; 112
     e8e:	91 e0       	ldi	r25, 0x01	; 1
     e90:	91 83       	std	Z+1, r25	; 0x01
     e92:	80 83       	st	Z, r24
     e94:	fe 01       	movw	r30, r28
     e96:	e3 51       	subi	r30, 0x13	; 19
     e98:	fe 4f       	sbci	r31, 0xFE	; 254
     e9a:	80 81       	ld	r24, Z
     e9c:	91 81       	ldd	r25, Z+1	; 0x01
     e9e:	01 97       	sbiw	r24, 0x01	; 1
     ea0:	f1 f7       	brne	.-4      	; 0xe9e <run+0x45a>
     ea2:	fe 01       	movw	r30, r28
     ea4:	e3 51       	subi	r30, 0x13	; 19
     ea6:	fe 4f       	sbci	r31, 0xFE	; 254
     ea8:	91 83       	std	Z+1, r25	; 0x01
     eaa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     eac:	de 01       	movw	r26, r28
     eae:	a1 51       	subi	r26, 0x11	; 17
     eb0:	be 4f       	sbci	r27, 0xFE	; 254
     eb2:	fe 01       	movw	r30, r28
     eb4:	e1 51       	subi	r30, 0x11	; 17
     eb6:	fe 4f       	sbci	r31, 0xFE	; 254
     eb8:	80 81       	ld	r24, Z
     eba:	91 81       	ldd	r25, Z+1	; 0x01
     ebc:	01 97       	sbiw	r24, 0x01	; 1
     ebe:	11 96       	adiw	r26, 0x01	; 1
     ec0:	9c 93       	st	X, r25
     ec2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ec4:	fe 01       	movw	r30, r28
     ec6:	e1 51       	subi	r30, 0x11	; 17
     ec8:	fe 4f       	sbci	r31, 0xFE	; 254
     eca:	80 81       	ld	r24, Z
     ecc:	91 81       	ldd	r25, Z+1	; 0x01
     ece:	00 97       	sbiw	r24, 0x00	; 0
     ed0:	d1 f6       	brne	.-76     	; 0xe86 <run+0x442>
     ed2:	27 c0       	rjmp	.+78     	; 0xf22 <run+0x4de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ed4:	8e 01       	movw	r16, r28
     ed6:	01 51       	subi	r16, 0x11	; 17
     ed8:	1e 4f       	sbci	r17, 0xFE	; 254
     eda:	fe 01       	movw	r30, r28
     edc:	ef 50       	subi	r30, 0x0F	; 15
     ede:	fe 4f       	sbci	r31, 0xFE	; 254
     ee0:	60 81       	ld	r22, Z
     ee2:	71 81       	ldd	r23, Z+1	; 0x01
     ee4:	82 81       	ldd	r24, Z+2	; 0x02
     ee6:	93 81       	ldd	r25, Z+3	; 0x03
     ee8:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     eec:	dc 01       	movw	r26, r24
     eee:	cb 01       	movw	r24, r22
     ef0:	f8 01       	movw	r30, r16
     ef2:	91 83       	std	Z+1, r25	; 0x01
     ef4:	80 83       	st	Z, r24
     ef6:	de 01       	movw	r26, r28
     ef8:	a5 51       	subi	r26, 0x15	; 21
     efa:	be 4f       	sbci	r27, 0xFE	; 254
     efc:	fe 01       	movw	r30, r28
     efe:	e1 51       	subi	r30, 0x11	; 17
     f00:	fe 4f       	sbci	r31, 0xFE	; 254
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	8d 93       	st	X+, r24
     f08:	9c 93       	st	X, r25
     f0a:	fe 01       	movw	r30, r28
     f0c:	e5 51       	subi	r30, 0x15	; 21
     f0e:	fe 4f       	sbci	r31, 0xFE	; 254
     f10:	80 81       	ld	r24, Z
     f12:	91 81       	ldd	r25, Z+1	; 0x01
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	f1 f7       	brne	.-4      	; 0xf14 <run+0x4d0>
     f18:	fe 01       	movw	r30, r28
     f1a:	e5 51       	subi	r30, 0x15	; 21
     f1c:	fe 4f       	sbci	r31, 0xFE	; 254
     f1e:	91 83       	std	Z+1, r25	; 0x01
     f20:	80 83       	st	Z, r24
			_delay_ms(50);
			stop();
     f22:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
     f26:	fe 01       	movw	r30, r28
     f28:	e9 51       	subi	r30, 0x19	; 25
     f2a:	fe 4f       	sbci	r31, 0xFE	; 254
     f2c:	80 e0       	ldi	r24, 0x00	; 0
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	a8 ec       	ldi	r26, 0xC8	; 200
     f32:	b2 e4       	ldi	r27, 0x42	; 66
     f34:	80 83       	st	Z, r24
     f36:	91 83       	std	Z+1, r25	; 0x01
     f38:	a2 83       	std	Z+2, r26	; 0x02
     f3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f3c:	8e 01       	movw	r16, r28
     f3e:	0d 51       	subi	r16, 0x1D	; 29
     f40:	1e 4f       	sbci	r17, 0xFE	; 254
     f42:	fe 01       	movw	r30, r28
     f44:	e9 51       	subi	r30, 0x19	; 25
     f46:	fe 4f       	sbci	r31, 0xFE	; 254
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	82 81       	ldd	r24, Z+2	; 0x02
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	26 e6       	ldi	r18, 0x66	; 102
     f52:	36 e6       	ldi	r19, 0x66	; 102
     f54:	46 e6       	ldi	r20, 0x66	; 102
     f56:	55 e4       	ldi	r21, 0x45	; 69
     f58:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	f8 01       	movw	r30, r16
     f62:	80 83       	st	Z, r24
     f64:	91 83       	std	Z+1, r25	; 0x01
     f66:	a2 83       	std	Z+2, r26	; 0x02
     f68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f6a:	fe 01       	movw	r30, r28
     f6c:	ed 51       	subi	r30, 0x1D	; 29
     f6e:	fe 4f       	sbci	r31, 0xFE	; 254
     f70:	60 81       	ld	r22, Z
     f72:	71 81       	ldd	r23, Z+1	; 0x01
     f74:	82 81       	ldd	r24, Z+2	; 0x02
     f76:	93 81       	ldd	r25, Z+3	; 0x03
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	40 e8       	ldi	r20, 0x80	; 128
     f7e:	5f e3       	ldi	r21, 0x3F	; 63
     f80:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
     f84:	88 23       	and	r24, r24
     f86:	44 f4       	brge	.+16     	; 0xf98 <run+0x554>
		__ticks = 1;
     f88:	fe 01       	movw	r30, r28
     f8a:	ef 51       	subi	r30, 0x1F	; 31
     f8c:	fe 4f       	sbci	r31, 0xFE	; 254
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	91 83       	std	Z+1, r25	; 0x01
     f94:	80 83       	st	Z, r24
     f96:	64 c0       	rjmp	.+200    	; 0x1060 <run+0x61c>
	else if (__tmp > 65535)
     f98:	fe 01       	movw	r30, r28
     f9a:	ed 51       	subi	r30, 0x1D	; 29
     f9c:	fe 4f       	sbci	r31, 0xFE	; 254
     f9e:	60 81       	ld	r22, Z
     fa0:	71 81       	ldd	r23, Z+1	; 0x01
     fa2:	82 81       	ldd	r24, Z+2	; 0x02
     fa4:	93 81       	ldd	r25, Z+3	; 0x03
     fa6:	20 e0       	ldi	r18, 0x00	; 0
     fa8:	3f ef       	ldi	r19, 0xFF	; 255
     faa:	4f e7       	ldi	r20, 0x7F	; 127
     fac:	57 e4       	ldi	r21, 0x47	; 71
     fae:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
     fb2:	18 16       	cp	r1, r24
     fb4:	0c f0       	brlt	.+2      	; 0xfb8 <run+0x574>
     fb6:	43 c0       	rjmp	.+134    	; 0x103e <run+0x5fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fb8:	fe 01       	movw	r30, r28
     fba:	e9 51       	subi	r30, 0x19	; 25
     fbc:	fe 4f       	sbci	r31, 0xFE	; 254
     fbe:	60 81       	ld	r22, Z
     fc0:	71 81       	ldd	r23, Z+1	; 0x01
     fc2:	82 81       	ldd	r24, Z+2	; 0x02
     fc4:	93 81       	ldd	r25, Z+3	; 0x03
     fc6:	20 e0       	ldi	r18, 0x00	; 0
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	40 e2       	ldi	r20, 0x20	; 32
     fcc:	51 e4       	ldi	r21, 0x41	; 65
     fce:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
     fd2:	dc 01       	movw	r26, r24
     fd4:	cb 01       	movw	r24, r22
     fd6:	8e 01       	movw	r16, r28
     fd8:	0f 51       	subi	r16, 0x1F	; 31
     fda:	1e 4f       	sbci	r17, 0xFE	; 254
     fdc:	bc 01       	movw	r22, r24
     fde:	cd 01       	movw	r24, r26
     fe0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	f8 01       	movw	r30, r16
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
     fee:	1f c0       	rjmp	.+62     	; 0x102e <run+0x5ea>
     ff0:	fe 01       	movw	r30, r28
     ff2:	e1 52       	subi	r30, 0x21	; 33
     ff4:	fe 4f       	sbci	r31, 0xFE	; 254
     ff6:	80 e7       	ldi	r24, 0x70	; 112
     ff8:	91 e0       	ldi	r25, 0x01	; 1
     ffa:	91 83       	std	Z+1, r25	; 0x01
     ffc:	80 83       	st	Z, r24
     ffe:	fe 01       	movw	r30, r28
    1000:	e1 52       	subi	r30, 0x21	; 33
    1002:	fe 4f       	sbci	r31, 0xFE	; 254
    1004:	80 81       	ld	r24, Z
    1006:	91 81       	ldd	r25, Z+1	; 0x01
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	f1 f7       	brne	.-4      	; 0x1008 <run+0x5c4>
    100c:	fe 01       	movw	r30, r28
    100e:	e1 52       	subi	r30, 0x21	; 33
    1010:	fe 4f       	sbci	r31, 0xFE	; 254
    1012:	91 83       	std	Z+1, r25	; 0x01
    1014:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1016:	de 01       	movw	r26, r28
    1018:	af 51       	subi	r26, 0x1F	; 31
    101a:	be 4f       	sbci	r27, 0xFE	; 254
    101c:	fe 01       	movw	r30, r28
    101e:	ef 51       	subi	r30, 0x1F	; 31
    1020:	fe 4f       	sbci	r31, 0xFE	; 254
    1022:	80 81       	ld	r24, Z
    1024:	91 81       	ldd	r25, Z+1	; 0x01
    1026:	01 97       	sbiw	r24, 0x01	; 1
    1028:	11 96       	adiw	r26, 0x01	; 1
    102a:	9c 93       	st	X, r25
    102c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    102e:	fe 01       	movw	r30, r28
    1030:	ef 51       	subi	r30, 0x1F	; 31
    1032:	fe 4f       	sbci	r31, 0xFE	; 254
    1034:	80 81       	ld	r24, Z
    1036:	91 81       	ldd	r25, Z+1	; 0x01
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	d1 f6       	brne	.-76     	; 0xff0 <run+0x5ac>
    103c:	27 c0       	rjmp	.+78     	; 0x108c <run+0x648>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    103e:	8e 01       	movw	r16, r28
    1040:	0f 51       	subi	r16, 0x1F	; 31
    1042:	1e 4f       	sbci	r17, 0xFE	; 254
    1044:	fe 01       	movw	r30, r28
    1046:	ed 51       	subi	r30, 0x1D	; 29
    1048:	fe 4f       	sbci	r31, 0xFE	; 254
    104a:	60 81       	ld	r22, Z
    104c:	71 81       	ldd	r23, Z+1	; 0x01
    104e:	82 81       	ldd	r24, Z+2	; 0x02
    1050:	93 81       	ldd	r25, Z+3	; 0x03
    1052:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	f8 01       	movw	r30, r16
    105c:	91 83       	std	Z+1, r25	; 0x01
    105e:	80 83       	st	Z, r24
    1060:	de 01       	movw	r26, r28
    1062:	a3 52       	subi	r26, 0x23	; 35
    1064:	be 4f       	sbci	r27, 0xFE	; 254
    1066:	fe 01       	movw	r30, r28
    1068:	ef 51       	subi	r30, 0x1F	; 31
    106a:	fe 4f       	sbci	r31, 0xFE	; 254
    106c:	80 81       	ld	r24, Z
    106e:	91 81       	ldd	r25, Z+1	; 0x01
    1070:	8d 93       	st	X+, r24
    1072:	9c 93       	st	X, r25
    1074:	fe 01       	movw	r30, r28
    1076:	e3 52       	subi	r30, 0x23	; 35
    1078:	fe 4f       	sbci	r31, 0xFE	; 254
    107a:	80 81       	ld	r24, Z
    107c:	91 81       	ldd	r25, Z+1	; 0x01
    107e:	01 97       	sbiw	r24, 0x01	; 1
    1080:	f1 f7       	brne	.-4      	; 0x107e <run+0x63a>
    1082:	fe 01       	movw	r30, r28
    1084:	e3 52       	subi	r30, 0x23	; 35
    1086:	fe 4f       	sbci	r31, 0xFE	; 254
    1088:	91 83       	std	Z+1, r25	; 0x01
    108a:	80 83       	st	Z, r24
			_delay_ms(100);
			forward_mm(190);
    108c:	8e eb       	ldi	r24, 0xBE	; 190
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
			stop();
    1094:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    1098:	fe 01       	movw	r30, r28
    109a:	e7 52       	subi	r30, 0x27	; 39
    109c:	fe 4f       	sbci	r31, 0xFE	; 254
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a8 ec       	ldi	r26, 0xC8	; 200
    10a4:	b2 e4       	ldi	r27, 0x42	; 66
    10a6:	80 83       	st	Z, r24
    10a8:	91 83       	std	Z+1, r25	; 0x01
    10aa:	a2 83       	std	Z+2, r26	; 0x02
    10ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ae:	8e 01       	movw	r16, r28
    10b0:	0b 52       	subi	r16, 0x2B	; 43
    10b2:	1e 4f       	sbci	r17, 0xFE	; 254
    10b4:	fe 01       	movw	r30, r28
    10b6:	e7 52       	subi	r30, 0x27	; 39
    10b8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ba:	60 81       	ld	r22, Z
    10bc:	71 81       	ldd	r23, Z+1	; 0x01
    10be:	82 81       	ldd	r24, Z+2	; 0x02
    10c0:	93 81       	ldd	r25, Z+3	; 0x03
    10c2:	26 e6       	ldi	r18, 0x66	; 102
    10c4:	36 e6       	ldi	r19, 0x66	; 102
    10c6:	46 e6       	ldi	r20, 0x66	; 102
    10c8:	55 e4       	ldi	r21, 0x45	; 69
    10ca:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    10ce:	dc 01       	movw	r26, r24
    10d0:	cb 01       	movw	r24, r22
    10d2:	f8 01       	movw	r30, r16
    10d4:	80 83       	st	Z, r24
    10d6:	91 83       	std	Z+1, r25	; 0x01
    10d8:	a2 83       	std	Z+2, r26	; 0x02
    10da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10dc:	fe 01       	movw	r30, r28
    10de:	eb 52       	subi	r30, 0x2B	; 43
    10e0:	fe 4f       	sbci	r31, 0xFE	; 254
    10e2:	60 81       	ld	r22, Z
    10e4:	71 81       	ldd	r23, Z+1	; 0x01
    10e6:	82 81       	ldd	r24, Z+2	; 0x02
    10e8:	93 81       	ldd	r25, Z+3	; 0x03
    10ea:	20 e0       	ldi	r18, 0x00	; 0
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	40 e8       	ldi	r20, 0x80	; 128
    10f0:	5f e3       	ldi	r21, 0x3F	; 63
    10f2:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    10f6:	88 23       	and	r24, r24
    10f8:	44 f4       	brge	.+16     	; 0x110a <run+0x6c6>
		__ticks = 1;
    10fa:	fe 01       	movw	r30, r28
    10fc:	ed 52       	subi	r30, 0x2D	; 45
    10fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	91 83       	std	Z+1, r25	; 0x01
    1106:	80 83       	st	Z, r24
    1108:	64 c0       	rjmp	.+200    	; 0x11d2 <run+0x78e>
	else if (__tmp > 65535)
    110a:	fe 01       	movw	r30, r28
    110c:	eb 52       	subi	r30, 0x2B	; 43
    110e:	fe 4f       	sbci	r31, 0xFE	; 254
    1110:	60 81       	ld	r22, Z
    1112:	71 81       	ldd	r23, Z+1	; 0x01
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	93 81       	ldd	r25, Z+3	; 0x03
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	3f ef       	ldi	r19, 0xFF	; 255
    111c:	4f e7       	ldi	r20, 0x7F	; 127
    111e:	57 e4       	ldi	r21, 0x47	; 71
    1120:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1124:	18 16       	cp	r1, r24
    1126:	0c f0       	brlt	.+2      	; 0x112a <run+0x6e6>
    1128:	43 c0       	rjmp	.+134    	; 0x11b0 <run+0x76c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    112a:	fe 01       	movw	r30, r28
    112c:	e7 52       	subi	r30, 0x27	; 39
    112e:	fe 4f       	sbci	r31, 0xFE	; 254
    1130:	60 81       	ld	r22, Z
    1132:	71 81       	ldd	r23, Z+1	; 0x01
    1134:	82 81       	ldd	r24, Z+2	; 0x02
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	20 e0       	ldi	r18, 0x00	; 0
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	40 e2       	ldi	r20, 0x20	; 32
    113e:	51 e4       	ldi	r21, 0x41	; 65
    1140:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1144:	dc 01       	movw	r26, r24
    1146:	cb 01       	movw	r24, r22
    1148:	8e 01       	movw	r16, r28
    114a:	0d 52       	subi	r16, 0x2D	; 45
    114c:	1e 4f       	sbci	r17, 0xFE	; 254
    114e:	bc 01       	movw	r22, r24
    1150:	cd 01       	movw	r24, r26
    1152:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1156:	dc 01       	movw	r26, r24
    1158:	cb 01       	movw	r24, r22
    115a:	f8 01       	movw	r30, r16
    115c:	91 83       	std	Z+1, r25	; 0x01
    115e:	80 83       	st	Z, r24
    1160:	1f c0       	rjmp	.+62     	; 0x11a0 <run+0x75c>
    1162:	fe 01       	movw	r30, r28
    1164:	ef 52       	subi	r30, 0x2F	; 47
    1166:	fe 4f       	sbci	r31, 0xFE	; 254
    1168:	80 e7       	ldi	r24, 0x70	; 112
    116a:	91 e0       	ldi	r25, 0x01	; 1
    116c:	91 83       	std	Z+1, r25	; 0x01
    116e:	80 83       	st	Z, r24
    1170:	fe 01       	movw	r30, r28
    1172:	ef 52       	subi	r30, 0x2F	; 47
    1174:	fe 4f       	sbci	r31, 0xFE	; 254
    1176:	80 81       	ld	r24, Z
    1178:	91 81       	ldd	r25, Z+1	; 0x01
    117a:	01 97       	sbiw	r24, 0x01	; 1
    117c:	f1 f7       	brne	.-4      	; 0x117a <run+0x736>
    117e:	fe 01       	movw	r30, r28
    1180:	ef 52       	subi	r30, 0x2F	; 47
    1182:	fe 4f       	sbci	r31, 0xFE	; 254
    1184:	91 83       	std	Z+1, r25	; 0x01
    1186:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1188:	de 01       	movw	r26, r28
    118a:	ad 52       	subi	r26, 0x2D	; 45
    118c:	be 4f       	sbci	r27, 0xFE	; 254
    118e:	fe 01       	movw	r30, r28
    1190:	ed 52       	subi	r30, 0x2D	; 45
    1192:	fe 4f       	sbci	r31, 0xFE	; 254
    1194:	80 81       	ld	r24, Z
    1196:	91 81       	ldd	r25, Z+1	; 0x01
    1198:	01 97       	sbiw	r24, 0x01	; 1
    119a:	11 96       	adiw	r26, 0x01	; 1
    119c:	9c 93       	st	X, r25
    119e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11a0:	fe 01       	movw	r30, r28
    11a2:	ed 52       	subi	r30, 0x2D	; 45
    11a4:	fe 4f       	sbci	r31, 0xFE	; 254
    11a6:	80 81       	ld	r24, Z
    11a8:	91 81       	ldd	r25, Z+1	; 0x01
    11aa:	00 97       	sbiw	r24, 0x00	; 0
    11ac:	d1 f6       	brne	.-76     	; 0x1162 <run+0x71e>
    11ae:	27 c0       	rjmp	.+78     	; 0x11fe <run+0x7ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11b0:	8e 01       	movw	r16, r28
    11b2:	0d 52       	subi	r16, 0x2D	; 45
    11b4:	1e 4f       	sbci	r17, 0xFE	; 254
    11b6:	fe 01       	movw	r30, r28
    11b8:	eb 52       	subi	r30, 0x2B	; 43
    11ba:	fe 4f       	sbci	r31, 0xFE	; 254
    11bc:	60 81       	ld	r22, Z
    11be:	71 81       	ldd	r23, Z+1	; 0x01
    11c0:	82 81       	ldd	r24, Z+2	; 0x02
    11c2:	93 81       	ldd	r25, Z+3	; 0x03
    11c4:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    11c8:	dc 01       	movw	r26, r24
    11ca:	cb 01       	movw	r24, r22
    11cc:	f8 01       	movw	r30, r16
    11ce:	91 83       	std	Z+1, r25	; 0x01
    11d0:	80 83       	st	Z, r24
    11d2:	de 01       	movw	r26, r28
    11d4:	a1 53       	subi	r26, 0x31	; 49
    11d6:	be 4f       	sbci	r27, 0xFE	; 254
    11d8:	fe 01       	movw	r30, r28
    11da:	ed 52       	subi	r30, 0x2D	; 45
    11dc:	fe 4f       	sbci	r31, 0xFE	; 254
    11de:	80 81       	ld	r24, Z
    11e0:	91 81       	ldd	r25, Z+1	; 0x01
    11e2:	8d 93       	st	X+, r24
    11e4:	9c 93       	st	X, r25
    11e6:	fe 01       	movw	r30, r28
    11e8:	e1 53       	subi	r30, 0x31	; 49
    11ea:	fe 4f       	sbci	r31, 0xFE	; 254
    11ec:	80 81       	ld	r24, Z
    11ee:	91 81       	ldd	r25, Z+1	; 0x01
    11f0:	01 97       	sbiw	r24, 0x01	; 1
    11f2:	f1 f7       	brne	.-4      	; 0x11f0 <run+0x7ac>
    11f4:	fe 01       	movw	r30, r28
    11f6:	e1 53       	subi	r30, 0x31	; 49
    11f8:	fe 4f       	sbci	r31, 0xFE	; 254
    11fa:	91 83       	std	Z+1, r25	; 0x01
    11fc:	80 83       	st	Z, r24
			_delay_ms(100);	
			update_orientation(data);		
    11fe:	fe 01       	movw	r30, r28
    1200:	eb 5e       	subi	r30, 0xEB	; 235
    1202:	fd 4f       	sbci	r31, 0xFD	; 253
    1204:	80 81       	ld	r24, Z
    1206:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
    120a:	2c c7       	rjmp	.+3672   	; 0x2064 <run+0x1620>
		}
        else if((data == 0x34 && orientation==2) || (data == 0x32 && orientation==0) || (data == 0x33 && orientation==1) || (data == 0x31 && orientation==3))
    120c:	fe 01       	movw	r30, r28
    120e:	eb 5e       	subi	r30, 0xEB	; 235
    1210:	fd 4f       	sbci	r31, 0xFD	; 253
    1212:	80 81       	ld	r24, Z
    1214:	84 33       	cpi	r24, 0x34	; 52
    1216:	39 f4       	brne	.+14     	; 0x1226 <run+0x7e2>
    1218:	80 91 11 03 	lds	r24, 0x0311
    121c:	90 91 12 03 	lds	r25, 0x0312
    1220:	82 30       	cpi	r24, 0x02	; 2
    1222:	91 05       	cpc	r25, r1
    1224:	41 f1       	breq	.+80     	; 0x1276 <run+0x832>
    1226:	fe 01       	movw	r30, r28
    1228:	eb 5e       	subi	r30, 0xEB	; 235
    122a:	fd 4f       	sbci	r31, 0xFD	; 253
    122c:	80 81       	ld	r24, Z
    122e:	82 33       	cpi	r24, 0x32	; 50
    1230:	31 f4       	brne	.+12     	; 0x123e <run+0x7fa>
    1232:	80 91 11 03 	lds	r24, 0x0311
    1236:	90 91 12 03 	lds	r25, 0x0312
    123a:	00 97       	sbiw	r24, 0x00	; 0
    123c:	e1 f0       	breq	.+56     	; 0x1276 <run+0x832>
    123e:	fe 01       	movw	r30, r28
    1240:	eb 5e       	subi	r30, 0xEB	; 235
    1242:	fd 4f       	sbci	r31, 0xFD	; 253
    1244:	80 81       	ld	r24, Z
    1246:	83 33       	cpi	r24, 0x33	; 51
    1248:	39 f4       	brne	.+14     	; 0x1258 <run+0x814>
    124a:	80 91 11 03 	lds	r24, 0x0311
    124e:	90 91 12 03 	lds	r25, 0x0312
    1252:	81 30       	cpi	r24, 0x01	; 1
    1254:	91 05       	cpc	r25, r1
    1256:	79 f0       	breq	.+30     	; 0x1276 <run+0x832>
    1258:	fe 01       	movw	r30, r28
    125a:	eb 5e       	subi	r30, 0xEB	; 235
    125c:	fd 4f       	sbci	r31, 0xFD	; 253
    125e:	80 81       	ld	r24, Z
    1260:	81 33       	cpi	r24, 0x31	; 49
    1262:	09 f0       	breq	.+2      	; 0x1266 <run+0x822>
    1264:	ef c2       	rjmp	.+1502   	; 0x1844 <run+0xe00>
    1266:	80 91 11 03 	lds	r24, 0x0311
    126a:	90 91 12 03 	lds	r25, 0x0312
    126e:	83 30       	cpi	r24, 0x03	; 3
    1270:	91 05       	cpc	r25, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <run+0x832>
    1274:	e7 c2       	rjmp	.+1486   	; 0x1844 <run+0xe00>
			{
			forward_mm(30);
    1276:	8e e1       	ldi	r24, 0x1E	; 30
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
    127e:	fe 01       	movw	r30, r28
    1280:	e5 53       	subi	r30, 0x35	; 53
    1282:	fe 4f       	sbci	r31, 0xFE	; 254
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	a8 e4       	ldi	r26, 0x48	; 72
    128a:	b2 e4       	ldi	r27, 0x42	; 66
    128c:	80 83       	st	Z, r24
    128e:	91 83       	std	Z+1, r25	; 0x01
    1290:	a2 83       	std	Z+2, r26	; 0x02
    1292:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1294:	8e 01       	movw	r16, r28
    1296:	09 53       	subi	r16, 0x39	; 57
    1298:	1e 4f       	sbci	r17, 0xFE	; 254
    129a:	fe 01       	movw	r30, r28
    129c:	e5 53       	subi	r30, 0x35	; 53
    129e:	fe 4f       	sbci	r31, 0xFE	; 254
    12a0:	60 81       	ld	r22, Z
    12a2:	71 81       	ldd	r23, Z+1	; 0x01
    12a4:	82 81       	ldd	r24, Z+2	; 0x02
    12a6:	93 81       	ldd	r25, Z+3	; 0x03
    12a8:	26 e6       	ldi	r18, 0x66	; 102
    12aa:	36 e6       	ldi	r19, 0x66	; 102
    12ac:	46 e6       	ldi	r20, 0x66	; 102
    12ae:	55 e4       	ldi	r21, 0x45	; 69
    12b0:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    12b4:	dc 01       	movw	r26, r24
    12b6:	cb 01       	movw	r24, r22
    12b8:	f8 01       	movw	r30, r16
    12ba:	80 83       	st	Z, r24
    12bc:	91 83       	std	Z+1, r25	; 0x01
    12be:	a2 83       	std	Z+2, r26	; 0x02
    12c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12c2:	fe 01       	movw	r30, r28
    12c4:	e9 53       	subi	r30, 0x39	; 57
    12c6:	fe 4f       	sbci	r31, 0xFE	; 254
    12c8:	60 81       	ld	r22, Z
    12ca:	71 81       	ldd	r23, Z+1	; 0x01
    12cc:	82 81       	ldd	r24, Z+2	; 0x02
    12ce:	93 81       	ldd	r25, Z+3	; 0x03
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	40 e8       	ldi	r20, 0x80	; 128
    12d6:	5f e3       	ldi	r21, 0x3F	; 63
    12d8:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    12dc:	88 23       	and	r24, r24
    12de:	44 f4       	brge	.+16     	; 0x12f0 <run+0x8ac>
		__ticks = 1;
    12e0:	fe 01       	movw	r30, r28
    12e2:	eb 53       	subi	r30, 0x3B	; 59
    12e4:	fe 4f       	sbci	r31, 0xFE	; 254
    12e6:	81 e0       	ldi	r24, 0x01	; 1
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	91 83       	std	Z+1, r25	; 0x01
    12ec:	80 83       	st	Z, r24
    12ee:	64 c0       	rjmp	.+200    	; 0x13b8 <run+0x974>
	else if (__tmp > 65535)
    12f0:	fe 01       	movw	r30, r28
    12f2:	e9 53       	subi	r30, 0x39	; 57
    12f4:	fe 4f       	sbci	r31, 0xFE	; 254
    12f6:	60 81       	ld	r22, Z
    12f8:	71 81       	ldd	r23, Z+1	; 0x01
    12fa:	82 81       	ldd	r24, Z+2	; 0x02
    12fc:	93 81       	ldd	r25, Z+3	; 0x03
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	3f ef       	ldi	r19, 0xFF	; 255
    1302:	4f e7       	ldi	r20, 0x7F	; 127
    1304:	57 e4       	ldi	r21, 0x47	; 71
    1306:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    130a:	18 16       	cp	r1, r24
    130c:	0c f0       	brlt	.+2      	; 0x1310 <run+0x8cc>
    130e:	43 c0       	rjmp	.+134    	; 0x1396 <run+0x952>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1310:	fe 01       	movw	r30, r28
    1312:	e5 53       	subi	r30, 0x35	; 53
    1314:	fe 4f       	sbci	r31, 0xFE	; 254
    1316:	60 81       	ld	r22, Z
    1318:	71 81       	ldd	r23, Z+1	; 0x01
    131a:	82 81       	ldd	r24, Z+2	; 0x02
    131c:	93 81       	ldd	r25, Z+3	; 0x03
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	40 e2       	ldi	r20, 0x20	; 32
    1324:	51 e4       	ldi	r21, 0x41	; 65
    1326:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    132a:	dc 01       	movw	r26, r24
    132c:	cb 01       	movw	r24, r22
    132e:	8e 01       	movw	r16, r28
    1330:	0b 53       	subi	r16, 0x3B	; 59
    1332:	1e 4f       	sbci	r17, 0xFE	; 254
    1334:	bc 01       	movw	r22, r24
    1336:	cd 01       	movw	r24, r26
    1338:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    133c:	dc 01       	movw	r26, r24
    133e:	cb 01       	movw	r24, r22
    1340:	f8 01       	movw	r30, r16
    1342:	91 83       	std	Z+1, r25	; 0x01
    1344:	80 83       	st	Z, r24
    1346:	1f c0       	rjmp	.+62     	; 0x1386 <run+0x942>
    1348:	fe 01       	movw	r30, r28
    134a:	ed 53       	subi	r30, 0x3D	; 61
    134c:	fe 4f       	sbci	r31, 0xFE	; 254
    134e:	80 e7       	ldi	r24, 0x70	; 112
    1350:	91 e0       	ldi	r25, 0x01	; 1
    1352:	91 83       	std	Z+1, r25	; 0x01
    1354:	80 83       	st	Z, r24
    1356:	fe 01       	movw	r30, r28
    1358:	ed 53       	subi	r30, 0x3D	; 61
    135a:	fe 4f       	sbci	r31, 0xFE	; 254
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	01 97       	sbiw	r24, 0x01	; 1
    1362:	f1 f7       	brne	.-4      	; 0x1360 <run+0x91c>
    1364:	fe 01       	movw	r30, r28
    1366:	ed 53       	subi	r30, 0x3D	; 61
    1368:	fe 4f       	sbci	r31, 0xFE	; 254
    136a:	91 83       	std	Z+1, r25	; 0x01
    136c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    136e:	de 01       	movw	r26, r28
    1370:	ab 53       	subi	r26, 0x3B	; 59
    1372:	be 4f       	sbci	r27, 0xFE	; 254
    1374:	fe 01       	movw	r30, r28
    1376:	eb 53       	subi	r30, 0x3B	; 59
    1378:	fe 4f       	sbci	r31, 0xFE	; 254
    137a:	80 81       	ld	r24, Z
    137c:	91 81       	ldd	r25, Z+1	; 0x01
    137e:	01 97       	sbiw	r24, 0x01	; 1
    1380:	11 96       	adiw	r26, 0x01	; 1
    1382:	9c 93       	st	X, r25
    1384:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1386:	fe 01       	movw	r30, r28
    1388:	eb 53       	subi	r30, 0x3B	; 59
    138a:	fe 4f       	sbci	r31, 0xFE	; 254
    138c:	80 81       	ld	r24, Z
    138e:	91 81       	ldd	r25, Z+1	; 0x01
    1390:	00 97       	sbiw	r24, 0x00	; 0
    1392:	d1 f6       	brne	.-76     	; 0x1348 <run+0x904>
    1394:	27 c0       	rjmp	.+78     	; 0x13e4 <run+0x9a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1396:	8e 01       	movw	r16, r28
    1398:	0b 53       	subi	r16, 0x3B	; 59
    139a:	1e 4f       	sbci	r17, 0xFE	; 254
    139c:	fe 01       	movw	r30, r28
    139e:	e9 53       	subi	r30, 0x39	; 57
    13a0:	fe 4f       	sbci	r31, 0xFE	; 254
    13a2:	60 81       	ld	r22, Z
    13a4:	71 81       	ldd	r23, Z+1	; 0x01
    13a6:	82 81       	ldd	r24, Z+2	; 0x02
    13a8:	93 81       	ldd	r25, Z+3	; 0x03
    13aa:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    13ae:	dc 01       	movw	r26, r24
    13b0:	cb 01       	movw	r24, r22
    13b2:	f8 01       	movw	r30, r16
    13b4:	91 83       	std	Z+1, r25	; 0x01
    13b6:	80 83       	st	Z, r24
    13b8:	de 01       	movw	r26, r28
    13ba:	af 53       	subi	r26, 0x3F	; 63
    13bc:	be 4f       	sbci	r27, 0xFE	; 254
    13be:	fe 01       	movw	r30, r28
    13c0:	eb 53       	subi	r30, 0x3B	; 59
    13c2:	fe 4f       	sbci	r31, 0xFE	; 254
    13c4:	80 81       	ld	r24, Z
    13c6:	91 81       	ldd	r25, Z+1	; 0x01
    13c8:	8d 93       	st	X+, r24
    13ca:	9c 93       	st	X, r25
    13cc:	fe 01       	movw	r30, r28
    13ce:	ef 53       	subi	r30, 0x3F	; 63
    13d0:	fe 4f       	sbci	r31, 0xFE	; 254
    13d2:	80 81       	ld	r24, Z
    13d4:	91 81       	ldd	r25, Z+1	; 0x01
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	f1 f7       	brne	.-4      	; 0x13d6 <run+0x992>
    13da:	fe 01       	movw	r30, r28
    13dc:	ef 53       	subi	r30, 0x3F	; 63
    13de:	fe 4f       	sbci	r31, 0xFE	; 254
    13e0:	91 83       	std	Z+1, r25	; 0x01
    13e2:	80 83       	st	Z, r24
			_delay_ms(50);
		    left_degrees(88);
    13e4:	88 e5       	ldi	r24, 0x58	; 88
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	0e 94 b0 03 	call	0x760	; 0x760 <left_degrees>
    13ec:	fe 01       	movw	r30, r28
    13ee:	e3 54       	subi	r30, 0x43	; 67
    13f0:	fe 4f       	sbci	r31, 0xFE	; 254
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	a8 e4       	ldi	r26, 0x48	; 72
    13f8:	b2 e4       	ldi	r27, 0x42	; 66
    13fa:	80 83       	st	Z, r24
    13fc:	91 83       	std	Z+1, r25	; 0x01
    13fe:	a2 83       	std	Z+2, r26	; 0x02
    1400:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1402:	8e 01       	movw	r16, r28
    1404:	07 54       	subi	r16, 0x47	; 71
    1406:	1e 4f       	sbci	r17, 0xFE	; 254
    1408:	fe 01       	movw	r30, r28
    140a:	e3 54       	subi	r30, 0x43	; 67
    140c:	fe 4f       	sbci	r31, 0xFE	; 254
    140e:	60 81       	ld	r22, Z
    1410:	71 81       	ldd	r23, Z+1	; 0x01
    1412:	82 81       	ldd	r24, Z+2	; 0x02
    1414:	93 81       	ldd	r25, Z+3	; 0x03
    1416:	26 e6       	ldi	r18, 0x66	; 102
    1418:	36 e6       	ldi	r19, 0x66	; 102
    141a:	46 e6       	ldi	r20, 0x66	; 102
    141c:	55 e4       	ldi	r21, 0x45	; 69
    141e:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1422:	dc 01       	movw	r26, r24
    1424:	cb 01       	movw	r24, r22
    1426:	f8 01       	movw	r30, r16
    1428:	80 83       	st	Z, r24
    142a:	91 83       	std	Z+1, r25	; 0x01
    142c:	a2 83       	std	Z+2, r26	; 0x02
    142e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1430:	fe 01       	movw	r30, r28
    1432:	e7 54       	subi	r30, 0x47	; 71
    1434:	fe 4f       	sbci	r31, 0xFE	; 254
    1436:	60 81       	ld	r22, Z
    1438:	71 81       	ldd	r23, Z+1	; 0x01
    143a:	82 81       	ldd	r24, Z+2	; 0x02
    143c:	93 81       	ldd	r25, Z+3	; 0x03
    143e:	20 e0       	ldi	r18, 0x00	; 0
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	40 e8       	ldi	r20, 0x80	; 128
    1444:	5f e3       	ldi	r21, 0x3F	; 63
    1446:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    144a:	88 23       	and	r24, r24
    144c:	44 f4       	brge	.+16     	; 0x145e <run+0xa1a>
		__ticks = 1;
    144e:	fe 01       	movw	r30, r28
    1450:	e9 54       	subi	r30, 0x49	; 73
    1452:	fe 4f       	sbci	r31, 0xFE	; 254
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	91 83       	std	Z+1, r25	; 0x01
    145a:	80 83       	st	Z, r24
    145c:	64 c0       	rjmp	.+200    	; 0x1526 <run+0xae2>
	else if (__tmp > 65535)
    145e:	fe 01       	movw	r30, r28
    1460:	e7 54       	subi	r30, 0x47	; 71
    1462:	fe 4f       	sbci	r31, 0xFE	; 254
    1464:	60 81       	ld	r22, Z
    1466:	71 81       	ldd	r23, Z+1	; 0x01
    1468:	82 81       	ldd	r24, Z+2	; 0x02
    146a:	93 81       	ldd	r25, Z+3	; 0x03
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	3f ef       	ldi	r19, 0xFF	; 255
    1470:	4f e7       	ldi	r20, 0x7F	; 127
    1472:	57 e4       	ldi	r21, 0x47	; 71
    1474:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1478:	18 16       	cp	r1, r24
    147a:	0c f0       	brlt	.+2      	; 0x147e <run+0xa3a>
    147c:	43 c0       	rjmp	.+134    	; 0x1504 <run+0xac0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    147e:	fe 01       	movw	r30, r28
    1480:	e3 54       	subi	r30, 0x43	; 67
    1482:	fe 4f       	sbci	r31, 0xFE	; 254
    1484:	60 81       	ld	r22, Z
    1486:	71 81       	ldd	r23, Z+1	; 0x01
    1488:	82 81       	ldd	r24, Z+2	; 0x02
    148a:	93 81       	ldd	r25, Z+3	; 0x03
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	40 e2       	ldi	r20, 0x20	; 32
    1492:	51 e4       	ldi	r21, 0x41	; 65
    1494:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1498:	dc 01       	movw	r26, r24
    149a:	cb 01       	movw	r24, r22
    149c:	8e 01       	movw	r16, r28
    149e:	09 54       	subi	r16, 0x49	; 73
    14a0:	1e 4f       	sbci	r17, 0xFE	; 254
    14a2:	bc 01       	movw	r22, r24
    14a4:	cd 01       	movw	r24, r26
    14a6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    14aa:	dc 01       	movw	r26, r24
    14ac:	cb 01       	movw	r24, r22
    14ae:	f8 01       	movw	r30, r16
    14b0:	91 83       	std	Z+1, r25	; 0x01
    14b2:	80 83       	st	Z, r24
    14b4:	1f c0       	rjmp	.+62     	; 0x14f4 <run+0xab0>
    14b6:	fe 01       	movw	r30, r28
    14b8:	eb 54       	subi	r30, 0x4B	; 75
    14ba:	fe 4f       	sbci	r31, 0xFE	; 254
    14bc:	80 e7       	ldi	r24, 0x70	; 112
    14be:	91 e0       	ldi	r25, 0x01	; 1
    14c0:	91 83       	std	Z+1, r25	; 0x01
    14c2:	80 83       	st	Z, r24
    14c4:	fe 01       	movw	r30, r28
    14c6:	eb 54       	subi	r30, 0x4B	; 75
    14c8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ca:	80 81       	ld	r24, Z
    14cc:	91 81       	ldd	r25, Z+1	; 0x01
    14ce:	01 97       	sbiw	r24, 0x01	; 1
    14d0:	f1 f7       	brne	.-4      	; 0x14ce <run+0xa8a>
    14d2:	fe 01       	movw	r30, r28
    14d4:	eb 54       	subi	r30, 0x4B	; 75
    14d6:	fe 4f       	sbci	r31, 0xFE	; 254
    14d8:	91 83       	std	Z+1, r25	; 0x01
    14da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14dc:	de 01       	movw	r26, r28
    14de:	a9 54       	subi	r26, 0x49	; 73
    14e0:	be 4f       	sbci	r27, 0xFE	; 254
    14e2:	fe 01       	movw	r30, r28
    14e4:	e9 54       	subi	r30, 0x49	; 73
    14e6:	fe 4f       	sbci	r31, 0xFE	; 254
    14e8:	80 81       	ld	r24, Z
    14ea:	91 81       	ldd	r25, Z+1	; 0x01
    14ec:	01 97       	sbiw	r24, 0x01	; 1
    14ee:	11 96       	adiw	r26, 0x01	; 1
    14f0:	9c 93       	st	X, r25
    14f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14f4:	fe 01       	movw	r30, r28
    14f6:	e9 54       	subi	r30, 0x49	; 73
    14f8:	fe 4f       	sbci	r31, 0xFE	; 254
    14fa:	80 81       	ld	r24, Z
    14fc:	91 81       	ldd	r25, Z+1	; 0x01
    14fe:	00 97       	sbiw	r24, 0x00	; 0
    1500:	d1 f6       	brne	.-76     	; 0x14b6 <run+0xa72>
    1502:	27 c0       	rjmp	.+78     	; 0x1552 <run+0xb0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1504:	8e 01       	movw	r16, r28
    1506:	09 54       	subi	r16, 0x49	; 73
    1508:	1e 4f       	sbci	r17, 0xFE	; 254
    150a:	fe 01       	movw	r30, r28
    150c:	e7 54       	subi	r30, 0x47	; 71
    150e:	fe 4f       	sbci	r31, 0xFE	; 254
    1510:	60 81       	ld	r22, Z
    1512:	71 81       	ldd	r23, Z+1	; 0x01
    1514:	82 81       	ldd	r24, Z+2	; 0x02
    1516:	93 81       	ldd	r25, Z+3	; 0x03
    1518:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	f8 01       	movw	r30, r16
    1522:	91 83       	std	Z+1, r25	; 0x01
    1524:	80 83       	st	Z, r24
    1526:	de 01       	movw	r26, r28
    1528:	ad 54       	subi	r26, 0x4D	; 77
    152a:	be 4f       	sbci	r27, 0xFE	; 254
    152c:	fe 01       	movw	r30, r28
    152e:	e9 54       	subi	r30, 0x49	; 73
    1530:	fe 4f       	sbci	r31, 0xFE	; 254
    1532:	80 81       	ld	r24, Z
    1534:	91 81       	ldd	r25, Z+1	; 0x01
    1536:	8d 93       	st	X+, r24
    1538:	9c 93       	st	X, r25
    153a:	fe 01       	movw	r30, r28
    153c:	ed 54       	subi	r30, 0x4D	; 77
    153e:	fe 4f       	sbci	r31, 0xFE	; 254
    1540:	80 81       	ld	r24, Z
    1542:	91 81       	ldd	r25, Z+1	; 0x01
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	f1 f7       	brne	.-4      	; 0x1544 <run+0xb00>
    1548:	fe 01       	movw	r30, r28
    154a:	ed 54       	subi	r30, 0x4D	; 77
    154c:	fe 4f       	sbci	r31, 0xFE	; 254
    154e:	91 83       	std	Z+1, r25	; 0x01
    1550:	80 83       	st	Z, r24
			_delay_ms(50);
			back_mm(30);
    1552:	8e e1       	ldi	r24, 0x1E	; 30
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
			stop();
    155a:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    155e:	fe 01       	movw	r30, r28
    1560:	e1 55       	subi	r30, 0x51	; 81
    1562:	fe 4f       	sbci	r31, 0xFE	; 254
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	a8 ec       	ldi	r26, 0xC8	; 200
    156a:	b2 e4       	ldi	r27, 0x42	; 66
    156c:	80 83       	st	Z, r24
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	a2 83       	std	Z+2, r26	; 0x02
    1572:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1574:	8e 01       	movw	r16, r28
    1576:	05 55       	subi	r16, 0x55	; 85
    1578:	1e 4f       	sbci	r17, 0xFE	; 254
    157a:	fe 01       	movw	r30, r28
    157c:	e1 55       	subi	r30, 0x51	; 81
    157e:	fe 4f       	sbci	r31, 0xFE	; 254
    1580:	60 81       	ld	r22, Z
    1582:	71 81       	ldd	r23, Z+1	; 0x01
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	26 e6       	ldi	r18, 0x66	; 102
    158a:	36 e6       	ldi	r19, 0x66	; 102
    158c:	46 e6       	ldi	r20, 0x66	; 102
    158e:	55 e4       	ldi	r21, 0x45	; 69
    1590:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1594:	dc 01       	movw	r26, r24
    1596:	cb 01       	movw	r24, r22
    1598:	f8 01       	movw	r30, r16
    159a:	80 83       	st	Z, r24
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	a2 83       	std	Z+2, r26	; 0x02
    15a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15a2:	fe 01       	movw	r30, r28
    15a4:	e5 55       	subi	r30, 0x55	; 85
    15a6:	fe 4f       	sbci	r31, 0xFE	; 254
    15a8:	60 81       	ld	r22, Z
    15aa:	71 81       	ldd	r23, Z+1	; 0x01
    15ac:	82 81       	ldd	r24, Z+2	; 0x02
    15ae:	93 81       	ldd	r25, Z+3	; 0x03
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	40 e8       	ldi	r20, 0x80	; 128
    15b6:	5f e3       	ldi	r21, 0x3F	; 63
    15b8:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    15bc:	88 23       	and	r24, r24
    15be:	44 f4       	brge	.+16     	; 0x15d0 <run+0xb8c>
		__ticks = 1;
    15c0:	fe 01       	movw	r30, r28
    15c2:	e7 55       	subi	r30, 0x57	; 87
    15c4:	fe 4f       	sbci	r31, 0xFE	; 254
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
    15ce:	64 c0       	rjmp	.+200    	; 0x1698 <run+0xc54>
	else if (__tmp > 65535)
    15d0:	fe 01       	movw	r30, r28
    15d2:	e5 55       	subi	r30, 0x55	; 85
    15d4:	fe 4f       	sbci	r31, 0xFE	; 254
    15d6:	60 81       	ld	r22, Z
    15d8:	71 81       	ldd	r23, Z+1	; 0x01
    15da:	82 81       	ldd	r24, Z+2	; 0x02
    15dc:	93 81       	ldd	r25, Z+3	; 0x03
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	3f ef       	ldi	r19, 0xFF	; 255
    15e2:	4f e7       	ldi	r20, 0x7F	; 127
    15e4:	57 e4       	ldi	r21, 0x47	; 71
    15e6:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    15ea:	18 16       	cp	r1, r24
    15ec:	0c f0       	brlt	.+2      	; 0x15f0 <run+0xbac>
    15ee:	43 c0       	rjmp	.+134    	; 0x1676 <run+0xc32>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15f0:	fe 01       	movw	r30, r28
    15f2:	e1 55       	subi	r30, 0x51	; 81
    15f4:	fe 4f       	sbci	r31, 0xFE	; 254
    15f6:	60 81       	ld	r22, Z
    15f8:	71 81       	ldd	r23, Z+1	; 0x01
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	40 e2       	ldi	r20, 0x20	; 32
    1604:	51 e4       	ldi	r21, 0x41	; 65
    1606:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    160a:	dc 01       	movw	r26, r24
    160c:	cb 01       	movw	r24, r22
    160e:	8e 01       	movw	r16, r28
    1610:	07 55       	subi	r16, 0x57	; 87
    1612:	1e 4f       	sbci	r17, 0xFE	; 254
    1614:	bc 01       	movw	r22, r24
    1616:	cd 01       	movw	r24, r26
    1618:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    161c:	dc 01       	movw	r26, r24
    161e:	cb 01       	movw	r24, r22
    1620:	f8 01       	movw	r30, r16
    1622:	91 83       	std	Z+1, r25	; 0x01
    1624:	80 83       	st	Z, r24
    1626:	1f c0       	rjmp	.+62     	; 0x1666 <run+0xc22>
    1628:	fe 01       	movw	r30, r28
    162a:	e9 55       	subi	r30, 0x59	; 89
    162c:	fe 4f       	sbci	r31, 0xFE	; 254
    162e:	80 e7       	ldi	r24, 0x70	; 112
    1630:	91 e0       	ldi	r25, 0x01	; 1
    1632:	91 83       	std	Z+1, r25	; 0x01
    1634:	80 83       	st	Z, r24
    1636:	fe 01       	movw	r30, r28
    1638:	e9 55       	subi	r30, 0x59	; 89
    163a:	fe 4f       	sbci	r31, 0xFE	; 254
    163c:	80 81       	ld	r24, Z
    163e:	91 81       	ldd	r25, Z+1	; 0x01
    1640:	01 97       	sbiw	r24, 0x01	; 1
    1642:	f1 f7       	brne	.-4      	; 0x1640 <run+0xbfc>
    1644:	fe 01       	movw	r30, r28
    1646:	e9 55       	subi	r30, 0x59	; 89
    1648:	fe 4f       	sbci	r31, 0xFE	; 254
    164a:	91 83       	std	Z+1, r25	; 0x01
    164c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    164e:	de 01       	movw	r26, r28
    1650:	a7 55       	subi	r26, 0x57	; 87
    1652:	be 4f       	sbci	r27, 0xFE	; 254
    1654:	fe 01       	movw	r30, r28
    1656:	e7 55       	subi	r30, 0x57	; 87
    1658:	fe 4f       	sbci	r31, 0xFE	; 254
    165a:	80 81       	ld	r24, Z
    165c:	91 81       	ldd	r25, Z+1	; 0x01
    165e:	01 97       	sbiw	r24, 0x01	; 1
    1660:	11 96       	adiw	r26, 0x01	; 1
    1662:	9c 93       	st	X, r25
    1664:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1666:	fe 01       	movw	r30, r28
    1668:	e7 55       	subi	r30, 0x57	; 87
    166a:	fe 4f       	sbci	r31, 0xFE	; 254
    166c:	80 81       	ld	r24, Z
    166e:	91 81       	ldd	r25, Z+1	; 0x01
    1670:	00 97       	sbiw	r24, 0x00	; 0
    1672:	d1 f6       	brne	.-76     	; 0x1628 <run+0xbe4>
    1674:	27 c0       	rjmp	.+78     	; 0x16c4 <run+0xc80>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1676:	8e 01       	movw	r16, r28
    1678:	07 55       	subi	r16, 0x57	; 87
    167a:	1e 4f       	sbci	r17, 0xFE	; 254
    167c:	fe 01       	movw	r30, r28
    167e:	e5 55       	subi	r30, 0x55	; 85
    1680:	fe 4f       	sbci	r31, 0xFE	; 254
    1682:	60 81       	ld	r22, Z
    1684:	71 81       	ldd	r23, Z+1	; 0x01
    1686:	82 81       	ldd	r24, Z+2	; 0x02
    1688:	93 81       	ldd	r25, Z+3	; 0x03
    168a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    168e:	dc 01       	movw	r26, r24
    1690:	cb 01       	movw	r24, r22
    1692:	f8 01       	movw	r30, r16
    1694:	91 83       	std	Z+1, r25	; 0x01
    1696:	80 83       	st	Z, r24
    1698:	de 01       	movw	r26, r28
    169a:	ab 55       	subi	r26, 0x5B	; 91
    169c:	be 4f       	sbci	r27, 0xFE	; 254
    169e:	fe 01       	movw	r30, r28
    16a0:	e7 55       	subi	r30, 0x57	; 87
    16a2:	fe 4f       	sbci	r31, 0xFE	; 254
    16a4:	80 81       	ld	r24, Z
    16a6:	91 81       	ldd	r25, Z+1	; 0x01
    16a8:	8d 93       	st	X+, r24
    16aa:	9c 93       	st	X, r25
    16ac:	fe 01       	movw	r30, r28
    16ae:	eb 55       	subi	r30, 0x5B	; 91
    16b0:	fe 4f       	sbci	r31, 0xFE	; 254
    16b2:	80 81       	ld	r24, Z
    16b4:	91 81       	ldd	r25, Z+1	; 0x01
    16b6:	01 97       	sbiw	r24, 0x01	; 1
    16b8:	f1 f7       	brne	.-4      	; 0x16b6 <run+0xc72>
    16ba:	fe 01       	movw	r30, r28
    16bc:	eb 55       	subi	r30, 0x5B	; 91
    16be:	fe 4f       	sbci	r31, 0xFE	; 254
    16c0:	91 83       	std	Z+1, r25	; 0x01
    16c2:	80 83       	st	Z, r24
			_delay_ms(100);
			forward_mm(190);
    16c4:	8e eb       	ldi	r24, 0xBE	; 190
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
			stop();
    16cc:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    16d0:	fe 01       	movw	r30, r28
    16d2:	ef 55       	subi	r30, 0x5F	; 95
    16d4:	fe 4f       	sbci	r31, 0xFE	; 254
    16d6:	80 e0       	ldi	r24, 0x00	; 0
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	a8 ec       	ldi	r26, 0xC8	; 200
    16dc:	b2 e4       	ldi	r27, 0x42	; 66
    16de:	80 83       	st	Z, r24
    16e0:	91 83       	std	Z+1, r25	; 0x01
    16e2:	a2 83       	std	Z+2, r26	; 0x02
    16e4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16e6:	8e 01       	movw	r16, r28
    16e8:	03 56       	subi	r16, 0x63	; 99
    16ea:	1e 4f       	sbci	r17, 0xFE	; 254
    16ec:	fe 01       	movw	r30, r28
    16ee:	ef 55       	subi	r30, 0x5F	; 95
    16f0:	fe 4f       	sbci	r31, 0xFE	; 254
    16f2:	60 81       	ld	r22, Z
    16f4:	71 81       	ldd	r23, Z+1	; 0x01
    16f6:	82 81       	ldd	r24, Z+2	; 0x02
    16f8:	93 81       	ldd	r25, Z+3	; 0x03
    16fa:	26 e6       	ldi	r18, 0x66	; 102
    16fc:	36 e6       	ldi	r19, 0x66	; 102
    16fe:	46 e6       	ldi	r20, 0x66	; 102
    1700:	55 e4       	ldi	r21, 0x45	; 69
    1702:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1706:	dc 01       	movw	r26, r24
    1708:	cb 01       	movw	r24, r22
    170a:	f8 01       	movw	r30, r16
    170c:	80 83       	st	Z, r24
    170e:	91 83       	std	Z+1, r25	; 0x01
    1710:	a2 83       	std	Z+2, r26	; 0x02
    1712:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1714:	fe 01       	movw	r30, r28
    1716:	e3 56       	subi	r30, 0x63	; 99
    1718:	fe 4f       	sbci	r31, 0xFE	; 254
    171a:	60 81       	ld	r22, Z
    171c:	71 81       	ldd	r23, Z+1	; 0x01
    171e:	82 81       	ldd	r24, Z+2	; 0x02
    1720:	93 81       	ldd	r25, Z+3	; 0x03
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	40 e8       	ldi	r20, 0x80	; 128
    1728:	5f e3       	ldi	r21, 0x3F	; 63
    172a:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    172e:	88 23       	and	r24, r24
    1730:	44 f4       	brge	.+16     	; 0x1742 <run+0xcfe>
		__ticks = 1;
    1732:	fe 01       	movw	r30, r28
    1734:	e5 56       	subi	r30, 0x65	; 101
    1736:	fe 4f       	sbci	r31, 0xFE	; 254
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	91 83       	std	Z+1, r25	; 0x01
    173e:	80 83       	st	Z, r24
    1740:	64 c0       	rjmp	.+200    	; 0x180a <run+0xdc6>
	else if (__tmp > 65535)
    1742:	fe 01       	movw	r30, r28
    1744:	e3 56       	subi	r30, 0x63	; 99
    1746:	fe 4f       	sbci	r31, 0xFE	; 254
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	3f ef       	ldi	r19, 0xFF	; 255
    1754:	4f e7       	ldi	r20, 0x7F	; 127
    1756:	57 e4       	ldi	r21, 0x47	; 71
    1758:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    175c:	18 16       	cp	r1, r24
    175e:	0c f0       	brlt	.+2      	; 0x1762 <run+0xd1e>
    1760:	43 c0       	rjmp	.+134    	; 0x17e8 <run+0xda4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1762:	fe 01       	movw	r30, r28
    1764:	ef 55       	subi	r30, 0x5F	; 95
    1766:	fe 4f       	sbci	r31, 0xFE	; 254
    1768:	60 81       	ld	r22, Z
    176a:	71 81       	ldd	r23, Z+1	; 0x01
    176c:	82 81       	ldd	r24, Z+2	; 0x02
    176e:	93 81       	ldd	r25, Z+3	; 0x03
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	40 e2       	ldi	r20, 0x20	; 32
    1776:	51 e4       	ldi	r21, 0x41	; 65
    1778:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	8e 01       	movw	r16, r28
    1782:	05 56       	subi	r16, 0x65	; 101
    1784:	1e 4f       	sbci	r17, 0xFE	; 254
    1786:	bc 01       	movw	r22, r24
    1788:	cd 01       	movw	r24, r26
    178a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    178e:	dc 01       	movw	r26, r24
    1790:	cb 01       	movw	r24, r22
    1792:	f8 01       	movw	r30, r16
    1794:	91 83       	std	Z+1, r25	; 0x01
    1796:	80 83       	st	Z, r24
    1798:	1f c0       	rjmp	.+62     	; 0x17d8 <run+0xd94>
    179a:	fe 01       	movw	r30, r28
    179c:	e7 56       	subi	r30, 0x67	; 103
    179e:	fe 4f       	sbci	r31, 0xFE	; 254
    17a0:	80 e7       	ldi	r24, 0x70	; 112
    17a2:	91 e0       	ldi	r25, 0x01	; 1
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	80 83       	st	Z, r24
    17a8:	fe 01       	movw	r30, r28
    17aa:	e7 56       	subi	r30, 0x67	; 103
    17ac:	fe 4f       	sbci	r31, 0xFE	; 254
    17ae:	80 81       	ld	r24, Z
    17b0:	91 81       	ldd	r25, Z+1	; 0x01
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	f1 f7       	brne	.-4      	; 0x17b2 <run+0xd6e>
    17b6:	fe 01       	movw	r30, r28
    17b8:	e7 56       	subi	r30, 0x67	; 103
    17ba:	fe 4f       	sbci	r31, 0xFE	; 254
    17bc:	91 83       	std	Z+1, r25	; 0x01
    17be:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17c0:	de 01       	movw	r26, r28
    17c2:	a5 56       	subi	r26, 0x65	; 101
    17c4:	be 4f       	sbci	r27, 0xFE	; 254
    17c6:	fe 01       	movw	r30, r28
    17c8:	e5 56       	subi	r30, 0x65	; 101
    17ca:	fe 4f       	sbci	r31, 0xFE	; 254
    17cc:	80 81       	ld	r24, Z
    17ce:	91 81       	ldd	r25, Z+1	; 0x01
    17d0:	01 97       	sbiw	r24, 0x01	; 1
    17d2:	11 96       	adiw	r26, 0x01	; 1
    17d4:	9c 93       	st	X, r25
    17d6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17d8:	fe 01       	movw	r30, r28
    17da:	e5 56       	subi	r30, 0x65	; 101
    17dc:	fe 4f       	sbci	r31, 0xFE	; 254
    17de:	80 81       	ld	r24, Z
    17e0:	91 81       	ldd	r25, Z+1	; 0x01
    17e2:	00 97       	sbiw	r24, 0x00	; 0
    17e4:	d1 f6       	brne	.-76     	; 0x179a <run+0xd56>
    17e6:	27 c0       	rjmp	.+78     	; 0x1836 <run+0xdf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17e8:	8e 01       	movw	r16, r28
    17ea:	05 56       	subi	r16, 0x65	; 101
    17ec:	1e 4f       	sbci	r17, 0xFE	; 254
    17ee:	fe 01       	movw	r30, r28
    17f0:	e3 56       	subi	r30, 0x63	; 99
    17f2:	fe 4f       	sbci	r31, 0xFE	; 254
    17f4:	60 81       	ld	r22, Z
    17f6:	71 81       	ldd	r23, Z+1	; 0x01
    17f8:	82 81       	ldd	r24, Z+2	; 0x02
    17fa:	93 81       	ldd	r25, Z+3	; 0x03
    17fc:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	f8 01       	movw	r30, r16
    1806:	91 83       	std	Z+1, r25	; 0x01
    1808:	80 83       	st	Z, r24
    180a:	de 01       	movw	r26, r28
    180c:	a9 56       	subi	r26, 0x69	; 105
    180e:	be 4f       	sbci	r27, 0xFE	; 254
    1810:	fe 01       	movw	r30, r28
    1812:	e5 56       	subi	r30, 0x65	; 101
    1814:	fe 4f       	sbci	r31, 0xFE	; 254
    1816:	80 81       	ld	r24, Z
    1818:	91 81       	ldd	r25, Z+1	; 0x01
    181a:	8d 93       	st	X+, r24
    181c:	9c 93       	st	X, r25
    181e:	fe 01       	movw	r30, r28
    1820:	e9 56       	subi	r30, 0x69	; 105
    1822:	fe 4f       	sbci	r31, 0xFE	; 254
    1824:	80 81       	ld	r24, Z
    1826:	91 81       	ldd	r25, Z+1	; 0x01
    1828:	01 97       	sbiw	r24, 0x01	; 1
    182a:	f1 f7       	brne	.-4      	; 0x1828 <run+0xde4>
    182c:	fe 01       	movw	r30, r28
    182e:	e9 56       	subi	r30, 0x69	; 105
    1830:	fe 4f       	sbci	r31, 0xFE	; 254
    1832:	91 83       	std	Z+1, r25	; 0x01
    1834:	80 83       	st	Z, r24
			_delay_ms(100);	
			update_orientation(data);		
    1836:	fe 01       	movw	r30, r28
    1838:	eb 5e       	subi	r30, 0xEB	; 235
    183a:	fd 4f       	sbci	r31, 0xFD	; 253
    183c:	80 81       	ld	r24, Z
    183e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
    1842:	10 c4       	rjmp	.+2080   	; 0x2064 <run+0x1620>
		}
		else if((data == 0x34 && orientation==1)|| (data == 0x32 && orientation==3)|| (data == 0x33 && orientation==0)|| (data == 0x31 && orientation==2))
    1844:	fe 01       	movw	r30, r28
    1846:	eb 5e       	subi	r30, 0xEB	; 235
    1848:	fd 4f       	sbci	r31, 0xFD	; 253
    184a:	80 81       	ld	r24, Z
    184c:	84 33       	cpi	r24, 0x34	; 52
    184e:	39 f4       	brne	.+14     	; 0x185e <run+0xe1a>
    1850:	80 91 11 03 	lds	r24, 0x0311
    1854:	90 91 12 03 	lds	r25, 0x0312
    1858:	81 30       	cpi	r24, 0x01	; 1
    185a:	91 05       	cpc	r25, r1
    185c:	41 f1       	breq	.+80     	; 0x18ae <run+0xe6a>
    185e:	fe 01       	movw	r30, r28
    1860:	eb 5e       	subi	r30, 0xEB	; 235
    1862:	fd 4f       	sbci	r31, 0xFD	; 253
    1864:	80 81       	ld	r24, Z
    1866:	82 33       	cpi	r24, 0x32	; 50
    1868:	39 f4       	brne	.+14     	; 0x1878 <run+0xe34>
    186a:	80 91 11 03 	lds	r24, 0x0311
    186e:	90 91 12 03 	lds	r25, 0x0312
    1872:	83 30       	cpi	r24, 0x03	; 3
    1874:	91 05       	cpc	r25, r1
    1876:	d9 f0       	breq	.+54     	; 0x18ae <run+0xe6a>
    1878:	fe 01       	movw	r30, r28
    187a:	eb 5e       	subi	r30, 0xEB	; 235
    187c:	fd 4f       	sbci	r31, 0xFD	; 253
    187e:	80 81       	ld	r24, Z
    1880:	83 33       	cpi	r24, 0x33	; 51
    1882:	31 f4       	brne	.+12     	; 0x1890 <run+0xe4c>
    1884:	80 91 11 03 	lds	r24, 0x0311
    1888:	90 91 12 03 	lds	r25, 0x0312
    188c:	00 97       	sbiw	r24, 0x00	; 0
    188e:	79 f0       	breq	.+30     	; 0x18ae <run+0xe6a>
    1890:	fe 01       	movw	r30, r28
    1892:	eb 5e       	subi	r30, 0xEB	; 235
    1894:	fd 4f       	sbci	r31, 0xFD	; 253
    1896:	80 81       	ld	r24, Z
    1898:	81 33       	cpi	r24, 0x31	; 49
    189a:	09 f0       	breq	.+2      	; 0x189e <run+0xe5a>
    189c:	c8 c0       	rjmp	.+400    	; 0x1a2e <run+0xfea>
    189e:	80 91 11 03 	lds	r24, 0x0311
    18a2:	90 91 12 03 	lds	r25, 0x0312
    18a6:	82 30       	cpi	r24, 0x02	; 2
    18a8:	91 05       	cpc	r25, r1
    18aa:	09 f0       	breq	.+2      	; 0x18ae <run+0xe6a>
    18ac:	c0 c0       	rjmp	.+384    	; 0x1a2e <run+0xfea>
		{
			forward_mm(190);
    18ae:	8e eb       	ldi	r24, 0xBE	; 190
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
			stop();
    18b6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    18ba:	fe 01       	movw	r30, r28
    18bc:	ed 56       	subi	r30, 0x6D	; 109
    18be:	fe 4f       	sbci	r31, 0xFE	; 254
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	a8 ec       	ldi	r26, 0xC8	; 200
    18c6:	b2 e4       	ldi	r27, 0x42	; 66
    18c8:	80 83       	st	Z, r24
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	a2 83       	std	Z+2, r26	; 0x02
    18ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d0:	8e 01       	movw	r16, r28
    18d2:	01 57       	subi	r16, 0x71	; 113
    18d4:	1e 4f       	sbci	r17, 0xFE	; 254
    18d6:	fe 01       	movw	r30, r28
    18d8:	ed 56       	subi	r30, 0x6D	; 109
    18da:	fe 4f       	sbci	r31, 0xFE	; 254
    18dc:	60 81       	ld	r22, Z
    18de:	71 81       	ldd	r23, Z+1	; 0x01
    18e0:	82 81       	ldd	r24, Z+2	; 0x02
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	26 e6       	ldi	r18, 0x66	; 102
    18e6:	36 e6       	ldi	r19, 0x66	; 102
    18e8:	46 e6       	ldi	r20, 0x66	; 102
    18ea:	55 e4       	ldi	r21, 0x45	; 69
    18ec:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	f8 01       	movw	r30, r16
    18f6:	80 83       	st	Z, r24
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	a2 83       	std	Z+2, r26	; 0x02
    18fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18fe:	fe 01       	movw	r30, r28
    1900:	e1 57       	subi	r30, 0x71	; 113
    1902:	fe 4f       	sbci	r31, 0xFE	; 254
    1904:	60 81       	ld	r22, Z
    1906:	71 81       	ldd	r23, Z+1	; 0x01
    1908:	82 81       	ldd	r24, Z+2	; 0x02
    190a:	93 81       	ldd	r25, Z+3	; 0x03
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 e8       	ldi	r20, 0x80	; 128
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    1918:	88 23       	and	r24, r24
    191a:	44 f4       	brge	.+16     	; 0x192c <run+0xee8>
		__ticks = 1;
    191c:	fe 01       	movw	r30, r28
    191e:	e3 57       	subi	r30, 0x73	; 115
    1920:	fe 4f       	sbci	r31, 0xFE	; 254
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	91 83       	std	Z+1, r25	; 0x01
    1928:	80 83       	st	Z, r24
    192a:	64 c0       	rjmp	.+200    	; 0x19f4 <run+0xfb0>
	else if (__tmp > 65535)
    192c:	fe 01       	movw	r30, r28
    192e:	e1 57       	subi	r30, 0x71	; 113
    1930:	fe 4f       	sbci	r31, 0xFE	; 254
    1932:	60 81       	ld	r22, Z
    1934:	71 81       	ldd	r23, Z+1	; 0x01
    1936:	82 81       	ldd	r24, Z+2	; 0x02
    1938:	93 81       	ldd	r25, Z+3	; 0x03
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	3f ef       	ldi	r19, 0xFF	; 255
    193e:	4f e7       	ldi	r20, 0x7F	; 127
    1940:	57 e4       	ldi	r21, 0x47	; 71
    1942:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1946:	18 16       	cp	r1, r24
    1948:	0c f0       	brlt	.+2      	; 0x194c <run+0xf08>
    194a:	43 c0       	rjmp	.+134    	; 0x19d2 <run+0xf8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    194c:	fe 01       	movw	r30, r28
    194e:	ed 56       	subi	r30, 0x6D	; 109
    1950:	fe 4f       	sbci	r31, 0xFE	; 254
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e2       	ldi	r20, 0x20	; 32
    1960:	51 e4       	ldi	r21, 0x41	; 65
    1962:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	8e 01       	movw	r16, r28
    196c:	03 57       	subi	r16, 0x73	; 115
    196e:	1e 4f       	sbci	r17, 0xFE	; 254
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	f8 01       	movw	r30, r16
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	80 83       	st	Z, r24
    1982:	1f c0       	rjmp	.+62     	; 0x19c2 <run+0xf7e>
    1984:	fe 01       	movw	r30, r28
    1986:	e5 57       	subi	r30, 0x75	; 117
    1988:	fe 4f       	sbci	r31, 0xFE	; 254
    198a:	80 e7       	ldi	r24, 0x70	; 112
    198c:	91 e0       	ldi	r25, 0x01	; 1
    198e:	91 83       	std	Z+1, r25	; 0x01
    1990:	80 83       	st	Z, r24
    1992:	fe 01       	movw	r30, r28
    1994:	e5 57       	subi	r30, 0x75	; 117
    1996:	fe 4f       	sbci	r31, 0xFE	; 254
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	01 97       	sbiw	r24, 0x01	; 1
    199e:	f1 f7       	brne	.-4      	; 0x199c <run+0xf58>
    19a0:	fe 01       	movw	r30, r28
    19a2:	e5 57       	subi	r30, 0x75	; 117
    19a4:	fe 4f       	sbci	r31, 0xFE	; 254
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19aa:	de 01       	movw	r26, r28
    19ac:	a3 57       	subi	r26, 0x73	; 115
    19ae:	be 4f       	sbci	r27, 0xFE	; 254
    19b0:	fe 01       	movw	r30, r28
    19b2:	e3 57       	subi	r30, 0x73	; 115
    19b4:	fe 4f       	sbci	r31, 0xFE	; 254
    19b6:	80 81       	ld	r24, Z
    19b8:	91 81       	ldd	r25, Z+1	; 0x01
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	11 96       	adiw	r26, 0x01	; 1
    19be:	9c 93       	st	X, r25
    19c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c2:	fe 01       	movw	r30, r28
    19c4:	e3 57       	subi	r30, 0x73	; 115
    19c6:	fe 4f       	sbci	r31, 0xFE	; 254
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	00 97       	sbiw	r24, 0x00	; 0
    19ce:	d1 f6       	brne	.-76     	; 0x1984 <run+0xf40>
    19d0:	27 c0       	rjmp	.+78     	; 0x1a20 <run+0xfdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d2:	8e 01       	movw	r16, r28
    19d4:	03 57       	subi	r16, 0x73	; 115
    19d6:	1e 4f       	sbci	r17, 0xFE	; 254
    19d8:	fe 01       	movw	r30, r28
    19da:	e1 57       	subi	r30, 0x71	; 113
    19dc:	fe 4f       	sbci	r31, 0xFE	; 254
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	f8 01       	movw	r30, r16
    19f0:	91 83       	std	Z+1, r25	; 0x01
    19f2:	80 83       	st	Z, r24
    19f4:	de 01       	movw	r26, r28
    19f6:	a7 57       	subi	r26, 0x77	; 119
    19f8:	be 4f       	sbci	r27, 0xFE	; 254
    19fa:	fe 01       	movw	r30, r28
    19fc:	e3 57       	subi	r30, 0x73	; 115
    19fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1a00:	80 81       	ld	r24, Z
    1a02:	91 81       	ldd	r25, Z+1	; 0x01
    1a04:	8d 93       	st	X+, r24
    1a06:	9c 93       	st	X, r25
    1a08:	fe 01       	movw	r30, r28
    1a0a:	e7 57       	subi	r30, 0x77	; 119
    1a0c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <run+0xfce>
    1a16:	fe 01       	movw	r30, r28
    1a18:	e7 57       	subi	r30, 0x77	; 119
    1a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
			_delay_ms(100);	
			update_orientation(data);		
    1a20:	fe 01       	movw	r30, r28
    1a22:	eb 5e       	subi	r30, 0xEB	; 235
    1a24:	fd 4f       	sbci	r31, 0xFD	; 253
    1a26:	80 81       	ld	r24, Z
    1a28:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
    1a2c:	1b c3       	rjmp	.+1590   	; 0x2064 <run+0x1620>
		}
		else if((data == 0x34 && orientation==3) || (data == 0x32 && orientation==1) || (data == 0x33 && orientation==2) || (data == 0x31 && orientation==0))
    1a2e:	fe 01       	movw	r30, r28
    1a30:	eb 5e       	subi	r30, 0xEB	; 235
    1a32:	fd 4f       	sbci	r31, 0xFD	; 253
    1a34:	80 81       	ld	r24, Z
    1a36:	84 33       	cpi	r24, 0x34	; 52
    1a38:	39 f4       	brne	.+14     	; 0x1a48 <run+0x1004>
    1a3a:	80 91 11 03 	lds	r24, 0x0311
    1a3e:	90 91 12 03 	lds	r25, 0x0312
    1a42:	83 30       	cpi	r24, 0x03	; 3
    1a44:	91 05       	cpc	r25, r1
    1a46:	41 f1       	breq	.+80     	; 0x1a98 <run+0x1054>
    1a48:	fe 01       	movw	r30, r28
    1a4a:	eb 5e       	subi	r30, 0xEB	; 235
    1a4c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a4e:	80 81       	ld	r24, Z
    1a50:	82 33       	cpi	r24, 0x32	; 50
    1a52:	39 f4       	brne	.+14     	; 0x1a62 <run+0x101e>
    1a54:	80 91 11 03 	lds	r24, 0x0311
    1a58:	90 91 12 03 	lds	r25, 0x0312
    1a5c:	81 30       	cpi	r24, 0x01	; 1
    1a5e:	91 05       	cpc	r25, r1
    1a60:	d9 f0       	breq	.+54     	; 0x1a98 <run+0x1054>
    1a62:	fe 01       	movw	r30, r28
    1a64:	eb 5e       	subi	r30, 0xEB	; 235
    1a66:	fd 4f       	sbci	r31, 0xFD	; 253
    1a68:	80 81       	ld	r24, Z
    1a6a:	83 33       	cpi	r24, 0x33	; 51
    1a6c:	39 f4       	brne	.+14     	; 0x1a7c <run+0x1038>
    1a6e:	80 91 11 03 	lds	r24, 0x0311
    1a72:	90 91 12 03 	lds	r25, 0x0312
    1a76:	82 30       	cpi	r24, 0x02	; 2
    1a78:	91 05       	cpc	r25, r1
    1a7a:	71 f0       	breq	.+28     	; 0x1a98 <run+0x1054>
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	eb 5e       	subi	r30, 0xEB	; 235
    1a80:	fd 4f       	sbci	r31, 0xFD	; 253
    1a82:	80 81       	ld	r24, Z
    1a84:	81 33       	cpi	r24, 0x31	; 49
    1a86:	09 f0       	breq	.+2      	; 0x1a8a <run+0x1046>
    1a88:	ed c2       	rjmp	.+1498   	; 0x2064 <run+0x1620>
    1a8a:	80 91 11 03 	lds	r24, 0x0311
    1a8e:	90 91 12 03 	lds	r25, 0x0312
    1a92:	00 97       	sbiw	r24, 0x00	; 0
    1a94:	09 f0       	breq	.+2      	; 0x1a98 <run+0x1054>
    1a96:	e6 c2       	rjmp	.+1484   	; 0x2064 <run+0x1620>
		{
			forward_mm(30);
    1a98:	8e e1       	ldi	r24, 0x1E	; 30
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
    1aa0:	fe 01       	movw	r30, r28
    1aa2:	eb 57       	subi	r30, 0x7B	; 123
    1aa4:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa6:	80 e0       	ldi	r24, 0x00	; 0
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	a8 e4       	ldi	r26, 0x48	; 72
    1aac:	b2 e4       	ldi	r27, 0x42	; 66
    1aae:	80 83       	st	Z, r24
    1ab0:	91 83       	std	Z+1, r25	; 0x01
    1ab2:	a2 83       	std	Z+2, r26	; 0x02
    1ab4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ab6:	8e 01       	movw	r16, r28
    1ab8:	0f 57       	subi	r16, 0x7F	; 127
    1aba:	1e 4f       	sbci	r17, 0xFE	; 254
    1abc:	fe 01       	movw	r30, r28
    1abe:	eb 57       	subi	r30, 0x7B	; 123
    1ac0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ac2:	60 81       	ld	r22, Z
    1ac4:	71 81       	ldd	r23, Z+1	; 0x01
    1ac6:	82 81       	ldd	r24, Z+2	; 0x02
    1ac8:	93 81       	ldd	r25, Z+3	; 0x03
    1aca:	26 e6       	ldi	r18, 0x66	; 102
    1acc:	36 e6       	ldi	r19, 0x66	; 102
    1ace:	46 e6       	ldi	r20, 0x66	; 102
    1ad0:	55 e4       	ldi	r21, 0x45	; 69
    1ad2:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1ad6:	dc 01       	movw	r26, r24
    1ad8:	cb 01       	movw	r24, r22
    1ada:	f8 01       	movw	r30, r16
    1adc:	80 83       	st	Z, r24
    1ade:	91 83       	std	Z+1, r25	; 0x01
    1ae0:	a2 83       	std	Z+2, r26	; 0x02
    1ae2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	ef 57       	subi	r30, 0x7F	; 127
    1ae8:	fe 4f       	sbci	r31, 0xFE	; 254
    1aea:	60 81       	ld	r22, Z
    1aec:	71 81       	ldd	r23, Z+1	; 0x01
    1aee:	82 81       	ldd	r24, Z+2	; 0x02
    1af0:	93 81       	ldd	r25, Z+3	; 0x03
    1af2:	20 e0       	ldi	r18, 0x00	; 0
    1af4:	30 e0       	ldi	r19, 0x00	; 0
    1af6:	40 e8       	ldi	r20, 0x80	; 128
    1af8:	5f e3       	ldi	r21, 0x3F	; 63
    1afa:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    1afe:	88 23       	and	r24, r24
    1b00:	44 f4       	brge	.+16     	; 0x1b12 <run+0x10ce>
		__ticks = 1;
    1b02:	fe 01       	movw	r30, r28
    1b04:	e1 58       	subi	r30, 0x81	; 129
    1b06:	fe 4f       	sbci	r31, 0xFE	; 254
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	91 83       	std	Z+1, r25	; 0x01
    1b0e:	80 83       	st	Z, r24
    1b10:	64 c0       	rjmp	.+200    	; 0x1bda <run+0x1196>
	else if (__tmp > 65535)
    1b12:	fe 01       	movw	r30, r28
    1b14:	ef 57       	subi	r30, 0x7F	; 127
    1b16:	fe 4f       	sbci	r31, 0xFE	; 254
    1b18:	60 81       	ld	r22, Z
    1b1a:	71 81       	ldd	r23, Z+1	; 0x01
    1b1c:	82 81       	ldd	r24, Z+2	; 0x02
    1b1e:	93 81       	ldd	r25, Z+3	; 0x03
    1b20:	20 e0       	ldi	r18, 0x00	; 0
    1b22:	3f ef       	ldi	r19, 0xFF	; 255
    1b24:	4f e7       	ldi	r20, 0x7F	; 127
    1b26:	57 e4       	ldi	r21, 0x47	; 71
    1b28:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1b2c:	18 16       	cp	r1, r24
    1b2e:	0c f0       	brlt	.+2      	; 0x1b32 <run+0x10ee>
    1b30:	43 c0       	rjmp	.+134    	; 0x1bb8 <run+0x1174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b32:	fe 01       	movw	r30, r28
    1b34:	eb 57       	subi	r30, 0x7B	; 123
    1b36:	fe 4f       	sbci	r31, 0xFE	; 254
    1b38:	60 81       	ld	r22, Z
    1b3a:	71 81       	ldd	r23, Z+1	; 0x01
    1b3c:	82 81       	ldd	r24, Z+2	; 0x02
    1b3e:	93 81       	ldd	r25, Z+3	; 0x03
    1b40:	20 e0       	ldi	r18, 0x00	; 0
    1b42:	30 e0       	ldi	r19, 0x00	; 0
    1b44:	40 e2       	ldi	r20, 0x20	; 32
    1b46:	51 e4       	ldi	r21, 0x41	; 65
    1b48:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22
    1b50:	8e 01       	movw	r16, r28
    1b52:	01 58       	subi	r16, 0x81	; 129
    1b54:	1e 4f       	sbci	r17, 0xFE	; 254
    1b56:	bc 01       	movw	r22, r24
    1b58:	cd 01       	movw	r24, r26
    1b5a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1b5e:	dc 01       	movw	r26, r24
    1b60:	cb 01       	movw	r24, r22
    1b62:	f8 01       	movw	r30, r16
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
    1b68:	1f c0       	rjmp	.+62     	; 0x1ba8 <run+0x1164>
    1b6a:	fe 01       	movw	r30, r28
    1b6c:	e3 58       	subi	r30, 0x83	; 131
    1b6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b70:	80 e7       	ldi	r24, 0x70	; 112
    1b72:	91 e0       	ldi	r25, 0x01	; 1
    1b74:	91 83       	std	Z+1, r25	; 0x01
    1b76:	80 83       	st	Z, r24
    1b78:	fe 01       	movw	r30, r28
    1b7a:	e3 58       	subi	r30, 0x83	; 131
    1b7c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b7e:	80 81       	ld	r24, Z
    1b80:	91 81       	ldd	r25, Z+1	; 0x01
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	f1 f7       	brne	.-4      	; 0x1b82 <run+0x113e>
    1b86:	fe 01       	movw	r30, r28
    1b88:	e3 58       	subi	r30, 0x83	; 131
    1b8a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b90:	de 01       	movw	r26, r28
    1b92:	a1 58       	subi	r26, 0x81	; 129
    1b94:	be 4f       	sbci	r27, 0xFE	; 254
    1b96:	fe 01       	movw	r30, r28
    1b98:	e1 58       	subi	r30, 0x81	; 129
    1b9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b9c:	80 81       	ld	r24, Z
    1b9e:	91 81       	ldd	r25, Z+1	; 0x01
    1ba0:	01 97       	sbiw	r24, 0x01	; 1
    1ba2:	11 96       	adiw	r26, 0x01	; 1
    1ba4:	9c 93       	st	X, r25
    1ba6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e1 58       	subi	r30, 0x81	; 129
    1bac:	fe 4f       	sbci	r31, 0xFE	; 254
    1bae:	80 81       	ld	r24, Z
    1bb0:	91 81       	ldd	r25, Z+1	; 0x01
    1bb2:	00 97       	sbiw	r24, 0x00	; 0
    1bb4:	d1 f6       	brne	.-76     	; 0x1b6a <run+0x1126>
    1bb6:	27 c0       	rjmp	.+78     	; 0x1c06 <run+0x11c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bb8:	8e 01       	movw	r16, r28
    1bba:	01 58       	subi	r16, 0x81	; 129
    1bbc:	1e 4f       	sbci	r17, 0xFE	; 254
    1bbe:	fe 01       	movw	r30, r28
    1bc0:	ef 57       	subi	r30, 0x7F	; 127
    1bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	f8 01       	movw	r30, r16
    1bd6:	91 83       	std	Z+1, r25	; 0x01
    1bd8:	80 83       	st	Z, r24
    1bda:	de 01       	movw	r26, r28
    1bdc:	a5 58       	subi	r26, 0x85	; 133
    1bde:	be 4f       	sbci	r27, 0xFE	; 254
    1be0:	fe 01       	movw	r30, r28
    1be2:	e1 58       	subi	r30, 0x81	; 129
    1be4:	fe 4f       	sbci	r31, 0xFE	; 254
    1be6:	80 81       	ld	r24, Z
    1be8:	91 81       	ldd	r25, Z+1	; 0x01
    1bea:	8d 93       	st	X+, r24
    1bec:	9c 93       	st	X, r25
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e5 58       	subi	r30, 0x85	; 133
    1bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf4:	80 81       	ld	r24, Z
    1bf6:	91 81       	ldd	r25, Z+1	; 0x01
    1bf8:	01 97       	sbiw	r24, 0x01	; 1
    1bfa:	f1 f7       	brne	.-4      	; 0x1bf8 <run+0x11b4>
    1bfc:	fe 01       	movw	r30, r28
    1bfe:	e5 58       	subi	r30, 0x85	; 133
    1c00:	fe 4f       	sbci	r31, 0xFE	; 254
    1c02:	91 83       	std	Z+1, r25	; 0x01
    1c04:	80 83       	st	Z, r24
			_delay_ms(50);
		    left_degrees(177);
    1c06:	81 eb       	ldi	r24, 0xB1	; 177
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	0e 94 b0 03 	call	0x760	; 0x760 <left_degrees>
    1c0e:	fe 01       	movw	r30, r28
    1c10:	e9 58       	subi	r30, 0x89	; 137
    1c12:	fe 4f       	sbci	r31, 0xFE	; 254
    1c14:	80 e0       	ldi	r24, 0x00	; 0
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	a8 e4       	ldi	r26, 0x48	; 72
    1c1a:	b2 e4       	ldi	r27, 0x42	; 66
    1c1c:	80 83       	st	Z, r24
    1c1e:	91 83       	std	Z+1, r25	; 0x01
    1c20:	a2 83       	std	Z+2, r26	; 0x02
    1c22:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c24:	8e 01       	movw	r16, r28
    1c26:	0d 58       	subi	r16, 0x8D	; 141
    1c28:	1e 4f       	sbci	r17, 0xFE	; 254
    1c2a:	fe 01       	movw	r30, r28
    1c2c:	e9 58       	subi	r30, 0x89	; 137
    1c2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c30:	60 81       	ld	r22, Z
    1c32:	71 81       	ldd	r23, Z+1	; 0x01
    1c34:	82 81       	ldd	r24, Z+2	; 0x02
    1c36:	93 81       	ldd	r25, Z+3	; 0x03
    1c38:	26 e6       	ldi	r18, 0x66	; 102
    1c3a:	36 e6       	ldi	r19, 0x66	; 102
    1c3c:	46 e6       	ldi	r20, 0x66	; 102
    1c3e:	55 e4       	ldi	r21, 0x45	; 69
    1c40:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	f8 01       	movw	r30, r16
    1c4a:	80 83       	st	Z, r24
    1c4c:	91 83       	std	Z+1, r25	; 0x01
    1c4e:	a2 83       	std	Z+2, r26	; 0x02
    1c50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c52:	fe 01       	movw	r30, r28
    1c54:	ed 58       	subi	r30, 0x8D	; 141
    1c56:	fe 4f       	sbci	r31, 0xFE	; 254
    1c58:	60 81       	ld	r22, Z
    1c5a:	71 81       	ldd	r23, Z+1	; 0x01
    1c5c:	82 81       	ldd	r24, Z+2	; 0x02
    1c5e:	93 81       	ldd	r25, Z+3	; 0x03
    1c60:	20 e0       	ldi	r18, 0x00	; 0
    1c62:	30 e0       	ldi	r19, 0x00	; 0
    1c64:	40 e8       	ldi	r20, 0x80	; 128
    1c66:	5f e3       	ldi	r21, 0x3F	; 63
    1c68:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    1c6c:	88 23       	and	r24, r24
    1c6e:	44 f4       	brge	.+16     	; 0x1c80 <run+0x123c>
		__ticks = 1;
    1c70:	fe 01       	movw	r30, r28
    1c72:	ef 58       	subi	r30, 0x8F	; 143
    1c74:	fe 4f       	sbci	r31, 0xFE	; 254
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	91 83       	std	Z+1, r25	; 0x01
    1c7c:	80 83       	st	Z, r24
    1c7e:	64 c0       	rjmp	.+200    	; 0x1d48 <run+0x1304>
	else if (__tmp > 65535)
    1c80:	fe 01       	movw	r30, r28
    1c82:	ed 58       	subi	r30, 0x8D	; 141
    1c84:	fe 4f       	sbci	r31, 0xFE	; 254
    1c86:	60 81       	ld	r22, Z
    1c88:	71 81       	ldd	r23, Z+1	; 0x01
    1c8a:	82 81       	ldd	r24, Z+2	; 0x02
    1c8c:	93 81       	ldd	r25, Z+3	; 0x03
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	3f ef       	ldi	r19, 0xFF	; 255
    1c92:	4f e7       	ldi	r20, 0x7F	; 127
    1c94:	57 e4       	ldi	r21, 0x47	; 71
    1c96:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1c9a:	18 16       	cp	r1, r24
    1c9c:	0c f0       	brlt	.+2      	; 0x1ca0 <run+0x125c>
    1c9e:	43 c0       	rjmp	.+134    	; 0x1d26 <run+0x12e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ca0:	fe 01       	movw	r30, r28
    1ca2:	e9 58       	subi	r30, 0x89	; 137
    1ca4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca6:	60 81       	ld	r22, Z
    1ca8:	71 81       	ldd	r23, Z+1	; 0x01
    1caa:	82 81       	ldd	r24, Z+2	; 0x02
    1cac:	93 81       	ldd	r25, Z+3	; 0x03
    1cae:	20 e0       	ldi	r18, 0x00	; 0
    1cb0:	30 e0       	ldi	r19, 0x00	; 0
    1cb2:	40 e2       	ldi	r20, 0x20	; 32
    1cb4:	51 e4       	ldi	r21, 0x41	; 65
    1cb6:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1cba:	dc 01       	movw	r26, r24
    1cbc:	cb 01       	movw	r24, r22
    1cbe:	8e 01       	movw	r16, r28
    1cc0:	0f 58       	subi	r16, 0x8F	; 143
    1cc2:	1e 4f       	sbci	r17, 0xFE	; 254
    1cc4:	bc 01       	movw	r22, r24
    1cc6:	cd 01       	movw	r24, r26
    1cc8:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1ccc:	dc 01       	movw	r26, r24
    1cce:	cb 01       	movw	r24, r22
    1cd0:	f8 01       	movw	r30, r16
    1cd2:	91 83       	std	Z+1, r25	; 0x01
    1cd4:	80 83       	st	Z, r24
    1cd6:	1f c0       	rjmp	.+62     	; 0x1d16 <run+0x12d2>
    1cd8:	fe 01       	movw	r30, r28
    1cda:	e1 59       	subi	r30, 0x91	; 145
    1cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cde:	80 e7       	ldi	r24, 0x70	; 112
    1ce0:	91 e0       	ldi	r25, 0x01	; 1
    1ce2:	91 83       	std	Z+1, r25	; 0x01
    1ce4:	80 83       	st	Z, r24
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	e1 59       	subi	r30, 0x91	; 145
    1cea:	fe 4f       	sbci	r31, 0xFE	; 254
    1cec:	80 81       	ld	r24, Z
    1cee:	91 81       	ldd	r25, Z+1	; 0x01
    1cf0:	01 97       	sbiw	r24, 0x01	; 1
    1cf2:	f1 f7       	brne	.-4      	; 0x1cf0 <run+0x12ac>
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	e1 59       	subi	r30, 0x91	; 145
    1cf8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfa:	91 83       	std	Z+1, r25	; 0x01
    1cfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cfe:	de 01       	movw	r26, r28
    1d00:	af 58       	subi	r26, 0x8F	; 143
    1d02:	be 4f       	sbci	r27, 0xFE	; 254
    1d04:	fe 01       	movw	r30, r28
    1d06:	ef 58       	subi	r30, 0x8F	; 143
    1d08:	fe 4f       	sbci	r31, 0xFE	; 254
    1d0a:	80 81       	ld	r24, Z
    1d0c:	91 81       	ldd	r25, Z+1	; 0x01
    1d0e:	01 97       	sbiw	r24, 0x01	; 1
    1d10:	11 96       	adiw	r26, 0x01	; 1
    1d12:	9c 93       	st	X, r25
    1d14:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d16:	fe 01       	movw	r30, r28
    1d18:	ef 58       	subi	r30, 0x8F	; 143
    1d1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d1c:	80 81       	ld	r24, Z
    1d1e:	91 81       	ldd	r25, Z+1	; 0x01
    1d20:	00 97       	sbiw	r24, 0x00	; 0
    1d22:	d1 f6       	brne	.-76     	; 0x1cd8 <run+0x1294>
    1d24:	27 c0       	rjmp	.+78     	; 0x1d74 <run+0x1330>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d26:	8e 01       	movw	r16, r28
    1d28:	0f 58       	subi	r16, 0x8F	; 143
    1d2a:	1e 4f       	sbci	r17, 0xFE	; 254
    1d2c:	fe 01       	movw	r30, r28
    1d2e:	ed 58       	subi	r30, 0x8D	; 141
    1d30:	fe 4f       	sbci	r31, 0xFE	; 254
    1d32:	60 81       	ld	r22, Z
    1d34:	71 81       	ldd	r23, Z+1	; 0x01
    1d36:	82 81       	ldd	r24, Z+2	; 0x02
    1d38:	93 81       	ldd	r25, Z+3	; 0x03
    1d3a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1d3e:	dc 01       	movw	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	f8 01       	movw	r30, r16
    1d44:	91 83       	std	Z+1, r25	; 0x01
    1d46:	80 83       	st	Z, r24
    1d48:	de 01       	movw	r26, r28
    1d4a:	a3 59       	subi	r26, 0x93	; 147
    1d4c:	be 4f       	sbci	r27, 0xFE	; 254
    1d4e:	fe 01       	movw	r30, r28
    1d50:	ef 58       	subi	r30, 0x8F	; 143
    1d52:	fe 4f       	sbci	r31, 0xFE	; 254
    1d54:	80 81       	ld	r24, Z
    1d56:	91 81       	ldd	r25, Z+1	; 0x01
    1d58:	8d 93       	st	X+, r24
    1d5a:	9c 93       	st	X, r25
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	e3 59       	subi	r30, 0x93	; 147
    1d60:	fe 4f       	sbci	r31, 0xFE	; 254
    1d62:	80 81       	ld	r24, Z
    1d64:	91 81       	ldd	r25, Z+1	; 0x01
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	f1 f7       	brne	.-4      	; 0x1d66 <run+0x1322>
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	e3 59       	subi	r30, 0x93	; 147
    1d6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d70:	91 83       	std	Z+1, r25	; 0x01
    1d72:	80 83       	st	Z, r24
			_delay_ms(50);
			back_mm(30);
    1d74:	8e e1       	ldi	r24, 0x1E	; 30
    1d76:	90 e0       	ldi	r25, 0x00	; 0
    1d78:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
			stop();
    1d7c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    1d80:	fe 01       	movw	r30, r28
    1d82:	e7 59       	subi	r30, 0x97	; 151
    1d84:	fe 4f       	sbci	r31, 0xFE	; 254
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	a8 ec       	ldi	r26, 0xC8	; 200
    1d8c:	b2 e4       	ldi	r27, 0x42	; 66
    1d8e:	80 83       	st	Z, r24
    1d90:	91 83       	std	Z+1, r25	; 0x01
    1d92:	a2 83       	std	Z+2, r26	; 0x02
    1d94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d96:	8e 01       	movw	r16, r28
    1d98:	0b 59       	subi	r16, 0x9B	; 155
    1d9a:	1e 4f       	sbci	r17, 0xFE	; 254
    1d9c:	fe 01       	movw	r30, r28
    1d9e:	e7 59       	subi	r30, 0x97	; 151
    1da0:	fe 4f       	sbci	r31, 0xFE	; 254
    1da2:	60 81       	ld	r22, Z
    1da4:	71 81       	ldd	r23, Z+1	; 0x01
    1da6:	82 81       	ldd	r24, Z+2	; 0x02
    1da8:	93 81       	ldd	r25, Z+3	; 0x03
    1daa:	26 e6       	ldi	r18, 0x66	; 102
    1dac:	36 e6       	ldi	r19, 0x66	; 102
    1dae:	46 e6       	ldi	r20, 0x66	; 102
    1db0:	55 e4       	ldi	r21, 0x45	; 69
    1db2:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1db6:	dc 01       	movw	r26, r24
    1db8:	cb 01       	movw	r24, r22
    1dba:	f8 01       	movw	r30, r16
    1dbc:	80 83       	st	Z, r24
    1dbe:	91 83       	std	Z+1, r25	; 0x01
    1dc0:	a2 83       	std	Z+2, r26	; 0x02
    1dc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	eb 59       	subi	r30, 0x9B	; 155
    1dc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dca:	60 81       	ld	r22, Z
    1dcc:	71 81       	ldd	r23, Z+1	; 0x01
    1dce:	82 81       	ldd	r24, Z+2	; 0x02
    1dd0:	93 81       	ldd	r25, Z+3	; 0x03
    1dd2:	20 e0       	ldi	r18, 0x00	; 0
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	40 e8       	ldi	r20, 0x80	; 128
    1dd8:	5f e3       	ldi	r21, 0x3F	; 63
    1dda:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    1dde:	88 23       	and	r24, r24
    1de0:	44 f4       	brge	.+16     	; 0x1df2 <run+0x13ae>
		__ticks = 1;
    1de2:	fe 01       	movw	r30, r28
    1de4:	ed 59       	subi	r30, 0x9D	; 157
    1de6:	fe 4f       	sbci	r31, 0xFE	; 254
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	80 83       	st	Z, r24
    1df0:	64 c0       	rjmp	.+200    	; 0x1eba <run+0x1476>
	else if (__tmp > 65535)
    1df2:	fe 01       	movw	r30, r28
    1df4:	eb 59       	subi	r30, 0x9B	; 155
    1df6:	fe 4f       	sbci	r31, 0xFE	; 254
    1df8:	60 81       	ld	r22, Z
    1dfa:	71 81       	ldd	r23, Z+1	; 0x01
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	20 e0       	ldi	r18, 0x00	; 0
    1e02:	3f ef       	ldi	r19, 0xFF	; 255
    1e04:	4f e7       	ldi	r20, 0x7F	; 127
    1e06:	57 e4       	ldi	r21, 0x47	; 71
    1e08:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1e0c:	18 16       	cp	r1, r24
    1e0e:	0c f0       	brlt	.+2      	; 0x1e12 <run+0x13ce>
    1e10:	43 c0       	rjmp	.+134    	; 0x1e98 <run+0x1454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e12:	fe 01       	movw	r30, r28
    1e14:	e7 59       	subi	r30, 0x97	; 151
    1e16:	fe 4f       	sbci	r31, 0xFE	; 254
    1e18:	60 81       	ld	r22, Z
    1e1a:	71 81       	ldd	r23, Z+1	; 0x01
    1e1c:	82 81       	ldd	r24, Z+2	; 0x02
    1e1e:	93 81       	ldd	r25, Z+3	; 0x03
    1e20:	20 e0       	ldi	r18, 0x00	; 0
    1e22:	30 e0       	ldi	r19, 0x00	; 0
    1e24:	40 e2       	ldi	r20, 0x20	; 32
    1e26:	51 e4       	ldi	r21, 0x41	; 65
    1e28:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1e2c:	dc 01       	movw	r26, r24
    1e2e:	cb 01       	movw	r24, r22
    1e30:	8e 01       	movw	r16, r28
    1e32:	0d 59       	subi	r16, 0x9D	; 157
    1e34:	1e 4f       	sbci	r17, 0xFE	; 254
    1e36:	bc 01       	movw	r22, r24
    1e38:	cd 01       	movw	r24, r26
    1e3a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1e3e:	dc 01       	movw	r26, r24
    1e40:	cb 01       	movw	r24, r22
    1e42:	f8 01       	movw	r30, r16
    1e44:	91 83       	std	Z+1, r25	; 0x01
    1e46:	80 83       	st	Z, r24
    1e48:	1f c0       	rjmp	.+62     	; 0x1e88 <run+0x1444>
    1e4a:	fe 01       	movw	r30, r28
    1e4c:	ef 59       	subi	r30, 0x9F	; 159
    1e4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e50:	80 e7       	ldi	r24, 0x70	; 112
    1e52:	91 e0       	ldi	r25, 0x01	; 1
    1e54:	91 83       	std	Z+1, r25	; 0x01
    1e56:	80 83       	st	Z, r24
    1e58:	fe 01       	movw	r30, r28
    1e5a:	ef 59       	subi	r30, 0x9F	; 159
    1e5c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e5e:	80 81       	ld	r24, Z
    1e60:	91 81       	ldd	r25, Z+1	; 0x01
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	f1 f7       	brne	.-4      	; 0x1e62 <run+0x141e>
    1e66:	fe 01       	movw	r30, r28
    1e68:	ef 59       	subi	r30, 0x9F	; 159
    1e6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e6c:	91 83       	std	Z+1, r25	; 0x01
    1e6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e70:	de 01       	movw	r26, r28
    1e72:	ad 59       	subi	r26, 0x9D	; 157
    1e74:	be 4f       	sbci	r27, 0xFE	; 254
    1e76:	fe 01       	movw	r30, r28
    1e78:	ed 59       	subi	r30, 0x9D	; 157
    1e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e7c:	80 81       	ld	r24, Z
    1e7e:	91 81       	ldd	r25, Z+1	; 0x01
    1e80:	01 97       	sbiw	r24, 0x01	; 1
    1e82:	11 96       	adiw	r26, 0x01	; 1
    1e84:	9c 93       	st	X, r25
    1e86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e88:	fe 01       	movw	r30, r28
    1e8a:	ed 59       	subi	r30, 0x9D	; 157
    1e8c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e8e:	80 81       	ld	r24, Z
    1e90:	91 81       	ldd	r25, Z+1	; 0x01
    1e92:	00 97       	sbiw	r24, 0x00	; 0
    1e94:	d1 f6       	brne	.-76     	; 0x1e4a <run+0x1406>
    1e96:	27 c0       	rjmp	.+78     	; 0x1ee6 <run+0x14a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e98:	8e 01       	movw	r16, r28
    1e9a:	0d 59       	subi	r16, 0x9D	; 157
    1e9c:	1e 4f       	sbci	r17, 0xFE	; 254
    1e9e:	fe 01       	movw	r30, r28
    1ea0:	eb 59       	subi	r30, 0x9B	; 155
    1ea2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ea4:	60 81       	ld	r22, Z
    1ea6:	71 81       	ldd	r23, Z+1	; 0x01
    1ea8:	82 81       	ldd	r24, Z+2	; 0x02
    1eaa:	93 81       	ldd	r25, Z+3	; 0x03
    1eac:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	cb 01       	movw	r24, r22
    1eb4:	f8 01       	movw	r30, r16
    1eb6:	91 83       	std	Z+1, r25	; 0x01
    1eb8:	80 83       	st	Z, r24
    1eba:	de 01       	movw	r26, r28
    1ebc:	a1 5a       	subi	r26, 0xA1	; 161
    1ebe:	be 4f       	sbci	r27, 0xFE	; 254
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	ed 59       	subi	r30, 0x9D	; 157
    1ec4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ec6:	80 81       	ld	r24, Z
    1ec8:	91 81       	ldd	r25, Z+1	; 0x01
    1eca:	8d 93       	st	X+, r24
    1ecc:	9c 93       	st	X, r25
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e1 5a       	subi	r30, 0xA1	; 161
    1ed2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ed4:	80 81       	ld	r24, Z
    1ed6:	91 81       	ldd	r25, Z+1	; 0x01
    1ed8:	01 97       	sbiw	r24, 0x01	; 1
    1eda:	f1 f7       	brne	.-4      	; 0x1ed8 <run+0x1494>
    1edc:	fe 01       	movw	r30, r28
    1ede:	e1 5a       	subi	r30, 0xA1	; 161
    1ee0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ee2:	91 83       	std	Z+1, r25	; 0x01
    1ee4:	80 83       	st	Z, r24
			_delay_ms(100);
			forward_mm(180);
    1ee6:	84 eb       	ldi	r24, 0xB4	; 180
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
			stop();
    1eee:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	e5 5a       	subi	r30, 0xA5	; 165
    1ef6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	a8 ec       	ldi	r26, 0xC8	; 200
    1efe:	b2 e4       	ldi	r27, 0x42	; 66
    1f00:	80 83       	st	Z, r24
    1f02:	91 83       	std	Z+1, r25	; 0x01
    1f04:	a2 83       	std	Z+2, r26	; 0x02
    1f06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f08:	8e 01       	movw	r16, r28
    1f0a:	09 5a       	subi	r16, 0xA9	; 169
    1f0c:	1e 4f       	sbci	r17, 0xFE	; 254
    1f0e:	fe 01       	movw	r30, r28
    1f10:	e5 5a       	subi	r30, 0xA5	; 165
    1f12:	fe 4f       	sbci	r31, 0xFE	; 254
    1f14:	60 81       	ld	r22, Z
    1f16:	71 81       	ldd	r23, Z+1	; 0x01
    1f18:	82 81       	ldd	r24, Z+2	; 0x02
    1f1a:	93 81       	ldd	r25, Z+3	; 0x03
    1f1c:	26 e6       	ldi	r18, 0x66	; 102
    1f1e:	36 e6       	ldi	r19, 0x66	; 102
    1f20:	46 e6       	ldi	r20, 0x66	; 102
    1f22:	55 e4       	ldi	r21, 0x45	; 69
    1f24:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	f8 01       	movw	r30, r16
    1f2e:	80 83       	st	Z, r24
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	a2 83       	std	Z+2, r26	; 0x02
    1f34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f36:	fe 01       	movw	r30, r28
    1f38:	e9 5a       	subi	r30, 0xA9	; 169
    1f3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f3c:	60 81       	ld	r22, Z
    1f3e:	71 81       	ldd	r23, Z+1	; 0x01
    1f40:	82 81       	ldd	r24, Z+2	; 0x02
    1f42:	93 81       	ldd	r25, Z+3	; 0x03
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	40 e8       	ldi	r20, 0x80	; 128
    1f4a:	5f e3       	ldi	r21, 0x3F	; 63
    1f4c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    1f50:	88 23       	and	r24, r24
    1f52:	44 f4       	brge	.+16     	; 0x1f64 <run+0x1520>
		__ticks = 1;
    1f54:	fe 01       	movw	r30, r28
    1f56:	eb 5a       	subi	r30, 0xAB	; 171
    1f58:	fe 4f       	sbci	r31, 0xFE	; 254
    1f5a:	81 e0       	ldi	r24, 0x01	; 1
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	91 83       	std	Z+1, r25	; 0x01
    1f60:	80 83       	st	Z, r24
    1f62:	64 c0       	rjmp	.+200    	; 0x202c <run+0x15e8>
	else if (__tmp > 65535)
    1f64:	fe 01       	movw	r30, r28
    1f66:	e9 5a       	subi	r30, 0xA9	; 169
    1f68:	fe 4f       	sbci	r31, 0xFE	; 254
    1f6a:	60 81       	ld	r22, Z
    1f6c:	71 81       	ldd	r23, Z+1	; 0x01
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	3f ef       	ldi	r19, 0xFF	; 255
    1f76:	4f e7       	ldi	r20, 0x7F	; 127
    1f78:	57 e4       	ldi	r21, 0x47	; 71
    1f7a:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    1f7e:	18 16       	cp	r1, r24
    1f80:	0c f0       	brlt	.+2      	; 0x1f84 <run+0x1540>
    1f82:	43 c0       	rjmp	.+134    	; 0x200a <run+0x15c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f84:	fe 01       	movw	r30, r28
    1f86:	e5 5a       	subi	r30, 0xA5	; 165
    1f88:	fe 4f       	sbci	r31, 0xFE	; 254
    1f8a:	60 81       	ld	r22, Z
    1f8c:	71 81       	ldd	r23, Z+1	; 0x01
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	20 e0       	ldi	r18, 0x00	; 0
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	40 e2       	ldi	r20, 0x20	; 32
    1f98:	51 e4       	ldi	r21, 0x41	; 65
    1f9a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    1f9e:	dc 01       	movw	r26, r24
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	8e 01       	movw	r16, r28
    1fa4:	0b 5a       	subi	r16, 0xAB	; 171
    1fa6:	1e 4f       	sbci	r17, 0xFE	; 254
    1fa8:	bc 01       	movw	r22, r24
    1faa:	cd 01       	movw	r24, r26
    1fac:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	cb 01       	movw	r24, r22
    1fb4:	f8 01       	movw	r30, r16
    1fb6:	91 83       	std	Z+1, r25	; 0x01
    1fb8:	80 83       	st	Z, r24
    1fba:	1f c0       	rjmp	.+62     	; 0x1ffa <run+0x15b6>
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	ed 5a       	subi	r30, 0xAD	; 173
    1fc0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fc2:	80 e7       	ldi	r24, 0x70	; 112
    1fc4:	91 e0       	ldi	r25, 0x01	; 1
    1fc6:	91 83       	std	Z+1, r25	; 0x01
    1fc8:	80 83       	st	Z, r24
    1fca:	fe 01       	movw	r30, r28
    1fcc:	ed 5a       	subi	r30, 0xAD	; 173
    1fce:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd0:	80 81       	ld	r24, Z
    1fd2:	91 81       	ldd	r25, Z+1	; 0x01
    1fd4:	01 97       	sbiw	r24, 0x01	; 1
    1fd6:	f1 f7       	brne	.-4      	; 0x1fd4 <run+0x1590>
    1fd8:	fe 01       	movw	r30, r28
    1fda:	ed 5a       	subi	r30, 0xAD	; 173
    1fdc:	fe 4f       	sbci	r31, 0xFE	; 254
    1fde:	91 83       	std	Z+1, r25	; 0x01
    1fe0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fe2:	de 01       	movw	r26, r28
    1fe4:	ab 5a       	subi	r26, 0xAB	; 171
    1fe6:	be 4f       	sbci	r27, 0xFE	; 254
    1fe8:	fe 01       	movw	r30, r28
    1fea:	eb 5a       	subi	r30, 0xAB	; 171
    1fec:	fe 4f       	sbci	r31, 0xFE	; 254
    1fee:	80 81       	ld	r24, Z
    1ff0:	91 81       	ldd	r25, Z+1	; 0x01
    1ff2:	01 97       	sbiw	r24, 0x01	; 1
    1ff4:	11 96       	adiw	r26, 0x01	; 1
    1ff6:	9c 93       	st	X, r25
    1ff8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	eb 5a       	subi	r30, 0xAB	; 171
    1ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    2000:	80 81       	ld	r24, Z
    2002:	91 81       	ldd	r25, Z+1	; 0x01
    2004:	00 97       	sbiw	r24, 0x00	; 0
    2006:	d1 f6       	brne	.-76     	; 0x1fbc <run+0x1578>
    2008:	27 c0       	rjmp	.+78     	; 0x2058 <run+0x1614>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    200a:	8e 01       	movw	r16, r28
    200c:	0b 5a       	subi	r16, 0xAB	; 171
    200e:	1e 4f       	sbci	r17, 0xFE	; 254
    2010:	fe 01       	movw	r30, r28
    2012:	e9 5a       	subi	r30, 0xA9	; 169
    2014:	fe 4f       	sbci	r31, 0xFE	; 254
    2016:	60 81       	ld	r22, Z
    2018:	71 81       	ldd	r23, Z+1	; 0x01
    201a:	82 81       	ldd	r24, Z+2	; 0x02
    201c:	93 81       	ldd	r25, Z+3	; 0x03
    201e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2022:	dc 01       	movw	r26, r24
    2024:	cb 01       	movw	r24, r22
    2026:	f8 01       	movw	r30, r16
    2028:	91 83       	std	Z+1, r25	; 0x01
    202a:	80 83       	st	Z, r24
    202c:	de 01       	movw	r26, r28
    202e:	af 5a       	subi	r26, 0xAF	; 175
    2030:	be 4f       	sbci	r27, 0xFE	; 254
    2032:	fe 01       	movw	r30, r28
    2034:	eb 5a       	subi	r30, 0xAB	; 171
    2036:	fe 4f       	sbci	r31, 0xFE	; 254
    2038:	80 81       	ld	r24, Z
    203a:	91 81       	ldd	r25, Z+1	; 0x01
    203c:	8d 93       	st	X+, r24
    203e:	9c 93       	st	X, r25
    2040:	fe 01       	movw	r30, r28
    2042:	ef 5a       	subi	r30, 0xAF	; 175
    2044:	fe 4f       	sbci	r31, 0xFE	; 254
    2046:	80 81       	ld	r24, Z
    2048:	91 81       	ldd	r25, Z+1	; 0x01
    204a:	01 97       	sbiw	r24, 0x01	; 1
    204c:	f1 f7       	brne	.-4      	; 0x204a <run+0x1606>
    204e:	fe 01       	movw	r30, r28
    2050:	ef 5a       	subi	r30, 0xAF	; 175
    2052:	fe 4f       	sbci	r31, 0xFE	; 254
    2054:	91 83       	std	Z+1, r25	; 0x01
    2056:	80 83       	st	Z, r24
			_delay_ms(100);	
			update_orientation(data);		
    2058:	fe 01       	movw	r30, r28
    205a:	eb 5e       	subi	r30, 0xEB	; 235
    205c:	fd 4f       	sbci	r31, 0xFD	; 253
    205e:	80 81       	ld	r24, Z
    2060:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
		}

	 if((data == 0x61 && orientation==0) || (data == 0x62 && orientation==2) || (data == 0x63 && orientation==3) || (data == 0x64 && orientation==1)) //ASCII value of 8
    2064:	fe 01       	movw	r30, r28
    2066:	eb 5e       	subi	r30, 0xEB	; 235
    2068:	fd 4f       	sbci	r31, 0xFD	; 253
    206a:	80 81       	ld	r24, Z
    206c:	81 36       	cpi	r24, 0x61	; 97
    206e:	31 f4       	brne	.+12     	; 0x207c <run+0x1638>
    2070:	80 91 11 03 	lds	r24, 0x0311
    2074:	90 91 12 03 	lds	r25, 0x0312
    2078:	00 97       	sbiw	r24, 0x00	; 0
    207a:	49 f1       	breq	.+82     	; 0x20ce <run+0x168a>
    207c:	fe 01       	movw	r30, r28
    207e:	eb 5e       	subi	r30, 0xEB	; 235
    2080:	fd 4f       	sbci	r31, 0xFD	; 253
    2082:	80 81       	ld	r24, Z
    2084:	82 36       	cpi	r24, 0x62	; 98
    2086:	39 f4       	brne	.+14     	; 0x2096 <run+0x1652>
    2088:	80 91 11 03 	lds	r24, 0x0311
    208c:	90 91 12 03 	lds	r25, 0x0312
    2090:	82 30       	cpi	r24, 0x02	; 2
    2092:	91 05       	cpc	r25, r1
    2094:	e1 f0       	breq	.+56     	; 0x20ce <run+0x168a>
    2096:	fe 01       	movw	r30, r28
    2098:	eb 5e       	subi	r30, 0xEB	; 235
    209a:	fd 4f       	sbci	r31, 0xFD	; 253
    209c:	80 81       	ld	r24, Z
    209e:	83 36       	cpi	r24, 0x63	; 99
    20a0:	39 f4       	brne	.+14     	; 0x20b0 <run+0x166c>
    20a2:	80 91 11 03 	lds	r24, 0x0311
    20a6:	90 91 12 03 	lds	r25, 0x0312
    20aa:	83 30       	cpi	r24, 0x03	; 3
    20ac:	91 05       	cpc	r25, r1
    20ae:	79 f0       	breq	.+30     	; 0x20ce <run+0x168a>
    20b0:	fe 01       	movw	r30, r28
    20b2:	eb 5e       	subi	r30, 0xEB	; 235
    20b4:	fd 4f       	sbci	r31, 0xFD	; 253
    20b6:	80 81       	ld	r24, Z
    20b8:	84 36       	cpi	r24, 0x64	; 100
    20ba:	09 f0       	breq	.+2      	; 0x20be <run+0x167a>
    20bc:	e9 c2       	rjmp	.+1490   	; 0x2690 <__stack+0x491>
    20be:	80 91 11 03 	lds	r24, 0x0311
    20c2:	90 91 12 03 	lds	r25, 0x0312
    20c6:	81 30       	cpi	r24, 0x01	; 1
    20c8:	91 05       	cpc	r25, r1
    20ca:	09 f0       	breq	.+2      	; 0x20ce <run+0x168a>
    20cc:	e1 c2       	rjmp	.+1474   	; 0x2690 <__stack+0x491>
		{ 
		    forward_mm(35);
    20ce:	83 e2       	ldi	r24, 0x23	; 35
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
    20d6:	fe 01       	movw	r30, r28
    20d8:	e3 5b       	subi	r30, 0xB3	; 179
    20da:	fe 4f       	sbci	r31, 0xFE	; 254
    20dc:	80 e0       	ldi	r24, 0x00	; 0
    20de:	90 e0       	ldi	r25, 0x00	; 0
    20e0:	a8 e4       	ldi	r26, 0x48	; 72
    20e2:	b2 e4       	ldi	r27, 0x42	; 66
    20e4:	80 83       	st	Z, r24
    20e6:	91 83       	std	Z+1, r25	; 0x01
    20e8:	a2 83       	std	Z+2, r26	; 0x02
    20ea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ec:	8e 01       	movw	r16, r28
    20ee:	07 5b       	subi	r16, 0xB7	; 183
    20f0:	1e 4f       	sbci	r17, 0xFE	; 254
    20f2:	fe 01       	movw	r30, r28
    20f4:	e3 5b       	subi	r30, 0xB3	; 179
    20f6:	fe 4f       	sbci	r31, 0xFE	; 254
    20f8:	60 81       	ld	r22, Z
    20fa:	71 81       	ldd	r23, Z+1	; 0x01
    20fc:	82 81       	ldd	r24, Z+2	; 0x02
    20fe:	93 81       	ldd	r25, Z+3	; 0x03
    2100:	26 e6       	ldi	r18, 0x66	; 102
    2102:	36 e6       	ldi	r19, 0x66	; 102
    2104:	46 e6       	ldi	r20, 0x66	; 102
    2106:	55 e4       	ldi	r21, 0x45	; 69
    2108:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    210c:	dc 01       	movw	r26, r24
    210e:	cb 01       	movw	r24, r22
    2110:	f8 01       	movw	r30, r16
    2112:	80 83       	st	Z, r24
    2114:	91 83       	std	Z+1, r25	; 0x01
    2116:	a2 83       	std	Z+2, r26	; 0x02
    2118:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    211a:	fe 01       	movw	r30, r28
    211c:	e7 5b       	subi	r30, 0xB7	; 183
    211e:	fe 4f       	sbci	r31, 0xFE	; 254
    2120:	60 81       	ld	r22, Z
    2122:	71 81       	ldd	r23, Z+1	; 0x01
    2124:	82 81       	ldd	r24, Z+2	; 0x02
    2126:	93 81       	ldd	r25, Z+3	; 0x03
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	40 e8       	ldi	r20, 0x80	; 128
    212e:	5f e3       	ldi	r21, 0x3F	; 63
    2130:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2134:	88 23       	and	r24, r24
    2136:	44 f4       	brge	.+16     	; 0x2148 <run+0x1704>
		__ticks = 1;
    2138:	fe 01       	movw	r30, r28
    213a:	e9 5b       	subi	r30, 0xB9	; 185
    213c:	fe 4f       	sbci	r31, 0xFE	; 254
    213e:	81 e0       	ldi	r24, 0x01	; 1
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	91 83       	std	Z+1, r25	; 0x01
    2144:	80 83       	st	Z, r24
    2146:	64 c0       	rjmp	.+200    	; 0x2210 <__stack+0x11>
	else if (__tmp > 65535)
    2148:	fe 01       	movw	r30, r28
    214a:	e7 5b       	subi	r30, 0xB7	; 183
    214c:	fe 4f       	sbci	r31, 0xFE	; 254
    214e:	60 81       	ld	r22, Z
    2150:	71 81       	ldd	r23, Z+1	; 0x01
    2152:	82 81       	ldd	r24, Z+2	; 0x02
    2154:	93 81       	ldd	r25, Z+3	; 0x03
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	3f ef       	ldi	r19, 0xFF	; 255
    215a:	4f e7       	ldi	r20, 0x7F	; 127
    215c:	57 e4       	ldi	r21, 0x47	; 71
    215e:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    2162:	18 16       	cp	r1, r24
    2164:	0c f0       	brlt	.+2      	; 0x2168 <run+0x1724>
    2166:	43 c0       	rjmp	.+134    	; 0x21ee <run+0x17aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2168:	fe 01       	movw	r30, r28
    216a:	e3 5b       	subi	r30, 0xB3	; 179
    216c:	fe 4f       	sbci	r31, 0xFE	; 254
    216e:	60 81       	ld	r22, Z
    2170:	71 81       	ldd	r23, Z+1	; 0x01
    2172:	82 81       	ldd	r24, Z+2	; 0x02
    2174:	93 81       	ldd	r25, Z+3	; 0x03
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	30 e0       	ldi	r19, 0x00	; 0
    217a:	40 e2       	ldi	r20, 0x20	; 32
    217c:	51 e4       	ldi	r21, 0x41	; 65
    217e:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2182:	dc 01       	movw	r26, r24
    2184:	cb 01       	movw	r24, r22
    2186:	8e 01       	movw	r16, r28
    2188:	09 5b       	subi	r16, 0xB9	; 185
    218a:	1e 4f       	sbci	r17, 0xFE	; 254
    218c:	bc 01       	movw	r22, r24
    218e:	cd 01       	movw	r24, r26
    2190:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2194:	dc 01       	movw	r26, r24
    2196:	cb 01       	movw	r24, r22
    2198:	f8 01       	movw	r30, r16
    219a:	91 83       	std	Z+1, r25	; 0x01
    219c:	80 83       	st	Z, r24
    219e:	1f c0       	rjmp	.+62     	; 0x21de <run+0x179a>
    21a0:	fe 01       	movw	r30, r28
    21a2:	eb 5b       	subi	r30, 0xBB	; 187
    21a4:	fe 4f       	sbci	r31, 0xFE	; 254
    21a6:	80 e7       	ldi	r24, 0x70	; 112
    21a8:	91 e0       	ldi	r25, 0x01	; 1
    21aa:	91 83       	std	Z+1, r25	; 0x01
    21ac:	80 83       	st	Z, r24
    21ae:	fe 01       	movw	r30, r28
    21b0:	eb 5b       	subi	r30, 0xBB	; 187
    21b2:	fe 4f       	sbci	r31, 0xFE	; 254
    21b4:	80 81       	ld	r24, Z
    21b6:	91 81       	ldd	r25, Z+1	; 0x01
    21b8:	01 97       	sbiw	r24, 0x01	; 1
    21ba:	f1 f7       	brne	.-4      	; 0x21b8 <run+0x1774>
    21bc:	fe 01       	movw	r30, r28
    21be:	eb 5b       	subi	r30, 0xBB	; 187
    21c0:	fe 4f       	sbci	r31, 0xFE	; 254
    21c2:	91 83       	std	Z+1, r25	; 0x01
    21c4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21c6:	de 01       	movw	r26, r28
    21c8:	a9 5b       	subi	r26, 0xB9	; 185
    21ca:	be 4f       	sbci	r27, 0xFE	; 254
    21cc:	fe 01       	movw	r30, r28
    21ce:	e9 5b       	subi	r30, 0xB9	; 185
    21d0:	fe 4f       	sbci	r31, 0xFE	; 254
    21d2:	80 81       	ld	r24, Z
    21d4:	91 81       	ldd	r25, Z+1	; 0x01
    21d6:	01 97       	sbiw	r24, 0x01	; 1
    21d8:	11 96       	adiw	r26, 0x01	; 1
    21da:	9c 93       	st	X, r25
    21dc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21de:	fe 01       	movw	r30, r28
    21e0:	e9 5b       	subi	r30, 0xB9	; 185
    21e2:	fe 4f       	sbci	r31, 0xFE	; 254
    21e4:	80 81       	ld	r24, Z
    21e6:	91 81       	ldd	r25, Z+1	; 0x01
    21e8:	00 97       	sbiw	r24, 0x00	; 0
    21ea:	d1 f6       	brne	.-76     	; 0x21a0 <run+0x175c>
    21ec:	27 c0       	rjmp	.+78     	; 0x223c <__stack+0x3d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ee:	8e 01       	movw	r16, r28
    21f0:	09 5b       	subi	r16, 0xB9	; 185
    21f2:	1e 4f       	sbci	r17, 0xFE	; 254
    21f4:	fe 01       	movw	r30, r28
    21f6:	e7 5b       	subi	r30, 0xB7	; 183
    21f8:	fe 4f       	sbci	r31, 0xFE	; 254
    21fa:	60 81       	ld	r22, Z
    21fc:	71 81       	ldd	r23, Z+1	; 0x01
    21fe:	82 81       	ldd	r24, Z+2	; 0x02
    2200:	93 81       	ldd	r25, Z+3	; 0x03
    2202:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2206:	dc 01       	movw	r26, r24
    2208:	cb 01       	movw	r24, r22
    220a:	f8 01       	movw	r30, r16
    220c:	91 83       	std	Z+1, r25	; 0x01
    220e:	80 83       	st	Z, r24
    2210:	de 01       	movw	r26, r28
    2212:	ad 5b       	subi	r26, 0xBD	; 189
    2214:	be 4f       	sbci	r27, 0xFE	; 254
    2216:	fe 01       	movw	r30, r28
    2218:	e9 5b       	subi	r30, 0xB9	; 185
    221a:	fe 4f       	sbci	r31, 0xFE	; 254
    221c:	80 81       	ld	r24, Z
    221e:	91 81       	ldd	r25, Z+1	; 0x01
    2220:	8d 93       	st	X+, r24
    2222:	9c 93       	st	X, r25
    2224:	fe 01       	movw	r30, r28
    2226:	ed 5b       	subi	r30, 0xBD	; 189
    2228:	fe 4f       	sbci	r31, 0xFE	; 254
    222a:	80 81       	ld	r24, Z
    222c:	91 81       	ldd	r25, Z+1	; 0x01
    222e:	01 97       	sbiw	r24, 0x01	; 1
    2230:	f1 f7       	brne	.-4      	; 0x222e <__stack+0x2f>
    2232:	fe 01       	movw	r30, r28
    2234:	ed 5b       	subi	r30, 0xBD	; 189
    2236:	fe 4f       	sbci	r31, 0xFE	; 254
    2238:	91 83       	std	Z+1, r25	; 0x01
    223a:	80 83       	st	Z, r24
			_delay_ms(50);
		    right_degrees(90);
    223c:	8a e5       	ldi	r24, 0x5A	; 90
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	0e 94 c3 03 	call	0x786	; 0x786 <right_degrees>
    2244:	fe 01       	movw	r30, r28
    2246:	e1 5c       	subi	r30, 0xC1	; 193
    2248:	fe 4f       	sbci	r31, 0xFE	; 254
    224a:	80 e0       	ldi	r24, 0x00	; 0
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	a8 e4       	ldi	r26, 0x48	; 72
    2250:	b2 e4       	ldi	r27, 0x42	; 66
    2252:	80 83       	st	Z, r24
    2254:	91 83       	std	Z+1, r25	; 0x01
    2256:	a2 83       	std	Z+2, r26	; 0x02
    2258:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    225a:	8e 01       	movw	r16, r28
    225c:	05 5c       	subi	r16, 0xC5	; 197
    225e:	1e 4f       	sbci	r17, 0xFE	; 254
    2260:	fe 01       	movw	r30, r28
    2262:	e1 5c       	subi	r30, 0xC1	; 193
    2264:	fe 4f       	sbci	r31, 0xFE	; 254
    2266:	60 81       	ld	r22, Z
    2268:	71 81       	ldd	r23, Z+1	; 0x01
    226a:	82 81       	ldd	r24, Z+2	; 0x02
    226c:	93 81       	ldd	r25, Z+3	; 0x03
    226e:	26 e6       	ldi	r18, 0x66	; 102
    2270:	36 e6       	ldi	r19, 0x66	; 102
    2272:	46 e6       	ldi	r20, 0x66	; 102
    2274:	55 e4       	ldi	r21, 0x45	; 69
    2276:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    227a:	dc 01       	movw	r26, r24
    227c:	cb 01       	movw	r24, r22
    227e:	f8 01       	movw	r30, r16
    2280:	80 83       	st	Z, r24
    2282:	91 83       	std	Z+1, r25	; 0x01
    2284:	a2 83       	std	Z+2, r26	; 0x02
    2286:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2288:	fe 01       	movw	r30, r28
    228a:	e5 5c       	subi	r30, 0xC5	; 197
    228c:	fe 4f       	sbci	r31, 0xFE	; 254
    228e:	60 81       	ld	r22, Z
    2290:	71 81       	ldd	r23, Z+1	; 0x01
    2292:	82 81       	ldd	r24, Z+2	; 0x02
    2294:	93 81       	ldd	r25, Z+3	; 0x03
    2296:	20 e0       	ldi	r18, 0x00	; 0
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	40 e8       	ldi	r20, 0x80	; 128
    229c:	5f e3       	ldi	r21, 0x3F	; 63
    229e:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    22a2:	88 23       	and	r24, r24
    22a4:	44 f4       	brge	.+16     	; 0x22b6 <__stack+0xb7>
		__ticks = 1;
    22a6:	fe 01       	movw	r30, r28
    22a8:	e7 5c       	subi	r30, 0xC7	; 199
    22aa:	fe 4f       	sbci	r31, 0xFE	; 254
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	91 83       	std	Z+1, r25	; 0x01
    22b2:	80 83       	st	Z, r24
    22b4:	64 c0       	rjmp	.+200    	; 0x237e <__stack+0x17f>
	else if (__tmp > 65535)
    22b6:	fe 01       	movw	r30, r28
    22b8:	e5 5c       	subi	r30, 0xC5	; 197
    22ba:	fe 4f       	sbci	r31, 0xFE	; 254
    22bc:	60 81       	ld	r22, Z
    22be:	71 81       	ldd	r23, Z+1	; 0x01
    22c0:	82 81       	ldd	r24, Z+2	; 0x02
    22c2:	93 81       	ldd	r25, Z+3	; 0x03
    22c4:	20 e0       	ldi	r18, 0x00	; 0
    22c6:	3f ef       	ldi	r19, 0xFF	; 255
    22c8:	4f e7       	ldi	r20, 0x7F	; 127
    22ca:	57 e4       	ldi	r21, 0x47	; 71
    22cc:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    22d0:	18 16       	cp	r1, r24
    22d2:	0c f0       	brlt	.+2      	; 0x22d6 <__stack+0xd7>
    22d4:	43 c0       	rjmp	.+134    	; 0x235c <__stack+0x15d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22d6:	fe 01       	movw	r30, r28
    22d8:	e1 5c       	subi	r30, 0xC1	; 193
    22da:	fe 4f       	sbci	r31, 0xFE	; 254
    22dc:	60 81       	ld	r22, Z
    22de:	71 81       	ldd	r23, Z+1	; 0x01
    22e0:	82 81       	ldd	r24, Z+2	; 0x02
    22e2:	93 81       	ldd	r25, Z+3	; 0x03
    22e4:	20 e0       	ldi	r18, 0x00	; 0
    22e6:	30 e0       	ldi	r19, 0x00	; 0
    22e8:	40 e2       	ldi	r20, 0x20	; 32
    22ea:	51 e4       	ldi	r21, 0x41	; 65
    22ec:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    22f0:	dc 01       	movw	r26, r24
    22f2:	cb 01       	movw	r24, r22
    22f4:	8e 01       	movw	r16, r28
    22f6:	07 5c       	subi	r16, 0xC7	; 199
    22f8:	1e 4f       	sbci	r17, 0xFE	; 254
    22fa:	bc 01       	movw	r22, r24
    22fc:	cd 01       	movw	r24, r26
    22fe:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2302:	dc 01       	movw	r26, r24
    2304:	cb 01       	movw	r24, r22
    2306:	f8 01       	movw	r30, r16
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	80 83       	st	Z, r24
    230c:	1f c0       	rjmp	.+62     	; 0x234c <__stack+0x14d>
    230e:	fe 01       	movw	r30, r28
    2310:	e9 5c       	subi	r30, 0xC9	; 201
    2312:	fe 4f       	sbci	r31, 0xFE	; 254
    2314:	80 e7       	ldi	r24, 0x70	; 112
    2316:	91 e0       	ldi	r25, 0x01	; 1
    2318:	91 83       	std	Z+1, r25	; 0x01
    231a:	80 83       	st	Z, r24
    231c:	fe 01       	movw	r30, r28
    231e:	e9 5c       	subi	r30, 0xC9	; 201
    2320:	fe 4f       	sbci	r31, 0xFE	; 254
    2322:	80 81       	ld	r24, Z
    2324:	91 81       	ldd	r25, Z+1	; 0x01
    2326:	01 97       	sbiw	r24, 0x01	; 1
    2328:	f1 f7       	brne	.-4      	; 0x2326 <__stack+0x127>
    232a:	fe 01       	movw	r30, r28
    232c:	e9 5c       	subi	r30, 0xC9	; 201
    232e:	fe 4f       	sbci	r31, 0xFE	; 254
    2330:	91 83       	std	Z+1, r25	; 0x01
    2332:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2334:	de 01       	movw	r26, r28
    2336:	a7 5c       	subi	r26, 0xC7	; 199
    2338:	be 4f       	sbci	r27, 0xFE	; 254
    233a:	fe 01       	movw	r30, r28
    233c:	e7 5c       	subi	r30, 0xC7	; 199
    233e:	fe 4f       	sbci	r31, 0xFE	; 254
    2340:	80 81       	ld	r24, Z
    2342:	91 81       	ldd	r25, Z+1	; 0x01
    2344:	01 97       	sbiw	r24, 0x01	; 1
    2346:	11 96       	adiw	r26, 0x01	; 1
    2348:	9c 93       	st	X, r25
    234a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    234c:	fe 01       	movw	r30, r28
    234e:	e7 5c       	subi	r30, 0xC7	; 199
    2350:	fe 4f       	sbci	r31, 0xFE	; 254
    2352:	80 81       	ld	r24, Z
    2354:	91 81       	ldd	r25, Z+1	; 0x01
    2356:	00 97       	sbiw	r24, 0x00	; 0
    2358:	d1 f6       	brne	.-76     	; 0x230e <__stack+0x10f>
    235a:	27 c0       	rjmp	.+78     	; 0x23aa <__stack+0x1ab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    235c:	8e 01       	movw	r16, r28
    235e:	07 5c       	subi	r16, 0xC7	; 199
    2360:	1e 4f       	sbci	r17, 0xFE	; 254
    2362:	fe 01       	movw	r30, r28
    2364:	e5 5c       	subi	r30, 0xC5	; 197
    2366:	fe 4f       	sbci	r31, 0xFE	; 254
    2368:	60 81       	ld	r22, Z
    236a:	71 81       	ldd	r23, Z+1	; 0x01
    236c:	82 81       	ldd	r24, Z+2	; 0x02
    236e:	93 81       	ldd	r25, Z+3	; 0x03
    2370:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2374:	dc 01       	movw	r26, r24
    2376:	cb 01       	movw	r24, r22
    2378:	f8 01       	movw	r30, r16
    237a:	91 83       	std	Z+1, r25	; 0x01
    237c:	80 83       	st	Z, r24
    237e:	de 01       	movw	r26, r28
    2380:	ab 5c       	subi	r26, 0xCB	; 203
    2382:	be 4f       	sbci	r27, 0xFE	; 254
    2384:	fe 01       	movw	r30, r28
    2386:	e7 5c       	subi	r30, 0xC7	; 199
    2388:	fe 4f       	sbci	r31, 0xFE	; 254
    238a:	80 81       	ld	r24, Z
    238c:	91 81       	ldd	r25, Z+1	; 0x01
    238e:	8d 93       	st	X+, r24
    2390:	9c 93       	st	X, r25
    2392:	fe 01       	movw	r30, r28
    2394:	eb 5c       	subi	r30, 0xCB	; 203
    2396:	fe 4f       	sbci	r31, 0xFE	; 254
    2398:	80 81       	ld	r24, Z
    239a:	91 81       	ldd	r25, Z+1	; 0x01
    239c:	01 97       	sbiw	r24, 0x01	; 1
    239e:	f1 f7       	brne	.-4      	; 0x239c <__stack+0x19d>
    23a0:	fe 01       	movw	r30, r28
    23a2:	eb 5c       	subi	r30, 0xCB	; 203
    23a4:	fe 4f       	sbci	r31, 0xFE	; 254
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
			_delay_ms(50);
			back_mm(35);
    23aa:	83 e2       	ldi	r24, 0x23	; 35
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
    23b2:	fe 01       	movw	r30, r28
    23b4:	ef 5c       	subi	r30, 0xCF	; 207
    23b6:	fe 4f       	sbci	r31, 0xFE	; 254
    23b8:	80 e0       	ldi	r24, 0x00	; 0
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	a8 e4       	ldi	r26, 0x48	; 72
    23be:	b2 e4       	ldi	r27, 0x42	; 66
    23c0:	80 83       	st	Z, r24
    23c2:	91 83       	std	Z+1, r25	; 0x01
    23c4:	a2 83       	std	Z+2, r26	; 0x02
    23c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23c8:	8e 01       	movw	r16, r28
    23ca:	03 5d       	subi	r16, 0xD3	; 211
    23cc:	1e 4f       	sbci	r17, 0xFE	; 254
    23ce:	fe 01       	movw	r30, r28
    23d0:	ef 5c       	subi	r30, 0xCF	; 207
    23d2:	fe 4f       	sbci	r31, 0xFE	; 254
    23d4:	60 81       	ld	r22, Z
    23d6:	71 81       	ldd	r23, Z+1	; 0x01
    23d8:	82 81       	ldd	r24, Z+2	; 0x02
    23da:	93 81       	ldd	r25, Z+3	; 0x03
    23dc:	26 e6       	ldi	r18, 0x66	; 102
    23de:	36 e6       	ldi	r19, 0x66	; 102
    23e0:	46 e6       	ldi	r20, 0x66	; 102
    23e2:	55 e4       	ldi	r21, 0x45	; 69
    23e4:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    23e8:	dc 01       	movw	r26, r24
    23ea:	cb 01       	movw	r24, r22
    23ec:	f8 01       	movw	r30, r16
    23ee:	80 83       	st	Z, r24
    23f0:	91 83       	std	Z+1, r25	; 0x01
    23f2:	a2 83       	std	Z+2, r26	; 0x02
    23f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23f6:	fe 01       	movw	r30, r28
    23f8:	e3 5d       	subi	r30, 0xD3	; 211
    23fa:	fe 4f       	sbci	r31, 0xFE	; 254
    23fc:	60 81       	ld	r22, Z
    23fe:	71 81       	ldd	r23, Z+1	; 0x01
    2400:	82 81       	ldd	r24, Z+2	; 0x02
    2402:	93 81       	ldd	r25, Z+3	; 0x03
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	40 e8       	ldi	r20, 0x80	; 128
    240a:	5f e3       	ldi	r21, 0x3F	; 63
    240c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2410:	88 23       	and	r24, r24
    2412:	44 f4       	brge	.+16     	; 0x2424 <__stack+0x225>
		__ticks = 1;
    2414:	fe 01       	movw	r30, r28
    2416:	e5 5d       	subi	r30, 0xD5	; 213
    2418:	fe 4f       	sbci	r31, 0xFE	; 254
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	90 e0       	ldi	r25, 0x00	; 0
    241e:	91 83       	std	Z+1, r25	; 0x01
    2420:	80 83       	st	Z, r24
    2422:	64 c0       	rjmp	.+200    	; 0x24ec <__stack+0x2ed>
	else if (__tmp > 65535)
    2424:	fe 01       	movw	r30, r28
    2426:	e3 5d       	subi	r30, 0xD3	; 211
    2428:	fe 4f       	sbci	r31, 0xFE	; 254
    242a:	60 81       	ld	r22, Z
    242c:	71 81       	ldd	r23, Z+1	; 0x01
    242e:	82 81       	ldd	r24, Z+2	; 0x02
    2430:	93 81       	ldd	r25, Z+3	; 0x03
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	3f ef       	ldi	r19, 0xFF	; 255
    2436:	4f e7       	ldi	r20, 0x7F	; 127
    2438:	57 e4       	ldi	r21, 0x47	; 71
    243a:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    243e:	18 16       	cp	r1, r24
    2440:	0c f0       	brlt	.+2      	; 0x2444 <__stack+0x245>
    2442:	43 c0       	rjmp	.+134    	; 0x24ca <__stack+0x2cb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2444:	fe 01       	movw	r30, r28
    2446:	ef 5c       	subi	r30, 0xCF	; 207
    2448:	fe 4f       	sbci	r31, 0xFE	; 254
    244a:	60 81       	ld	r22, Z
    244c:	71 81       	ldd	r23, Z+1	; 0x01
    244e:	82 81       	ldd	r24, Z+2	; 0x02
    2450:	93 81       	ldd	r25, Z+3	; 0x03
    2452:	20 e0       	ldi	r18, 0x00	; 0
    2454:	30 e0       	ldi	r19, 0x00	; 0
    2456:	40 e2       	ldi	r20, 0x20	; 32
    2458:	51 e4       	ldi	r21, 0x41	; 65
    245a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    245e:	dc 01       	movw	r26, r24
    2460:	cb 01       	movw	r24, r22
    2462:	8e 01       	movw	r16, r28
    2464:	05 5d       	subi	r16, 0xD5	; 213
    2466:	1e 4f       	sbci	r17, 0xFE	; 254
    2468:	bc 01       	movw	r22, r24
    246a:	cd 01       	movw	r24, r26
    246c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2470:	dc 01       	movw	r26, r24
    2472:	cb 01       	movw	r24, r22
    2474:	f8 01       	movw	r30, r16
    2476:	91 83       	std	Z+1, r25	; 0x01
    2478:	80 83       	st	Z, r24
    247a:	1f c0       	rjmp	.+62     	; 0x24ba <__stack+0x2bb>
    247c:	fe 01       	movw	r30, r28
    247e:	e7 5d       	subi	r30, 0xD7	; 215
    2480:	fe 4f       	sbci	r31, 0xFE	; 254
    2482:	80 e7       	ldi	r24, 0x70	; 112
    2484:	91 e0       	ldi	r25, 0x01	; 1
    2486:	91 83       	std	Z+1, r25	; 0x01
    2488:	80 83       	st	Z, r24
    248a:	fe 01       	movw	r30, r28
    248c:	e7 5d       	subi	r30, 0xD7	; 215
    248e:	fe 4f       	sbci	r31, 0xFE	; 254
    2490:	80 81       	ld	r24, Z
    2492:	91 81       	ldd	r25, Z+1	; 0x01
    2494:	01 97       	sbiw	r24, 0x01	; 1
    2496:	f1 f7       	brne	.-4      	; 0x2494 <__stack+0x295>
    2498:	fe 01       	movw	r30, r28
    249a:	e7 5d       	subi	r30, 0xD7	; 215
    249c:	fe 4f       	sbci	r31, 0xFE	; 254
    249e:	91 83       	std	Z+1, r25	; 0x01
    24a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24a2:	de 01       	movw	r26, r28
    24a4:	a5 5d       	subi	r26, 0xD5	; 213
    24a6:	be 4f       	sbci	r27, 0xFE	; 254
    24a8:	fe 01       	movw	r30, r28
    24aa:	e5 5d       	subi	r30, 0xD5	; 213
    24ac:	fe 4f       	sbci	r31, 0xFE	; 254
    24ae:	80 81       	ld	r24, Z
    24b0:	91 81       	ldd	r25, Z+1	; 0x01
    24b2:	01 97       	sbiw	r24, 0x01	; 1
    24b4:	11 96       	adiw	r26, 0x01	; 1
    24b6:	9c 93       	st	X, r25
    24b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24ba:	fe 01       	movw	r30, r28
    24bc:	e5 5d       	subi	r30, 0xD5	; 213
    24be:	fe 4f       	sbci	r31, 0xFE	; 254
    24c0:	80 81       	ld	r24, Z
    24c2:	91 81       	ldd	r25, Z+1	; 0x01
    24c4:	00 97       	sbiw	r24, 0x00	; 0
    24c6:	d1 f6       	brne	.-76     	; 0x247c <__stack+0x27d>
    24c8:	27 c0       	rjmp	.+78     	; 0x2518 <__stack+0x319>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24ca:	8e 01       	movw	r16, r28
    24cc:	05 5d       	subi	r16, 0xD5	; 213
    24ce:	1e 4f       	sbci	r17, 0xFE	; 254
    24d0:	fe 01       	movw	r30, r28
    24d2:	e3 5d       	subi	r30, 0xD3	; 211
    24d4:	fe 4f       	sbci	r31, 0xFE	; 254
    24d6:	60 81       	ld	r22, Z
    24d8:	71 81       	ldd	r23, Z+1	; 0x01
    24da:	82 81       	ldd	r24, Z+2	; 0x02
    24dc:	93 81       	ldd	r25, Z+3	; 0x03
    24de:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    24e2:	dc 01       	movw	r26, r24
    24e4:	cb 01       	movw	r24, r22
    24e6:	f8 01       	movw	r30, r16
    24e8:	91 83       	std	Z+1, r25	; 0x01
    24ea:	80 83       	st	Z, r24
    24ec:	de 01       	movw	r26, r28
    24ee:	a9 5d       	subi	r26, 0xD9	; 217
    24f0:	be 4f       	sbci	r27, 0xFE	; 254
    24f2:	fe 01       	movw	r30, r28
    24f4:	e5 5d       	subi	r30, 0xD5	; 213
    24f6:	fe 4f       	sbci	r31, 0xFE	; 254
    24f8:	80 81       	ld	r24, Z
    24fa:	91 81       	ldd	r25, Z+1	; 0x01
    24fc:	8d 93       	st	X+, r24
    24fe:	9c 93       	st	X, r25
    2500:	fe 01       	movw	r30, r28
    2502:	e9 5d       	subi	r30, 0xD9	; 217
    2504:	fe 4f       	sbci	r31, 0xFE	; 254
    2506:	80 81       	ld	r24, Z
    2508:	91 81       	ldd	r25, Z+1	; 0x01
    250a:	01 97       	sbiw	r24, 0x01	; 1
    250c:	f1 f7       	brne	.-4      	; 0x250a <__stack+0x30b>
    250e:	fe 01       	movw	r30, r28
    2510:	e9 5d       	subi	r30, 0xD9	; 217
    2512:	fe 4f       	sbci	r31, 0xFE	; 254
    2514:	91 83       	std	Z+1, r25	; 0x01
    2516:	80 83       	st	Z, r24
			_delay_ms(50);
			stop();
    2518:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    251c:	fe 01       	movw	r30, r28
    251e:	ed 5d       	subi	r30, 0xDD	; 221
    2520:	fe 4f       	sbci	r31, 0xFE	; 254
    2522:	80 e0       	ldi	r24, 0x00	; 0
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	a8 ec       	ldi	r26, 0xC8	; 200
    2528:	b2 e4       	ldi	r27, 0x42	; 66
    252a:	80 83       	st	Z, r24
    252c:	91 83       	std	Z+1, r25	; 0x01
    252e:	a2 83       	std	Z+2, r26	; 0x02
    2530:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2532:	8e 01       	movw	r16, r28
    2534:	01 5e       	subi	r16, 0xE1	; 225
    2536:	1e 4f       	sbci	r17, 0xFE	; 254
    2538:	fe 01       	movw	r30, r28
    253a:	ed 5d       	subi	r30, 0xDD	; 221
    253c:	fe 4f       	sbci	r31, 0xFE	; 254
    253e:	60 81       	ld	r22, Z
    2540:	71 81       	ldd	r23, Z+1	; 0x01
    2542:	82 81       	ldd	r24, Z+2	; 0x02
    2544:	93 81       	ldd	r25, Z+3	; 0x03
    2546:	26 e6       	ldi	r18, 0x66	; 102
    2548:	36 e6       	ldi	r19, 0x66	; 102
    254a:	46 e6       	ldi	r20, 0x66	; 102
    254c:	55 e4       	ldi	r21, 0x45	; 69
    254e:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2552:	dc 01       	movw	r26, r24
    2554:	cb 01       	movw	r24, r22
    2556:	f8 01       	movw	r30, r16
    2558:	80 83       	st	Z, r24
    255a:	91 83       	std	Z+1, r25	; 0x01
    255c:	a2 83       	std	Z+2, r26	; 0x02
    255e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2560:	fe 01       	movw	r30, r28
    2562:	e1 5e       	subi	r30, 0xE1	; 225
    2564:	fe 4f       	sbci	r31, 0xFE	; 254
    2566:	60 81       	ld	r22, Z
    2568:	71 81       	ldd	r23, Z+1	; 0x01
    256a:	82 81       	ldd	r24, Z+2	; 0x02
    256c:	93 81       	ldd	r25, Z+3	; 0x03
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	40 e8       	ldi	r20, 0x80	; 128
    2574:	5f e3       	ldi	r21, 0x3F	; 63
    2576:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    257a:	88 23       	and	r24, r24
    257c:	44 f4       	brge	.+16     	; 0x258e <__stack+0x38f>
		__ticks = 1;
    257e:	fe 01       	movw	r30, r28
    2580:	e3 5e       	subi	r30, 0xE3	; 227
    2582:	fe 4f       	sbci	r31, 0xFE	; 254
    2584:	81 e0       	ldi	r24, 0x01	; 1
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	91 83       	std	Z+1, r25	; 0x01
    258a:	80 83       	st	Z, r24
    258c:	64 c0       	rjmp	.+200    	; 0x2656 <__stack+0x457>
	else if (__tmp > 65535)
    258e:	fe 01       	movw	r30, r28
    2590:	e1 5e       	subi	r30, 0xE1	; 225
    2592:	fe 4f       	sbci	r31, 0xFE	; 254
    2594:	60 81       	ld	r22, Z
    2596:	71 81       	ldd	r23, Z+1	; 0x01
    2598:	82 81       	ldd	r24, Z+2	; 0x02
    259a:	93 81       	ldd	r25, Z+3	; 0x03
    259c:	20 e0       	ldi	r18, 0x00	; 0
    259e:	3f ef       	ldi	r19, 0xFF	; 255
    25a0:	4f e7       	ldi	r20, 0x7F	; 127
    25a2:	57 e4       	ldi	r21, 0x47	; 71
    25a4:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    25a8:	18 16       	cp	r1, r24
    25aa:	0c f0       	brlt	.+2      	; 0x25ae <__stack+0x3af>
    25ac:	43 c0       	rjmp	.+134    	; 0x2634 <__stack+0x435>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ae:	fe 01       	movw	r30, r28
    25b0:	ed 5d       	subi	r30, 0xDD	; 221
    25b2:	fe 4f       	sbci	r31, 0xFE	; 254
    25b4:	60 81       	ld	r22, Z
    25b6:	71 81       	ldd	r23, Z+1	; 0x01
    25b8:	82 81       	ldd	r24, Z+2	; 0x02
    25ba:	93 81       	ldd	r25, Z+3	; 0x03
    25bc:	20 e0       	ldi	r18, 0x00	; 0
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	40 e2       	ldi	r20, 0x20	; 32
    25c2:	51 e4       	ldi	r21, 0x41	; 65
    25c4:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    25c8:	dc 01       	movw	r26, r24
    25ca:	cb 01       	movw	r24, r22
    25cc:	8e 01       	movw	r16, r28
    25ce:	03 5e       	subi	r16, 0xE3	; 227
    25d0:	1e 4f       	sbci	r17, 0xFE	; 254
    25d2:	bc 01       	movw	r22, r24
    25d4:	cd 01       	movw	r24, r26
    25d6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    25da:	dc 01       	movw	r26, r24
    25dc:	cb 01       	movw	r24, r22
    25de:	f8 01       	movw	r30, r16
    25e0:	91 83       	std	Z+1, r25	; 0x01
    25e2:	80 83       	st	Z, r24
    25e4:	1f c0       	rjmp	.+62     	; 0x2624 <__stack+0x425>
    25e6:	fe 01       	movw	r30, r28
    25e8:	e5 5e       	subi	r30, 0xE5	; 229
    25ea:	fe 4f       	sbci	r31, 0xFE	; 254
    25ec:	80 e7       	ldi	r24, 0x70	; 112
    25ee:	91 e0       	ldi	r25, 0x01	; 1
    25f0:	91 83       	std	Z+1, r25	; 0x01
    25f2:	80 83       	st	Z, r24
    25f4:	fe 01       	movw	r30, r28
    25f6:	e5 5e       	subi	r30, 0xE5	; 229
    25f8:	fe 4f       	sbci	r31, 0xFE	; 254
    25fa:	80 81       	ld	r24, Z
    25fc:	91 81       	ldd	r25, Z+1	; 0x01
    25fe:	01 97       	sbiw	r24, 0x01	; 1
    2600:	f1 f7       	brne	.-4      	; 0x25fe <__stack+0x3ff>
    2602:	fe 01       	movw	r30, r28
    2604:	e5 5e       	subi	r30, 0xE5	; 229
    2606:	fe 4f       	sbci	r31, 0xFE	; 254
    2608:	91 83       	std	Z+1, r25	; 0x01
    260a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    260c:	de 01       	movw	r26, r28
    260e:	a3 5e       	subi	r26, 0xE3	; 227
    2610:	be 4f       	sbci	r27, 0xFE	; 254
    2612:	fe 01       	movw	r30, r28
    2614:	e3 5e       	subi	r30, 0xE3	; 227
    2616:	fe 4f       	sbci	r31, 0xFE	; 254
    2618:	80 81       	ld	r24, Z
    261a:	91 81       	ldd	r25, Z+1	; 0x01
    261c:	01 97       	sbiw	r24, 0x01	; 1
    261e:	11 96       	adiw	r26, 0x01	; 1
    2620:	9c 93       	st	X, r25
    2622:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2624:	fe 01       	movw	r30, r28
    2626:	e3 5e       	subi	r30, 0xE3	; 227
    2628:	fe 4f       	sbci	r31, 0xFE	; 254
    262a:	80 81       	ld	r24, Z
    262c:	91 81       	ldd	r25, Z+1	; 0x01
    262e:	00 97       	sbiw	r24, 0x00	; 0
    2630:	d1 f6       	brne	.-76     	; 0x25e6 <__stack+0x3e7>
    2632:	27 c0       	rjmp	.+78     	; 0x2682 <__stack+0x483>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2634:	8e 01       	movw	r16, r28
    2636:	03 5e       	subi	r16, 0xE3	; 227
    2638:	1e 4f       	sbci	r17, 0xFE	; 254
    263a:	fe 01       	movw	r30, r28
    263c:	e1 5e       	subi	r30, 0xE1	; 225
    263e:	fe 4f       	sbci	r31, 0xFE	; 254
    2640:	60 81       	ld	r22, Z
    2642:	71 81       	ldd	r23, Z+1	; 0x01
    2644:	82 81       	ldd	r24, Z+2	; 0x02
    2646:	93 81       	ldd	r25, Z+3	; 0x03
    2648:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    264c:	dc 01       	movw	r26, r24
    264e:	cb 01       	movw	r24, r22
    2650:	f8 01       	movw	r30, r16
    2652:	91 83       	std	Z+1, r25	; 0x01
    2654:	80 83       	st	Z, r24
    2656:	de 01       	movw	r26, r28
    2658:	a7 5e       	subi	r26, 0xE7	; 231
    265a:	be 4f       	sbci	r27, 0xFE	; 254
    265c:	fe 01       	movw	r30, r28
    265e:	e3 5e       	subi	r30, 0xE3	; 227
    2660:	fe 4f       	sbci	r31, 0xFE	; 254
    2662:	80 81       	ld	r24, Z
    2664:	91 81       	ldd	r25, Z+1	; 0x01
    2666:	8d 93       	st	X+, r24
    2668:	9c 93       	st	X, r25
    266a:	fe 01       	movw	r30, r28
    266c:	e7 5e       	subi	r30, 0xE7	; 231
    266e:	fe 4f       	sbci	r31, 0xFE	; 254
    2670:	80 81       	ld	r24, Z
    2672:	91 81       	ldd	r25, Z+1	; 0x01
    2674:	01 97       	sbiw	r24, 0x01	; 1
    2676:	f1 f7       	brne	.-4      	; 0x2674 <__stack+0x475>
    2678:	fe 01       	movw	r30, r28
    267a:	e7 5e       	subi	r30, 0xE7	; 231
    267c:	fe 4f       	sbci	r31, 0xFE	; 254
    267e:	91 83       	std	Z+1, r25	; 0x01
    2680:	80 83       	st	Z, r24
			_delay_ms(100);
			update_orientation(data);		
    2682:	fe 01       	movw	r30, r28
    2684:	eb 5e       	subi	r30, 0xEB	; 235
    2686:	fd 4f       	sbci	r31, 0xFD	; 253
    2688:	80 81       	ld	r24, Z
    268a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
    268e:	fc c4       	rjmp	.+2552   	; 0x3088 <__stack+0xe89>
		}
        else if((data == 0x61 && orientation==2) || (data == 0x62 && orientation==0) || (data == 0x63 && orientation==1) || (data == 0x64 && orientation==3))
    2690:	fe 01       	movw	r30, r28
    2692:	eb 5e       	subi	r30, 0xEB	; 235
    2694:	fd 4f       	sbci	r31, 0xFD	; 253
    2696:	80 81       	ld	r24, Z
    2698:	81 36       	cpi	r24, 0x61	; 97
    269a:	39 f4       	brne	.+14     	; 0x26aa <__stack+0x4ab>
    269c:	80 91 11 03 	lds	r24, 0x0311
    26a0:	90 91 12 03 	lds	r25, 0x0312
    26a4:	82 30       	cpi	r24, 0x02	; 2
    26a6:	91 05       	cpc	r25, r1
    26a8:	41 f1       	breq	.+80     	; 0x26fa <__stack+0x4fb>
    26aa:	fe 01       	movw	r30, r28
    26ac:	eb 5e       	subi	r30, 0xEB	; 235
    26ae:	fd 4f       	sbci	r31, 0xFD	; 253
    26b0:	80 81       	ld	r24, Z
    26b2:	82 36       	cpi	r24, 0x62	; 98
    26b4:	31 f4       	brne	.+12     	; 0x26c2 <__stack+0x4c3>
    26b6:	80 91 11 03 	lds	r24, 0x0311
    26ba:	90 91 12 03 	lds	r25, 0x0312
    26be:	00 97       	sbiw	r24, 0x00	; 0
    26c0:	e1 f0       	breq	.+56     	; 0x26fa <__stack+0x4fb>
    26c2:	fe 01       	movw	r30, r28
    26c4:	eb 5e       	subi	r30, 0xEB	; 235
    26c6:	fd 4f       	sbci	r31, 0xFD	; 253
    26c8:	80 81       	ld	r24, Z
    26ca:	83 36       	cpi	r24, 0x63	; 99
    26cc:	39 f4       	brne	.+14     	; 0x26dc <__stack+0x4dd>
    26ce:	80 91 11 03 	lds	r24, 0x0311
    26d2:	90 91 12 03 	lds	r25, 0x0312
    26d6:	81 30       	cpi	r24, 0x01	; 1
    26d8:	91 05       	cpc	r25, r1
    26da:	79 f0       	breq	.+30     	; 0x26fa <__stack+0x4fb>
    26dc:	fe 01       	movw	r30, r28
    26de:	eb 5e       	subi	r30, 0xEB	; 235
    26e0:	fd 4f       	sbci	r31, 0xFD	; 253
    26e2:	80 81       	ld	r24, Z
    26e4:	84 36       	cpi	r24, 0x64	; 100
    26e6:	09 f0       	breq	.+2      	; 0x26ea <__stack+0x4eb>
    26e8:	36 c2       	rjmp	.+1132   	; 0x2b56 <__stack+0x957>
    26ea:	80 91 11 03 	lds	r24, 0x0311
    26ee:	90 91 12 03 	lds	r25, 0x0312
    26f2:	83 30       	cpi	r24, 0x03	; 3
    26f4:	91 05       	cpc	r25, r1
    26f6:	09 f0       	breq	.+2      	; 0x26fa <__stack+0x4fb>
    26f8:	2e c2       	rjmp	.+1116   	; 0x2b56 <__stack+0x957>
			{
			forward_mm(30);
    26fa:	8e e1       	ldi	r24, 0x1E	; 30
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
    2702:	fe 01       	movw	r30, r28
    2704:	eb 5e       	subi	r30, 0xEB	; 235
    2706:	fe 4f       	sbci	r31, 0xFE	; 254
    2708:	80 e0       	ldi	r24, 0x00	; 0
    270a:	90 e0       	ldi	r25, 0x00	; 0
    270c:	a8 e4       	ldi	r26, 0x48	; 72
    270e:	b2 e4       	ldi	r27, 0x42	; 66
    2710:	80 83       	st	Z, r24
    2712:	91 83       	std	Z+1, r25	; 0x01
    2714:	a2 83       	std	Z+2, r26	; 0x02
    2716:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2718:	8e 01       	movw	r16, r28
    271a:	0f 5e       	subi	r16, 0xEF	; 239
    271c:	1e 4f       	sbci	r17, 0xFE	; 254
    271e:	fe 01       	movw	r30, r28
    2720:	eb 5e       	subi	r30, 0xEB	; 235
    2722:	fe 4f       	sbci	r31, 0xFE	; 254
    2724:	60 81       	ld	r22, Z
    2726:	71 81       	ldd	r23, Z+1	; 0x01
    2728:	82 81       	ldd	r24, Z+2	; 0x02
    272a:	93 81       	ldd	r25, Z+3	; 0x03
    272c:	26 e6       	ldi	r18, 0x66	; 102
    272e:	36 e6       	ldi	r19, 0x66	; 102
    2730:	46 e6       	ldi	r20, 0x66	; 102
    2732:	55 e4       	ldi	r21, 0x45	; 69
    2734:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2738:	dc 01       	movw	r26, r24
    273a:	cb 01       	movw	r24, r22
    273c:	f8 01       	movw	r30, r16
    273e:	80 83       	st	Z, r24
    2740:	91 83       	std	Z+1, r25	; 0x01
    2742:	a2 83       	std	Z+2, r26	; 0x02
    2744:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2746:	fe 01       	movw	r30, r28
    2748:	ef 5e       	subi	r30, 0xEF	; 239
    274a:	fe 4f       	sbci	r31, 0xFE	; 254
    274c:	60 81       	ld	r22, Z
    274e:	71 81       	ldd	r23, Z+1	; 0x01
    2750:	82 81       	ldd	r24, Z+2	; 0x02
    2752:	93 81       	ldd	r25, Z+3	; 0x03
    2754:	20 e0       	ldi	r18, 0x00	; 0
    2756:	30 e0       	ldi	r19, 0x00	; 0
    2758:	40 e8       	ldi	r20, 0x80	; 128
    275a:	5f e3       	ldi	r21, 0x3F	; 63
    275c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2760:	88 23       	and	r24, r24
    2762:	44 f4       	brge	.+16     	; 0x2774 <__stack+0x575>
		__ticks = 1;
    2764:	fe 01       	movw	r30, r28
    2766:	e1 5f       	subi	r30, 0xF1	; 241
    2768:	fe 4f       	sbci	r31, 0xFE	; 254
    276a:	81 e0       	ldi	r24, 0x01	; 1
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	91 83       	std	Z+1, r25	; 0x01
    2770:	80 83       	st	Z, r24
    2772:	64 c0       	rjmp	.+200    	; 0x283c <__stack+0x63d>
	else if (__tmp > 65535)
    2774:	fe 01       	movw	r30, r28
    2776:	ef 5e       	subi	r30, 0xEF	; 239
    2778:	fe 4f       	sbci	r31, 0xFE	; 254
    277a:	60 81       	ld	r22, Z
    277c:	71 81       	ldd	r23, Z+1	; 0x01
    277e:	82 81       	ldd	r24, Z+2	; 0x02
    2780:	93 81       	ldd	r25, Z+3	; 0x03
    2782:	20 e0       	ldi	r18, 0x00	; 0
    2784:	3f ef       	ldi	r19, 0xFF	; 255
    2786:	4f e7       	ldi	r20, 0x7F	; 127
    2788:	57 e4       	ldi	r21, 0x47	; 71
    278a:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    278e:	18 16       	cp	r1, r24
    2790:	0c f0       	brlt	.+2      	; 0x2794 <__stack+0x595>
    2792:	43 c0       	rjmp	.+134    	; 0x281a <__stack+0x61b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2794:	fe 01       	movw	r30, r28
    2796:	eb 5e       	subi	r30, 0xEB	; 235
    2798:	fe 4f       	sbci	r31, 0xFE	; 254
    279a:	60 81       	ld	r22, Z
    279c:	71 81       	ldd	r23, Z+1	; 0x01
    279e:	82 81       	ldd	r24, Z+2	; 0x02
    27a0:	93 81       	ldd	r25, Z+3	; 0x03
    27a2:	20 e0       	ldi	r18, 0x00	; 0
    27a4:	30 e0       	ldi	r19, 0x00	; 0
    27a6:	40 e2       	ldi	r20, 0x20	; 32
    27a8:	51 e4       	ldi	r21, 0x41	; 65
    27aa:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    27ae:	dc 01       	movw	r26, r24
    27b0:	cb 01       	movw	r24, r22
    27b2:	8e 01       	movw	r16, r28
    27b4:	01 5f       	subi	r16, 0xF1	; 241
    27b6:	1e 4f       	sbci	r17, 0xFE	; 254
    27b8:	bc 01       	movw	r22, r24
    27ba:	cd 01       	movw	r24, r26
    27bc:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    27c0:	dc 01       	movw	r26, r24
    27c2:	cb 01       	movw	r24, r22
    27c4:	f8 01       	movw	r30, r16
    27c6:	91 83       	std	Z+1, r25	; 0x01
    27c8:	80 83       	st	Z, r24
    27ca:	1f c0       	rjmp	.+62     	; 0x280a <__stack+0x60b>
    27cc:	fe 01       	movw	r30, r28
    27ce:	e3 5f       	subi	r30, 0xF3	; 243
    27d0:	fe 4f       	sbci	r31, 0xFE	; 254
    27d2:	80 e7       	ldi	r24, 0x70	; 112
    27d4:	91 e0       	ldi	r25, 0x01	; 1
    27d6:	91 83       	std	Z+1, r25	; 0x01
    27d8:	80 83       	st	Z, r24
    27da:	fe 01       	movw	r30, r28
    27dc:	e3 5f       	subi	r30, 0xF3	; 243
    27de:	fe 4f       	sbci	r31, 0xFE	; 254
    27e0:	80 81       	ld	r24, Z
    27e2:	91 81       	ldd	r25, Z+1	; 0x01
    27e4:	01 97       	sbiw	r24, 0x01	; 1
    27e6:	f1 f7       	brne	.-4      	; 0x27e4 <__stack+0x5e5>
    27e8:	fe 01       	movw	r30, r28
    27ea:	e3 5f       	subi	r30, 0xF3	; 243
    27ec:	fe 4f       	sbci	r31, 0xFE	; 254
    27ee:	91 83       	std	Z+1, r25	; 0x01
    27f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27f2:	de 01       	movw	r26, r28
    27f4:	a1 5f       	subi	r26, 0xF1	; 241
    27f6:	be 4f       	sbci	r27, 0xFE	; 254
    27f8:	fe 01       	movw	r30, r28
    27fa:	e1 5f       	subi	r30, 0xF1	; 241
    27fc:	fe 4f       	sbci	r31, 0xFE	; 254
    27fe:	80 81       	ld	r24, Z
    2800:	91 81       	ldd	r25, Z+1	; 0x01
    2802:	01 97       	sbiw	r24, 0x01	; 1
    2804:	11 96       	adiw	r26, 0x01	; 1
    2806:	9c 93       	st	X, r25
    2808:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    280a:	fe 01       	movw	r30, r28
    280c:	e1 5f       	subi	r30, 0xF1	; 241
    280e:	fe 4f       	sbci	r31, 0xFE	; 254
    2810:	80 81       	ld	r24, Z
    2812:	91 81       	ldd	r25, Z+1	; 0x01
    2814:	00 97       	sbiw	r24, 0x00	; 0
    2816:	d1 f6       	brne	.-76     	; 0x27cc <__stack+0x5cd>
    2818:	27 c0       	rjmp	.+78     	; 0x2868 <__stack+0x669>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    281a:	8e 01       	movw	r16, r28
    281c:	01 5f       	subi	r16, 0xF1	; 241
    281e:	1e 4f       	sbci	r17, 0xFE	; 254
    2820:	fe 01       	movw	r30, r28
    2822:	ef 5e       	subi	r30, 0xEF	; 239
    2824:	fe 4f       	sbci	r31, 0xFE	; 254
    2826:	60 81       	ld	r22, Z
    2828:	71 81       	ldd	r23, Z+1	; 0x01
    282a:	82 81       	ldd	r24, Z+2	; 0x02
    282c:	93 81       	ldd	r25, Z+3	; 0x03
    282e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2832:	dc 01       	movw	r26, r24
    2834:	cb 01       	movw	r24, r22
    2836:	f8 01       	movw	r30, r16
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	80 83       	st	Z, r24
    283c:	de 01       	movw	r26, r28
    283e:	a5 5f       	subi	r26, 0xF5	; 245
    2840:	be 4f       	sbci	r27, 0xFE	; 254
    2842:	fe 01       	movw	r30, r28
    2844:	e1 5f       	subi	r30, 0xF1	; 241
    2846:	fe 4f       	sbci	r31, 0xFE	; 254
    2848:	80 81       	ld	r24, Z
    284a:	91 81       	ldd	r25, Z+1	; 0x01
    284c:	8d 93       	st	X+, r24
    284e:	9c 93       	st	X, r25
    2850:	fe 01       	movw	r30, r28
    2852:	e5 5f       	subi	r30, 0xF5	; 245
    2854:	fe 4f       	sbci	r31, 0xFE	; 254
    2856:	80 81       	ld	r24, Z
    2858:	91 81       	ldd	r25, Z+1	; 0x01
    285a:	01 97       	sbiw	r24, 0x01	; 1
    285c:	f1 f7       	brne	.-4      	; 0x285a <__stack+0x65b>
    285e:	fe 01       	movw	r30, r28
    2860:	e5 5f       	subi	r30, 0xF5	; 245
    2862:	fe 4f       	sbci	r31, 0xFE	; 254
    2864:	91 83       	std	Z+1, r25	; 0x01
    2866:	80 83       	st	Z, r24
			_delay_ms(50);
		    left_degrees(88);
    2868:	88 e5       	ldi	r24, 0x58	; 88
    286a:	90 e0       	ldi	r25, 0x00	; 0
    286c:	0e 94 b0 03 	call	0x760	; 0x760 <left_degrees>
    2870:	fe 01       	movw	r30, r28
    2872:	e9 5f       	subi	r30, 0xF9	; 249
    2874:	fe 4f       	sbci	r31, 0xFE	; 254
    2876:	80 e0       	ldi	r24, 0x00	; 0
    2878:	90 e0       	ldi	r25, 0x00	; 0
    287a:	a8 e4       	ldi	r26, 0x48	; 72
    287c:	b2 e4       	ldi	r27, 0x42	; 66
    287e:	80 83       	st	Z, r24
    2880:	91 83       	std	Z+1, r25	; 0x01
    2882:	a2 83       	std	Z+2, r26	; 0x02
    2884:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2886:	8e 01       	movw	r16, r28
    2888:	0d 5f       	subi	r16, 0xFD	; 253
    288a:	1e 4f       	sbci	r17, 0xFE	; 254
    288c:	fe 01       	movw	r30, r28
    288e:	e9 5f       	subi	r30, 0xF9	; 249
    2890:	fe 4f       	sbci	r31, 0xFE	; 254
    2892:	60 81       	ld	r22, Z
    2894:	71 81       	ldd	r23, Z+1	; 0x01
    2896:	82 81       	ldd	r24, Z+2	; 0x02
    2898:	93 81       	ldd	r25, Z+3	; 0x03
    289a:	26 e6       	ldi	r18, 0x66	; 102
    289c:	36 e6       	ldi	r19, 0x66	; 102
    289e:	46 e6       	ldi	r20, 0x66	; 102
    28a0:	55 e4       	ldi	r21, 0x45	; 69
    28a2:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    28a6:	dc 01       	movw	r26, r24
    28a8:	cb 01       	movw	r24, r22
    28aa:	f8 01       	movw	r30, r16
    28ac:	80 83       	st	Z, r24
    28ae:	91 83       	std	Z+1, r25	; 0x01
    28b0:	a2 83       	std	Z+2, r26	; 0x02
    28b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28b4:	fe 01       	movw	r30, r28
    28b6:	ed 5f       	subi	r30, 0xFD	; 253
    28b8:	fe 4f       	sbci	r31, 0xFE	; 254
    28ba:	60 81       	ld	r22, Z
    28bc:	71 81       	ldd	r23, Z+1	; 0x01
    28be:	82 81       	ldd	r24, Z+2	; 0x02
    28c0:	93 81       	ldd	r25, Z+3	; 0x03
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	40 e8       	ldi	r20, 0x80	; 128
    28c8:	5f e3       	ldi	r21, 0x3F	; 63
    28ca:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    28ce:	88 23       	and	r24, r24
    28d0:	44 f4       	brge	.+16     	; 0x28e2 <__stack+0x6e3>
		__ticks = 1;
    28d2:	fe 01       	movw	r30, r28
    28d4:	ef 5f       	subi	r30, 0xFF	; 255
    28d6:	fe 4f       	sbci	r31, 0xFE	; 254
    28d8:	81 e0       	ldi	r24, 0x01	; 1
    28da:	90 e0       	ldi	r25, 0x00	; 0
    28dc:	91 83       	std	Z+1, r25	; 0x01
    28de:	80 83       	st	Z, r24
    28e0:	64 c0       	rjmp	.+200    	; 0x29aa <__stack+0x7ab>
	else if (__tmp > 65535)
    28e2:	fe 01       	movw	r30, r28
    28e4:	ed 5f       	subi	r30, 0xFD	; 253
    28e6:	fe 4f       	sbci	r31, 0xFE	; 254
    28e8:	60 81       	ld	r22, Z
    28ea:	71 81       	ldd	r23, Z+1	; 0x01
    28ec:	82 81       	ldd	r24, Z+2	; 0x02
    28ee:	93 81       	ldd	r25, Z+3	; 0x03
    28f0:	20 e0       	ldi	r18, 0x00	; 0
    28f2:	3f ef       	ldi	r19, 0xFF	; 255
    28f4:	4f e7       	ldi	r20, 0x7F	; 127
    28f6:	57 e4       	ldi	r21, 0x47	; 71
    28f8:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    28fc:	18 16       	cp	r1, r24
    28fe:	0c f0       	brlt	.+2      	; 0x2902 <__stack+0x703>
    2900:	43 c0       	rjmp	.+134    	; 0x2988 <__stack+0x789>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2902:	fe 01       	movw	r30, r28
    2904:	e9 5f       	subi	r30, 0xF9	; 249
    2906:	fe 4f       	sbci	r31, 0xFE	; 254
    2908:	60 81       	ld	r22, Z
    290a:	71 81       	ldd	r23, Z+1	; 0x01
    290c:	82 81       	ldd	r24, Z+2	; 0x02
    290e:	93 81       	ldd	r25, Z+3	; 0x03
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	40 e2       	ldi	r20, 0x20	; 32
    2916:	51 e4       	ldi	r21, 0x41	; 65
    2918:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    291c:	dc 01       	movw	r26, r24
    291e:	cb 01       	movw	r24, r22
    2920:	8e 01       	movw	r16, r28
    2922:	0f 5f       	subi	r16, 0xFF	; 255
    2924:	1e 4f       	sbci	r17, 0xFE	; 254
    2926:	bc 01       	movw	r22, r24
    2928:	cd 01       	movw	r24, r26
    292a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    292e:	dc 01       	movw	r26, r24
    2930:	cb 01       	movw	r24, r22
    2932:	f8 01       	movw	r30, r16
    2934:	91 83       	std	Z+1, r25	; 0x01
    2936:	80 83       	st	Z, r24
    2938:	1f c0       	rjmp	.+62     	; 0x2978 <__stack+0x779>
    293a:	fe 01       	movw	r30, r28
    293c:	e1 50       	subi	r30, 0x01	; 1
    293e:	ff 4f       	sbci	r31, 0xFF	; 255
    2940:	80 e7       	ldi	r24, 0x70	; 112
    2942:	91 e0       	ldi	r25, 0x01	; 1
    2944:	91 83       	std	Z+1, r25	; 0x01
    2946:	80 83       	st	Z, r24
    2948:	fe 01       	movw	r30, r28
    294a:	e1 50       	subi	r30, 0x01	; 1
    294c:	ff 4f       	sbci	r31, 0xFF	; 255
    294e:	80 81       	ld	r24, Z
    2950:	91 81       	ldd	r25, Z+1	; 0x01
    2952:	01 97       	sbiw	r24, 0x01	; 1
    2954:	f1 f7       	brne	.-4      	; 0x2952 <__stack+0x753>
    2956:	fe 01       	movw	r30, r28
    2958:	e1 50       	subi	r30, 0x01	; 1
    295a:	ff 4f       	sbci	r31, 0xFF	; 255
    295c:	91 83       	std	Z+1, r25	; 0x01
    295e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2960:	de 01       	movw	r26, r28
    2962:	af 5f       	subi	r26, 0xFF	; 255
    2964:	be 4f       	sbci	r27, 0xFE	; 254
    2966:	fe 01       	movw	r30, r28
    2968:	ef 5f       	subi	r30, 0xFF	; 255
    296a:	fe 4f       	sbci	r31, 0xFE	; 254
    296c:	80 81       	ld	r24, Z
    296e:	91 81       	ldd	r25, Z+1	; 0x01
    2970:	01 97       	sbiw	r24, 0x01	; 1
    2972:	11 96       	adiw	r26, 0x01	; 1
    2974:	9c 93       	st	X, r25
    2976:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2978:	fe 01       	movw	r30, r28
    297a:	ef 5f       	subi	r30, 0xFF	; 255
    297c:	fe 4f       	sbci	r31, 0xFE	; 254
    297e:	80 81       	ld	r24, Z
    2980:	91 81       	ldd	r25, Z+1	; 0x01
    2982:	00 97       	sbiw	r24, 0x00	; 0
    2984:	d1 f6       	brne	.-76     	; 0x293a <__stack+0x73b>
    2986:	27 c0       	rjmp	.+78     	; 0x29d6 <__stack+0x7d7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2988:	8e 01       	movw	r16, r28
    298a:	0f 5f       	subi	r16, 0xFF	; 255
    298c:	1e 4f       	sbci	r17, 0xFE	; 254
    298e:	fe 01       	movw	r30, r28
    2990:	ed 5f       	subi	r30, 0xFD	; 253
    2992:	fe 4f       	sbci	r31, 0xFE	; 254
    2994:	60 81       	ld	r22, Z
    2996:	71 81       	ldd	r23, Z+1	; 0x01
    2998:	82 81       	ldd	r24, Z+2	; 0x02
    299a:	93 81       	ldd	r25, Z+3	; 0x03
    299c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    29a0:	dc 01       	movw	r26, r24
    29a2:	cb 01       	movw	r24, r22
    29a4:	f8 01       	movw	r30, r16
    29a6:	91 83       	std	Z+1, r25	; 0x01
    29a8:	80 83       	st	Z, r24
    29aa:	de 01       	movw	r26, r28
    29ac:	a3 50       	subi	r26, 0x03	; 3
    29ae:	bf 4f       	sbci	r27, 0xFF	; 255
    29b0:	fe 01       	movw	r30, r28
    29b2:	ef 5f       	subi	r30, 0xFF	; 255
    29b4:	fe 4f       	sbci	r31, 0xFE	; 254
    29b6:	80 81       	ld	r24, Z
    29b8:	91 81       	ldd	r25, Z+1	; 0x01
    29ba:	8d 93       	st	X+, r24
    29bc:	9c 93       	st	X, r25
    29be:	fe 01       	movw	r30, r28
    29c0:	e3 50       	subi	r30, 0x03	; 3
    29c2:	ff 4f       	sbci	r31, 0xFF	; 255
    29c4:	80 81       	ld	r24, Z
    29c6:	91 81       	ldd	r25, Z+1	; 0x01
    29c8:	01 97       	sbiw	r24, 0x01	; 1
    29ca:	f1 f7       	brne	.-4      	; 0x29c8 <__stack+0x7c9>
    29cc:	fe 01       	movw	r30, r28
    29ce:	e3 50       	subi	r30, 0x03	; 3
    29d0:	ff 4f       	sbci	r31, 0xFF	; 255
    29d2:	91 83       	std	Z+1, r25	; 0x01
    29d4:	80 83       	st	Z, r24
			_delay_ms(50);
			back_mm(30);
    29d6:	8e e1       	ldi	r24, 0x1E	; 30
    29d8:	90 e0       	ldi	r25, 0x00	; 0
    29da:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
			stop();
    29de:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    29e2:	fe 01       	movw	r30, r28
    29e4:	e7 50       	subi	r30, 0x07	; 7
    29e6:	ff 4f       	sbci	r31, 0xFF	; 255
    29e8:	80 e0       	ldi	r24, 0x00	; 0
    29ea:	90 e0       	ldi	r25, 0x00	; 0
    29ec:	a8 ec       	ldi	r26, 0xC8	; 200
    29ee:	b2 e4       	ldi	r27, 0x42	; 66
    29f0:	80 83       	st	Z, r24
    29f2:	91 83       	std	Z+1, r25	; 0x01
    29f4:	a2 83       	std	Z+2, r26	; 0x02
    29f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29f8:	8e 01       	movw	r16, r28
    29fa:	0b 50       	subi	r16, 0x0B	; 11
    29fc:	1f 4f       	sbci	r17, 0xFF	; 255
    29fe:	fe 01       	movw	r30, r28
    2a00:	e7 50       	subi	r30, 0x07	; 7
    2a02:	ff 4f       	sbci	r31, 0xFF	; 255
    2a04:	60 81       	ld	r22, Z
    2a06:	71 81       	ldd	r23, Z+1	; 0x01
    2a08:	82 81       	ldd	r24, Z+2	; 0x02
    2a0a:	93 81       	ldd	r25, Z+3	; 0x03
    2a0c:	26 e6       	ldi	r18, 0x66	; 102
    2a0e:	36 e6       	ldi	r19, 0x66	; 102
    2a10:	46 e6       	ldi	r20, 0x66	; 102
    2a12:	55 e4       	ldi	r21, 0x45	; 69
    2a14:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2a18:	dc 01       	movw	r26, r24
    2a1a:	cb 01       	movw	r24, r22
    2a1c:	f8 01       	movw	r30, r16
    2a1e:	80 83       	st	Z, r24
    2a20:	91 83       	std	Z+1, r25	; 0x01
    2a22:	a2 83       	std	Z+2, r26	; 0x02
    2a24:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a26:	fe 01       	movw	r30, r28
    2a28:	eb 50       	subi	r30, 0x0B	; 11
    2a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2c:	60 81       	ld	r22, Z
    2a2e:	71 81       	ldd	r23, Z+1	; 0x01
    2a30:	82 81       	ldd	r24, Z+2	; 0x02
    2a32:	93 81       	ldd	r25, Z+3	; 0x03
    2a34:	20 e0       	ldi	r18, 0x00	; 0
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	40 e8       	ldi	r20, 0x80	; 128
    2a3a:	5f e3       	ldi	r21, 0x3F	; 63
    2a3c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2a40:	88 23       	and	r24, r24
    2a42:	44 f4       	brge	.+16     	; 0x2a54 <__stack+0x855>
		__ticks = 1;
    2a44:	fe 01       	movw	r30, r28
    2a46:	ed 50       	subi	r30, 0x0D	; 13
    2a48:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
    2a4e:	91 83       	std	Z+1, r25	; 0x01
    2a50:	80 83       	st	Z, r24
    2a52:	64 c0       	rjmp	.+200    	; 0x2b1c <__stack+0x91d>
	else if (__tmp > 65535)
    2a54:	fe 01       	movw	r30, r28
    2a56:	eb 50       	subi	r30, 0x0B	; 11
    2a58:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5a:	60 81       	ld	r22, Z
    2a5c:	71 81       	ldd	r23, Z+1	; 0x01
    2a5e:	82 81       	ldd	r24, Z+2	; 0x02
    2a60:	93 81       	ldd	r25, Z+3	; 0x03
    2a62:	20 e0       	ldi	r18, 0x00	; 0
    2a64:	3f ef       	ldi	r19, 0xFF	; 255
    2a66:	4f e7       	ldi	r20, 0x7F	; 127
    2a68:	57 e4       	ldi	r21, 0x47	; 71
    2a6a:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    2a6e:	18 16       	cp	r1, r24
    2a70:	0c f0       	brlt	.+2      	; 0x2a74 <__stack+0x875>
    2a72:	43 c0       	rjmp	.+134    	; 0x2afa <__stack+0x8fb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a74:	fe 01       	movw	r30, r28
    2a76:	e7 50       	subi	r30, 0x07	; 7
    2a78:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7a:	60 81       	ld	r22, Z
    2a7c:	71 81       	ldd	r23, Z+1	; 0x01
    2a7e:	82 81       	ldd	r24, Z+2	; 0x02
    2a80:	93 81       	ldd	r25, Z+3	; 0x03
    2a82:	20 e0       	ldi	r18, 0x00	; 0
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	40 e2       	ldi	r20, 0x20	; 32
    2a88:	51 e4       	ldi	r21, 0x41	; 65
    2a8a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2a8e:	dc 01       	movw	r26, r24
    2a90:	cb 01       	movw	r24, r22
    2a92:	8e 01       	movw	r16, r28
    2a94:	0d 50       	subi	r16, 0x0D	; 13
    2a96:	1f 4f       	sbci	r17, 0xFF	; 255
    2a98:	bc 01       	movw	r22, r24
    2a9a:	cd 01       	movw	r24, r26
    2a9c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2aa0:	dc 01       	movw	r26, r24
    2aa2:	cb 01       	movw	r24, r22
    2aa4:	f8 01       	movw	r30, r16
    2aa6:	91 83       	std	Z+1, r25	; 0x01
    2aa8:	80 83       	st	Z, r24
    2aaa:	1f c0       	rjmp	.+62     	; 0x2aea <__stack+0x8eb>
    2aac:	fe 01       	movw	r30, r28
    2aae:	ef 50       	subi	r30, 0x0F	; 15
    2ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab2:	80 e7       	ldi	r24, 0x70	; 112
    2ab4:	91 e0       	ldi	r25, 0x01	; 1
    2ab6:	91 83       	std	Z+1, r25	; 0x01
    2ab8:	80 83       	st	Z, r24
    2aba:	fe 01       	movw	r30, r28
    2abc:	ef 50       	subi	r30, 0x0F	; 15
    2abe:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac0:	80 81       	ld	r24, Z
    2ac2:	91 81       	ldd	r25, Z+1	; 0x01
    2ac4:	01 97       	sbiw	r24, 0x01	; 1
    2ac6:	f1 f7       	brne	.-4      	; 0x2ac4 <__stack+0x8c5>
    2ac8:	fe 01       	movw	r30, r28
    2aca:	ef 50       	subi	r30, 0x0F	; 15
    2acc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ace:	91 83       	std	Z+1, r25	; 0x01
    2ad0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ad2:	de 01       	movw	r26, r28
    2ad4:	ad 50       	subi	r26, 0x0D	; 13
    2ad6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ad8:	fe 01       	movw	r30, r28
    2ada:	ed 50       	subi	r30, 0x0D	; 13
    2adc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ade:	80 81       	ld	r24, Z
    2ae0:	91 81       	ldd	r25, Z+1	; 0x01
    2ae2:	01 97       	sbiw	r24, 0x01	; 1
    2ae4:	11 96       	adiw	r26, 0x01	; 1
    2ae6:	9c 93       	st	X, r25
    2ae8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aea:	fe 01       	movw	r30, r28
    2aec:	ed 50       	subi	r30, 0x0D	; 13
    2aee:	ff 4f       	sbci	r31, 0xFF	; 255
    2af0:	80 81       	ld	r24, Z
    2af2:	91 81       	ldd	r25, Z+1	; 0x01
    2af4:	00 97       	sbiw	r24, 0x00	; 0
    2af6:	d1 f6       	brne	.-76     	; 0x2aac <__stack+0x8ad>
    2af8:	27 c0       	rjmp	.+78     	; 0x2b48 <__stack+0x949>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2afa:	8e 01       	movw	r16, r28
    2afc:	0d 50       	subi	r16, 0x0D	; 13
    2afe:	1f 4f       	sbci	r17, 0xFF	; 255
    2b00:	fe 01       	movw	r30, r28
    2b02:	eb 50       	subi	r30, 0x0B	; 11
    2b04:	ff 4f       	sbci	r31, 0xFF	; 255
    2b06:	60 81       	ld	r22, Z
    2b08:	71 81       	ldd	r23, Z+1	; 0x01
    2b0a:	82 81       	ldd	r24, Z+2	; 0x02
    2b0c:	93 81       	ldd	r25, Z+3	; 0x03
    2b0e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2b12:	dc 01       	movw	r26, r24
    2b14:	cb 01       	movw	r24, r22
    2b16:	f8 01       	movw	r30, r16
    2b18:	91 83       	std	Z+1, r25	; 0x01
    2b1a:	80 83       	st	Z, r24
    2b1c:	de 01       	movw	r26, r28
    2b1e:	a1 51       	subi	r26, 0x11	; 17
    2b20:	bf 4f       	sbci	r27, 0xFF	; 255
    2b22:	fe 01       	movw	r30, r28
    2b24:	ed 50       	subi	r30, 0x0D	; 13
    2b26:	ff 4f       	sbci	r31, 0xFF	; 255
    2b28:	80 81       	ld	r24, Z
    2b2a:	91 81       	ldd	r25, Z+1	; 0x01
    2b2c:	8d 93       	st	X+, r24
    2b2e:	9c 93       	st	X, r25
    2b30:	fe 01       	movw	r30, r28
    2b32:	e1 51       	subi	r30, 0x11	; 17
    2b34:	ff 4f       	sbci	r31, 0xFF	; 255
    2b36:	80 81       	ld	r24, Z
    2b38:	91 81       	ldd	r25, Z+1	; 0x01
    2b3a:	01 97       	sbiw	r24, 0x01	; 1
    2b3c:	f1 f7       	brne	.-4      	; 0x2b3a <__stack+0x93b>
    2b3e:	fe 01       	movw	r30, r28
    2b40:	e1 51       	subi	r30, 0x11	; 17
    2b42:	ff 4f       	sbci	r31, 0xFF	; 255
    2b44:	91 83       	std	Z+1, r25	; 0x01
    2b46:	80 83       	st	Z, r24
			_delay_ms(100);	
			update_orientation(data);		
    2b48:	fe 01       	movw	r30, r28
    2b4a:	eb 5e       	subi	r30, 0xEB	; 235
    2b4c:	fd 4f       	sbci	r31, 0xFD	; 253
    2b4e:	80 81       	ld	r24, Z
    2b50:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
    2b54:	99 c2       	rjmp	.+1330   	; 0x3088 <__stack+0xe89>
		}
		else if((data == 0x61 && orientation==1)|| (data == 0x62 && orientation==3)|| (data == 0x63 && orientation==0)|| (data == 0x64 && orientation==2))
    2b56:	fe 01       	movw	r30, r28
    2b58:	eb 5e       	subi	r30, 0xEB	; 235
    2b5a:	fd 4f       	sbci	r31, 0xFD	; 253
    2b5c:	80 81       	ld	r24, Z
    2b5e:	81 36       	cpi	r24, 0x61	; 97
    2b60:	41 f4       	brne	.+16     	; 0x2b72 <__stack+0x973>
    2b62:	80 91 11 03 	lds	r24, 0x0311
    2b66:	90 91 12 03 	lds	r25, 0x0312
    2b6a:	81 30       	cpi	r24, 0x01	; 1
    2b6c:	91 05       	cpc	r25, r1
    2b6e:	09 f4       	brne	.+2      	; 0x2b72 <__stack+0x973>
    2b70:	8b c2       	rjmp	.+1302   	; 0x3088 <__stack+0xe89>
    2b72:	fe 01       	movw	r30, r28
    2b74:	eb 5e       	subi	r30, 0xEB	; 235
    2b76:	fd 4f       	sbci	r31, 0xFD	; 253
    2b78:	80 81       	ld	r24, Z
    2b7a:	82 36       	cpi	r24, 0x62	; 98
    2b7c:	41 f4       	brne	.+16     	; 0x2b8e <__stack+0x98f>
    2b7e:	80 91 11 03 	lds	r24, 0x0311
    2b82:	90 91 12 03 	lds	r25, 0x0312
    2b86:	83 30       	cpi	r24, 0x03	; 3
    2b88:	91 05       	cpc	r25, r1
    2b8a:	09 f4       	brne	.+2      	; 0x2b8e <__stack+0x98f>
    2b8c:	7d c2       	rjmp	.+1274   	; 0x3088 <__stack+0xe89>
    2b8e:	fe 01       	movw	r30, r28
    2b90:	eb 5e       	subi	r30, 0xEB	; 235
    2b92:	fd 4f       	sbci	r31, 0xFD	; 253
    2b94:	80 81       	ld	r24, Z
    2b96:	83 36       	cpi	r24, 0x63	; 99
    2b98:	39 f4       	brne	.+14     	; 0x2ba8 <__stack+0x9a9>
    2b9a:	80 91 11 03 	lds	r24, 0x0311
    2b9e:	90 91 12 03 	lds	r25, 0x0312
    2ba2:	00 97       	sbiw	r24, 0x00	; 0
    2ba4:	09 f4       	brne	.+2      	; 0x2ba8 <__stack+0x9a9>
    2ba6:	70 c2       	rjmp	.+1248   	; 0x3088 <__stack+0xe89>
    2ba8:	fe 01       	movw	r30, r28
    2baa:	eb 5e       	subi	r30, 0xEB	; 235
    2bac:	fd 4f       	sbci	r31, 0xFD	; 253
    2bae:	80 81       	ld	r24, Z
    2bb0:	84 36       	cpi	r24, 0x64	; 100
    2bb2:	41 f4       	brne	.+16     	; 0x2bc4 <__stack+0x9c5>
    2bb4:	80 91 11 03 	lds	r24, 0x0311
    2bb8:	90 91 12 03 	lds	r25, 0x0312
    2bbc:	82 30       	cpi	r24, 0x02	; 2
    2bbe:	91 05       	cpc	r25, r1
    2bc0:	09 f4       	brne	.+2      	; 0x2bc4 <__stack+0x9c5>
    2bc2:	62 c2       	rjmp	.+1220   	; 0x3088 <__stack+0xe89>
		{	
			//update_orientation(data);		
		}
		else if((data == 0x61 && orientation==3) || (data == 0x62 && orientation==1) || (data == 0x63 && orientation==2) || (data == 0x64 && orientation==0))
    2bc4:	fe 01       	movw	r30, r28
    2bc6:	eb 5e       	subi	r30, 0xEB	; 235
    2bc8:	fd 4f       	sbci	r31, 0xFD	; 253
    2bca:	80 81       	ld	r24, Z
    2bcc:	81 36       	cpi	r24, 0x61	; 97
    2bce:	39 f4       	brne	.+14     	; 0x2bde <__stack+0x9df>
    2bd0:	80 91 11 03 	lds	r24, 0x0311
    2bd4:	90 91 12 03 	lds	r25, 0x0312
    2bd8:	83 30       	cpi	r24, 0x03	; 3
    2bda:	91 05       	cpc	r25, r1
    2bdc:	41 f1       	breq	.+80     	; 0x2c2e <__stack+0xa2f>
    2bde:	fe 01       	movw	r30, r28
    2be0:	eb 5e       	subi	r30, 0xEB	; 235
    2be2:	fd 4f       	sbci	r31, 0xFD	; 253
    2be4:	80 81       	ld	r24, Z
    2be6:	82 36       	cpi	r24, 0x62	; 98
    2be8:	39 f4       	brne	.+14     	; 0x2bf8 <__stack+0x9f9>
    2bea:	80 91 11 03 	lds	r24, 0x0311
    2bee:	90 91 12 03 	lds	r25, 0x0312
    2bf2:	81 30       	cpi	r24, 0x01	; 1
    2bf4:	91 05       	cpc	r25, r1
    2bf6:	d9 f0       	breq	.+54     	; 0x2c2e <__stack+0xa2f>
    2bf8:	fe 01       	movw	r30, r28
    2bfa:	eb 5e       	subi	r30, 0xEB	; 235
    2bfc:	fd 4f       	sbci	r31, 0xFD	; 253
    2bfe:	80 81       	ld	r24, Z
    2c00:	83 36       	cpi	r24, 0x63	; 99
    2c02:	39 f4       	brne	.+14     	; 0x2c12 <__stack+0xa13>
    2c04:	80 91 11 03 	lds	r24, 0x0311
    2c08:	90 91 12 03 	lds	r25, 0x0312
    2c0c:	82 30       	cpi	r24, 0x02	; 2
    2c0e:	91 05       	cpc	r25, r1
    2c10:	71 f0       	breq	.+28     	; 0x2c2e <__stack+0xa2f>
    2c12:	fe 01       	movw	r30, r28
    2c14:	eb 5e       	subi	r30, 0xEB	; 235
    2c16:	fd 4f       	sbci	r31, 0xFD	; 253
    2c18:	80 81       	ld	r24, Z
    2c1a:	84 36       	cpi	r24, 0x64	; 100
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <__stack+0xa21>
    2c1e:	34 c2       	rjmp	.+1128   	; 0x3088 <__stack+0xe89>
    2c20:	80 91 11 03 	lds	r24, 0x0311
    2c24:	90 91 12 03 	lds	r25, 0x0312
    2c28:	00 97       	sbiw	r24, 0x00	; 0
    2c2a:	09 f0       	breq	.+2      	; 0x2c2e <__stack+0xa2f>
    2c2c:	2d c2       	rjmp	.+1114   	; 0x3088 <__stack+0xe89>
		{
		    forward_mm(30);
    2c2e:	8e e1       	ldi	r24, 0x1E	; 30
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	0e 94 8a 03 	call	0x714	; 0x714 <forward_mm>
    2c36:	fe 01       	movw	r30, r28
    2c38:	e5 51       	subi	r30, 0x15	; 21
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	80 e0       	ldi	r24, 0x00	; 0
    2c3e:	90 e0       	ldi	r25, 0x00	; 0
    2c40:	a8 e4       	ldi	r26, 0x48	; 72
    2c42:	b2 e4       	ldi	r27, 0x42	; 66
    2c44:	80 83       	st	Z, r24
    2c46:	91 83       	std	Z+1, r25	; 0x01
    2c48:	a2 83       	std	Z+2, r26	; 0x02
    2c4a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c4c:	8e 01       	movw	r16, r28
    2c4e:	09 51       	subi	r16, 0x19	; 25
    2c50:	1f 4f       	sbci	r17, 0xFF	; 255
    2c52:	fe 01       	movw	r30, r28
    2c54:	e5 51       	subi	r30, 0x15	; 21
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
    2c58:	60 81       	ld	r22, Z
    2c5a:	71 81       	ldd	r23, Z+1	; 0x01
    2c5c:	82 81       	ldd	r24, Z+2	; 0x02
    2c5e:	93 81       	ldd	r25, Z+3	; 0x03
    2c60:	26 e6       	ldi	r18, 0x66	; 102
    2c62:	36 e6       	ldi	r19, 0x66	; 102
    2c64:	46 e6       	ldi	r20, 0x66	; 102
    2c66:	55 e4       	ldi	r21, 0x45	; 69
    2c68:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2c6c:	dc 01       	movw	r26, r24
    2c6e:	cb 01       	movw	r24, r22
    2c70:	f8 01       	movw	r30, r16
    2c72:	80 83       	st	Z, r24
    2c74:	91 83       	std	Z+1, r25	; 0x01
    2c76:	a2 83       	std	Z+2, r26	; 0x02
    2c78:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c7a:	fe 01       	movw	r30, r28
    2c7c:	e9 51       	subi	r30, 0x19	; 25
    2c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c80:	60 81       	ld	r22, Z
    2c82:	71 81       	ldd	r23, Z+1	; 0x01
    2c84:	82 81       	ldd	r24, Z+2	; 0x02
    2c86:	93 81       	ldd	r25, Z+3	; 0x03
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	40 e8       	ldi	r20, 0x80	; 128
    2c8e:	5f e3       	ldi	r21, 0x3F	; 63
    2c90:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2c94:	88 23       	and	r24, r24
    2c96:	44 f4       	brge	.+16     	; 0x2ca8 <__stack+0xaa9>
		__ticks = 1;
    2c98:	fe 01       	movw	r30, r28
    2c9a:	eb 51       	subi	r30, 0x1B	; 27
    2c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
    2ca2:	91 83       	std	Z+1, r25	; 0x01
    2ca4:	80 83       	st	Z, r24
    2ca6:	64 c0       	rjmp	.+200    	; 0x2d70 <__stack+0xb71>
	else if (__tmp > 65535)
    2ca8:	fe 01       	movw	r30, r28
    2caa:	e9 51       	subi	r30, 0x19	; 25
    2cac:	ff 4f       	sbci	r31, 0xFF	; 255
    2cae:	60 81       	ld	r22, Z
    2cb0:	71 81       	ldd	r23, Z+1	; 0x01
    2cb2:	82 81       	ldd	r24, Z+2	; 0x02
    2cb4:	93 81       	ldd	r25, Z+3	; 0x03
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	3f ef       	ldi	r19, 0xFF	; 255
    2cba:	4f e7       	ldi	r20, 0x7F	; 127
    2cbc:	57 e4       	ldi	r21, 0x47	; 71
    2cbe:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    2cc2:	18 16       	cp	r1, r24
    2cc4:	0c f0       	brlt	.+2      	; 0x2cc8 <__stack+0xac9>
    2cc6:	43 c0       	rjmp	.+134    	; 0x2d4e <__stack+0xb4f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cc8:	fe 01       	movw	r30, r28
    2cca:	e5 51       	subi	r30, 0x15	; 21
    2ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cce:	60 81       	ld	r22, Z
    2cd0:	71 81       	ldd	r23, Z+1	; 0x01
    2cd2:	82 81       	ldd	r24, Z+2	; 0x02
    2cd4:	93 81       	ldd	r25, Z+3	; 0x03
    2cd6:	20 e0       	ldi	r18, 0x00	; 0
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	40 e2       	ldi	r20, 0x20	; 32
    2cdc:	51 e4       	ldi	r21, 0x41	; 65
    2cde:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2ce2:	dc 01       	movw	r26, r24
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	8e 01       	movw	r16, r28
    2ce8:	0b 51       	subi	r16, 0x1B	; 27
    2cea:	1f 4f       	sbci	r17, 0xFF	; 255
    2cec:	bc 01       	movw	r22, r24
    2cee:	cd 01       	movw	r24, r26
    2cf0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2cf4:	dc 01       	movw	r26, r24
    2cf6:	cb 01       	movw	r24, r22
    2cf8:	f8 01       	movw	r30, r16
    2cfa:	91 83       	std	Z+1, r25	; 0x01
    2cfc:	80 83       	st	Z, r24
    2cfe:	1f c0       	rjmp	.+62     	; 0x2d3e <__stack+0xb3f>
    2d00:	fe 01       	movw	r30, r28
    2d02:	ed 51       	subi	r30, 0x1D	; 29
    2d04:	ff 4f       	sbci	r31, 0xFF	; 255
    2d06:	80 e7       	ldi	r24, 0x70	; 112
    2d08:	91 e0       	ldi	r25, 0x01	; 1
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	80 83       	st	Z, r24
    2d0e:	fe 01       	movw	r30, r28
    2d10:	ed 51       	subi	r30, 0x1D	; 29
    2d12:	ff 4f       	sbci	r31, 0xFF	; 255
    2d14:	80 81       	ld	r24, Z
    2d16:	91 81       	ldd	r25, Z+1	; 0x01
    2d18:	01 97       	sbiw	r24, 0x01	; 1
    2d1a:	f1 f7       	brne	.-4      	; 0x2d18 <__stack+0xb19>
    2d1c:	fe 01       	movw	r30, r28
    2d1e:	ed 51       	subi	r30, 0x1D	; 29
    2d20:	ff 4f       	sbci	r31, 0xFF	; 255
    2d22:	91 83       	std	Z+1, r25	; 0x01
    2d24:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d26:	de 01       	movw	r26, r28
    2d28:	ab 51       	subi	r26, 0x1B	; 27
    2d2a:	bf 4f       	sbci	r27, 0xFF	; 255
    2d2c:	fe 01       	movw	r30, r28
    2d2e:	eb 51       	subi	r30, 0x1B	; 27
    2d30:	ff 4f       	sbci	r31, 0xFF	; 255
    2d32:	80 81       	ld	r24, Z
    2d34:	91 81       	ldd	r25, Z+1	; 0x01
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	11 96       	adiw	r26, 0x01	; 1
    2d3a:	9c 93       	st	X, r25
    2d3c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d3e:	fe 01       	movw	r30, r28
    2d40:	eb 51       	subi	r30, 0x1B	; 27
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	80 81       	ld	r24, Z
    2d46:	91 81       	ldd	r25, Z+1	; 0x01
    2d48:	00 97       	sbiw	r24, 0x00	; 0
    2d4a:	d1 f6       	brne	.-76     	; 0x2d00 <__stack+0xb01>
    2d4c:	27 c0       	rjmp	.+78     	; 0x2d9c <__stack+0xb9d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d4e:	8e 01       	movw	r16, r28
    2d50:	0b 51       	subi	r16, 0x1B	; 27
    2d52:	1f 4f       	sbci	r17, 0xFF	; 255
    2d54:	fe 01       	movw	r30, r28
    2d56:	e9 51       	subi	r30, 0x19	; 25
    2d58:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5a:	60 81       	ld	r22, Z
    2d5c:	71 81       	ldd	r23, Z+1	; 0x01
    2d5e:	82 81       	ldd	r24, Z+2	; 0x02
    2d60:	93 81       	ldd	r25, Z+3	; 0x03
    2d62:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2d66:	dc 01       	movw	r26, r24
    2d68:	cb 01       	movw	r24, r22
    2d6a:	f8 01       	movw	r30, r16
    2d6c:	91 83       	std	Z+1, r25	; 0x01
    2d6e:	80 83       	st	Z, r24
    2d70:	de 01       	movw	r26, r28
    2d72:	af 51       	subi	r26, 0x1F	; 31
    2d74:	bf 4f       	sbci	r27, 0xFF	; 255
    2d76:	fe 01       	movw	r30, r28
    2d78:	eb 51       	subi	r30, 0x1B	; 27
    2d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7c:	80 81       	ld	r24, Z
    2d7e:	91 81       	ldd	r25, Z+1	; 0x01
    2d80:	8d 93       	st	X+, r24
    2d82:	9c 93       	st	X, r25
    2d84:	fe 01       	movw	r30, r28
    2d86:	ef 51       	subi	r30, 0x1F	; 31
    2d88:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8a:	80 81       	ld	r24, Z
    2d8c:	91 81       	ldd	r25, Z+1	; 0x01
    2d8e:	01 97       	sbiw	r24, 0x01	; 1
    2d90:	f1 f7       	brne	.-4      	; 0x2d8e <__stack+0xb8f>
    2d92:	fe 01       	movw	r30, r28
    2d94:	ef 51       	subi	r30, 0x1F	; 31
    2d96:	ff 4f       	sbci	r31, 0xFF	; 255
    2d98:	91 83       	std	Z+1, r25	; 0x01
    2d9a:	80 83       	st	Z, r24
			_delay_ms(50);
		    left_degrees(177);
    2d9c:	81 eb       	ldi	r24, 0xB1	; 177
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	0e 94 b0 03 	call	0x760	; 0x760 <left_degrees>
    2da4:	fe 01       	movw	r30, r28
    2da6:	e3 52       	subi	r30, 0x23	; 35
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	80 e0       	ldi	r24, 0x00	; 0
    2dac:	90 e0       	ldi	r25, 0x00	; 0
    2dae:	a8 e4       	ldi	r26, 0x48	; 72
    2db0:	b2 e4       	ldi	r27, 0x42	; 66
    2db2:	80 83       	st	Z, r24
    2db4:	91 83       	std	Z+1, r25	; 0x01
    2db6:	a2 83       	std	Z+2, r26	; 0x02
    2db8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dba:	8e 01       	movw	r16, r28
    2dbc:	07 52       	subi	r16, 0x27	; 39
    2dbe:	1f 4f       	sbci	r17, 0xFF	; 255
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	e3 52       	subi	r30, 0x23	; 35
    2dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc6:	60 81       	ld	r22, Z
    2dc8:	71 81       	ldd	r23, Z+1	; 0x01
    2dca:	82 81       	ldd	r24, Z+2	; 0x02
    2dcc:	93 81       	ldd	r25, Z+3	; 0x03
    2dce:	26 e6       	ldi	r18, 0x66	; 102
    2dd0:	36 e6       	ldi	r19, 0x66	; 102
    2dd2:	46 e6       	ldi	r20, 0x66	; 102
    2dd4:	55 e4       	ldi	r21, 0x45	; 69
    2dd6:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2dda:	dc 01       	movw	r26, r24
    2ddc:	cb 01       	movw	r24, r22
    2dde:	f8 01       	movw	r30, r16
    2de0:	80 83       	st	Z, r24
    2de2:	91 83       	std	Z+1, r25	; 0x01
    2de4:	a2 83       	std	Z+2, r26	; 0x02
    2de6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2de8:	fe 01       	movw	r30, r28
    2dea:	e7 52       	subi	r30, 0x27	; 39
    2dec:	ff 4f       	sbci	r31, 0xFF	; 255
    2dee:	60 81       	ld	r22, Z
    2df0:	71 81       	ldd	r23, Z+1	; 0x01
    2df2:	82 81       	ldd	r24, Z+2	; 0x02
    2df4:	93 81       	ldd	r25, Z+3	; 0x03
    2df6:	20 e0       	ldi	r18, 0x00	; 0
    2df8:	30 e0       	ldi	r19, 0x00	; 0
    2dfa:	40 e8       	ldi	r20, 0x80	; 128
    2dfc:	5f e3       	ldi	r21, 0x3F	; 63
    2dfe:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2e02:	88 23       	and	r24, r24
    2e04:	44 f4       	brge	.+16     	; 0x2e16 <__stack+0xc17>
		__ticks = 1;
    2e06:	fe 01       	movw	r30, r28
    2e08:	e9 52       	subi	r30, 0x29	; 41
    2e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e0c:	81 e0       	ldi	r24, 0x01	; 1
    2e0e:	90 e0       	ldi	r25, 0x00	; 0
    2e10:	91 83       	std	Z+1, r25	; 0x01
    2e12:	80 83       	st	Z, r24
    2e14:	64 c0       	rjmp	.+200    	; 0x2ede <__stack+0xcdf>
	else if (__tmp > 65535)
    2e16:	fe 01       	movw	r30, r28
    2e18:	e7 52       	subi	r30, 0x27	; 39
    2e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e1c:	60 81       	ld	r22, Z
    2e1e:	71 81       	ldd	r23, Z+1	; 0x01
    2e20:	82 81       	ldd	r24, Z+2	; 0x02
    2e22:	93 81       	ldd	r25, Z+3	; 0x03
    2e24:	20 e0       	ldi	r18, 0x00	; 0
    2e26:	3f ef       	ldi	r19, 0xFF	; 255
    2e28:	4f e7       	ldi	r20, 0x7F	; 127
    2e2a:	57 e4       	ldi	r21, 0x47	; 71
    2e2c:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    2e30:	18 16       	cp	r1, r24
    2e32:	0c f0       	brlt	.+2      	; 0x2e36 <__stack+0xc37>
    2e34:	43 c0       	rjmp	.+134    	; 0x2ebc <__stack+0xcbd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e36:	fe 01       	movw	r30, r28
    2e38:	e3 52       	subi	r30, 0x23	; 35
    2e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3c:	60 81       	ld	r22, Z
    2e3e:	71 81       	ldd	r23, Z+1	; 0x01
    2e40:	82 81       	ldd	r24, Z+2	; 0x02
    2e42:	93 81       	ldd	r25, Z+3	; 0x03
    2e44:	20 e0       	ldi	r18, 0x00	; 0
    2e46:	30 e0       	ldi	r19, 0x00	; 0
    2e48:	40 e2       	ldi	r20, 0x20	; 32
    2e4a:	51 e4       	ldi	r21, 0x41	; 65
    2e4c:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2e50:	dc 01       	movw	r26, r24
    2e52:	cb 01       	movw	r24, r22
    2e54:	8e 01       	movw	r16, r28
    2e56:	09 52       	subi	r16, 0x29	; 41
    2e58:	1f 4f       	sbci	r17, 0xFF	; 255
    2e5a:	bc 01       	movw	r22, r24
    2e5c:	cd 01       	movw	r24, r26
    2e5e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2e62:	dc 01       	movw	r26, r24
    2e64:	cb 01       	movw	r24, r22
    2e66:	f8 01       	movw	r30, r16
    2e68:	91 83       	std	Z+1, r25	; 0x01
    2e6a:	80 83       	st	Z, r24
    2e6c:	1f c0       	rjmp	.+62     	; 0x2eac <__stack+0xcad>
    2e6e:	fe 01       	movw	r30, r28
    2e70:	eb 52       	subi	r30, 0x2B	; 43
    2e72:	ff 4f       	sbci	r31, 0xFF	; 255
    2e74:	80 e7       	ldi	r24, 0x70	; 112
    2e76:	91 e0       	ldi	r25, 0x01	; 1
    2e78:	91 83       	std	Z+1, r25	; 0x01
    2e7a:	80 83       	st	Z, r24
    2e7c:	fe 01       	movw	r30, r28
    2e7e:	eb 52       	subi	r30, 0x2B	; 43
    2e80:	ff 4f       	sbci	r31, 0xFF	; 255
    2e82:	80 81       	ld	r24, Z
    2e84:	91 81       	ldd	r25, Z+1	; 0x01
    2e86:	01 97       	sbiw	r24, 0x01	; 1
    2e88:	f1 f7       	brne	.-4      	; 0x2e86 <__stack+0xc87>
    2e8a:	fe 01       	movw	r30, r28
    2e8c:	eb 52       	subi	r30, 0x2B	; 43
    2e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e90:	91 83       	std	Z+1, r25	; 0x01
    2e92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e94:	de 01       	movw	r26, r28
    2e96:	a9 52       	subi	r26, 0x29	; 41
    2e98:	bf 4f       	sbci	r27, 0xFF	; 255
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e9 52       	subi	r30, 0x29	; 41
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	80 81       	ld	r24, Z
    2ea2:	91 81       	ldd	r25, Z+1	; 0x01
    2ea4:	01 97       	sbiw	r24, 0x01	; 1
    2ea6:	11 96       	adiw	r26, 0x01	; 1
    2ea8:	9c 93       	st	X, r25
    2eaa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2eac:	fe 01       	movw	r30, r28
    2eae:	e9 52       	subi	r30, 0x29	; 41
    2eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb2:	80 81       	ld	r24, Z
    2eb4:	91 81       	ldd	r25, Z+1	; 0x01
    2eb6:	00 97       	sbiw	r24, 0x00	; 0
    2eb8:	d1 f6       	brne	.-76     	; 0x2e6e <__stack+0xc6f>
    2eba:	27 c0       	rjmp	.+78     	; 0x2f0a <__stack+0xd0b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ebc:	8e 01       	movw	r16, r28
    2ebe:	09 52       	subi	r16, 0x29	; 41
    2ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ec2:	fe 01       	movw	r30, r28
    2ec4:	e7 52       	subi	r30, 0x27	; 39
    2ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec8:	60 81       	ld	r22, Z
    2eca:	71 81       	ldd	r23, Z+1	; 0x01
    2ecc:	82 81       	ldd	r24, Z+2	; 0x02
    2ece:	93 81       	ldd	r25, Z+3	; 0x03
    2ed0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2ed4:	dc 01       	movw	r26, r24
    2ed6:	cb 01       	movw	r24, r22
    2ed8:	f8 01       	movw	r30, r16
    2eda:	91 83       	std	Z+1, r25	; 0x01
    2edc:	80 83       	st	Z, r24
    2ede:	de 01       	movw	r26, r28
    2ee0:	ad 52       	subi	r26, 0x2D	; 45
    2ee2:	bf 4f       	sbci	r27, 0xFF	; 255
    2ee4:	fe 01       	movw	r30, r28
    2ee6:	e9 52       	subi	r30, 0x29	; 41
    2ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eea:	80 81       	ld	r24, Z
    2eec:	91 81       	ldd	r25, Z+1	; 0x01
    2eee:	8d 93       	st	X+, r24
    2ef0:	9c 93       	st	X, r25
    2ef2:	fe 01       	movw	r30, r28
    2ef4:	ed 52       	subi	r30, 0x2D	; 45
    2ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef8:	80 81       	ld	r24, Z
    2efa:	91 81       	ldd	r25, Z+1	; 0x01
    2efc:	01 97       	sbiw	r24, 0x01	; 1
    2efe:	f1 f7       	brne	.-4      	; 0x2efc <__stack+0xcfd>
    2f00:	fe 01       	movw	r30, r28
    2f02:	ed 52       	subi	r30, 0x2D	; 45
    2f04:	ff 4f       	sbci	r31, 0xFF	; 255
    2f06:	91 83       	std	Z+1, r25	; 0x01
    2f08:	80 83       	st	Z, r24
			_delay_ms(50);
			back_mm(30);
    2f0a:	8e e1       	ldi	r24, 0x1E	; 30
    2f0c:	90 e0       	ldi	r25, 0x00	; 0
    2f0e:	0e 94 9d 03 	call	0x73a	; 0x73a <back_mm>
			stop();
    2f12:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
    2f16:	fe 01       	movw	r30, r28
    2f18:	e1 53       	subi	r30, 0x31	; 49
    2f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1c:	80 e0       	ldi	r24, 0x00	; 0
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	a8 ec       	ldi	r26, 0xC8	; 200
    2f22:	b2 e4       	ldi	r27, 0x42	; 66
    2f24:	80 83       	st	Z, r24
    2f26:	91 83       	std	Z+1, r25	; 0x01
    2f28:	a2 83       	std	Z+2, r26	; 0x02
    2f2a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f2c:	8e 01       	movw	r16, r28
    2f2e:	05 53       	subi	r16, 0x35	; 53
    2f30:	1f 4f       	sbci	r17, 0xFF	; 255
    2f32:	fe 01       	movw	r30, r28
    2f34:	e1 53       	subi	r30, 0x31	; 49
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	60 81       	ld	r22, Z
    2f3a:	71 81       	ldd	r23, Z+1	; 0x01
    2f3c:	82 81       	ldd	r24, Z+2	; 0x02
    2f3e:	93 81       	ldd	r25, Z+3	; 0x03
    2f40:	26 e6       	ldi	r18, 0x66	; 102
    2f42:	36 e6       	ldi	r19, 0x66	; 102
    2f44:	46 e6       	ldi	r20, 0x66	; 102
    2f46:	55 e4       	ldi	r21, 0x45	; 69
    2f48:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2f4c:	dc 01       	movw	r26, r24
    2f4e:	cb 01       	movw	r24, r22
    2f50:	f8 01       	movw	r30, r16
    2f52:	80 83       	st	Z, r24
    2f54:	91 83       	std	Z+1, r25	; 0x01
    2f56:	a2 83       	std	Z+2, r26	; 0x02
    2f58:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f5a:	fe 01       	movw	r30, r28
    2f5c:	e5 53       	subi	r30, 0x35	; 53
    2f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f60:	60 81       	ld	r22, Z
    2f62:	71 81       	ldd	r23, Z+1	; 0x01
    2f64:	82 81       	ldd	r24, Z+2	; 0x02
    2f66:	93 81       	ldd	r25, Z+3	; 0x03
    2f68:	20 e0       	ldi	r18, 0x00	; 0
    2f6a:	30 e0       	ldi	r19, 0x00	; 0
    2f6c:	40 e8       	ldi	r20, 0x80	; 128
    2f6e:	5f e3       	ldi	r21, 0x3F	; 63
    2f70:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    2f74:	88 23       	and	r24, r24
    2f76:	44 f4       	brge	.+16     	; 0x2f88 <__stack+0xd89>
		__ticks = 1;
    2f78:	fe 01       	movw	r30, r28
    2f7a:	e7 53       	subi	r30, 0x37	; 55
    2f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f7e:	81 e0       	ldi	r24, 0x01	; 1
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	91 83       	std	Z+1, r25	; 0x01
    2f84:	80 83       	st	Z, r24
    2f86:	64 c0       	rjmp	.+200    	; 0x3050 <__stack+0xe51>
	else if (__tmp > 65535)
    2f88:	fe 01       	movw	r30, r28
    2f8a:	e5 53       	subi	r30, 0x35	; 53
    2f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f8e:	60 81       	ld	r22, Z
    2f90:	71 81       	ldd	r23, Z+1	; 0x01
    2f92:	82 81       	ldd	r24, Z+2	; 0x02
    2f94:	93 81       	ldd	r25, Z+3	; 0x03
    2f96:	20 e0       	ldi	r18, 0x00	; 0
    2f98:	3f ef       	ldi	r19, 0xFF	; 255
    2f9a:	4f e7       	ldi	r20, 0x7F	; 127
    2f9c:	57 e4       	ldi	r21, 0x47	; 71
    2f9e:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    2fa2:	18 16       	cp	r1, r24
    2fa4:	0c f0       	brlt	.+2      	; 0x2fa8 <__stack+0xda9>
    2fa6:	43 c0       	rjmp	.+134    	; 0x302e <__stack+0xe2f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e1 53       	subi	r30, 0x31	; 49
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	60 81       	ld	r22, Z
    2fb0:	71 81       	ldd	r23, Z+1	; 0x01
    2fb2:	82 81       	ldd	r24, Z+2	; 0x02
    2fb4:	93 81       	ldd	r25, Z+3	; 0x03
    2fb6:	20 e0       	ldi	r18, 0x00	; 0
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	40 e2       	ldi	r20, 0x20	; 32
    2fbc:	51 e4       	ldi	r21, 0x41	; 65
    2fbe:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    2fc2:	dc 01       	movw	r26, r24
    2fc4:	cb 01       	movw	r24, r22
    2fc6:	8e 01       	movw	r16, r28
    2fc8:	07 53       	subi	r16, 0x37	; 55
    2fca:	1f 4f       	sbci	r17, 0xFF	; 255
    2fcc:	bc 01       	movw	r22, r24
    2fce:	cd 01       	movw	r24, r26
    2fd0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    2fd4:	dc 01       	movw	r26, r24
    2fd6:	cb 01       	movw	r24, r22
    2fd8:	f8 01       	movw	r30, r16
    2fda:	91 83       	std	Z+1, r25	; 0x01
    2fdc:	80 83       	st	Z, r24
    2fde:	1f c0       	rjmp	.+62     	; 0x301e <__stack+0xe1f>
    2fe0:	fe 01       	movw	r30, r28
    2fe2:	e9 53       	subi	r30, 0x39	; 57
    2fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe6:	80 e7       	ldi	r24, 0x70	; 112
    2fe8:	91 e0       	ldi	r25, 0x01	; 1
    2fea:	91 83       	std	Z+1, r25	; 0x01
    2fec:	80 83       	st	Z, r24
    2fee:	fe 01       	movw	r30, r28
    2ff0:	e9 53       	subi	r30, 0x39	; 57
    2ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff4:	80 81       	ld	r24, Z
    2ff6:	91 81       	ldd	r25, Z+1	; 0x01
    2ff8:	01 97       	sbiw	r24, 0x01	; 1
    2ffa:	f1 f7       	brne	.-4      	; 0x2ff8 <__stack+0xdf9>
    2ffc:	fe 01       	movw	r30, r28
    2ffe:	e9 53       	subi	r30, 0x39	; 57
    3000:	ff 4f       	sbci	r31, 0xFF	; 255
    3002:	91 83       	std	Z+1, r25	; 0x01
    3004:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3006:	de 01       	movw	r26, r28
    3008:	a7 53       	subi	r26, 0x37	; 55
    300a:	bf 4f       	sbci	r27, 0xFF	; 255
    300c:	fe 01       	movw	r30, r28
    300e:	e7 53       	subi	r30, 0x37	; 55
    3010:	ff 4f       	sbci	r31, 0xFF	; 255
    3012:	80 81       	ld	r24, Z
    3014:	91 81       	ldd	r25, Z+1	; 0x01
    3016:	01 97       	sbiw	r24, 0x01	; 1
    3018:	11 96       	adiw	r26, 0x01	; 1
    301a:	9c 93       	st	X, r25
    301c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    301e:	fe 01       	movw	r30, r28
    3020:	e7 53       	subi	r30, 0x37	; 55
    3022:	ff 4f       	sbci	r31, 0xFF	; 255
    3024:	80 81       	ld	r24, Z
    3026:	91 81       	ldd	r25, Z+1	; 0x01
    3028:	00 97       	sbiw	r24, 0x00	; 0
    302a:	d1 f6       	brne	.-76     	; 0x2fe0 <__stack+0xde1>
    302c:	27 c0       	rjmp	.+78     	; 0x307c <__stack+0xe7d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    302e:	8e 01       	movw	r16, r28
    3030:	07 53       	subi	r16, 0x37	; 55
    3032:	1f 4f       	sbci	r17, 0xFF	; 255
    3034:	fe 01       	movw	r30, r28
    3036:	e5 53       	subi	r30, 0x35	; 53
    3038:	ff 4f       	sbci	r31, 0xFF	; 255
    303a:	60 81       	ld	r22, Z
    303c:	71 81       	ldd	r23, Z+1	; 0x01
    303e:	82 81       	ldd	r24, Z+2	; 0x02
    3040:	93 81       	ldd	r25, Z+3	; 0x03
    3042:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3046:	dc 01       	movw	r26, r24
    3048:	cb 01       	movw	r24, r22
    304a:	f8 01       	movw	r30, r16
    304c:	91 83       	std	Z+1, r25	; 0x01
    304e:	80 83       	st	Z, r24
    3050:	de 01       	movw	r26, r28
    3052:	ab 53       	subi	r26, 0x3B	; 59
    3054:	bf 4f       	sbci	r27, 0xFF	; 255
    3056:	fe 01       	movw	r30, r28
    3058:	e7 53       	subi	r30, 0x37	; 55
    305a:	ff 4f       	sbci	r31, 0xFF	; 255
    305c:	80 81       	ld	r24, Z
    305e:	91 81       	ldd	r25, Z+1	; 0x01
    3060:	8d 93       	st	X+, r24
    3062:	9c 93       	st	X, r25
    3064:	fe 01       	movw	r30, r28
    3066:	eb 53       	subi	r30, 0x3B	; 59
    3068:	ff 4f       	sbci	r31, 0xFF	; 255
    306a:	80 81       	ld	r24, Z
    306c:	91 81       	ldd	r25, Z+1	; 0x01
    306e:	01 97       	sbiw	r24, 0x01	; 1
    3070:	f1 f7       	brne	.-4      	; 0x306e <__stack+0xe6f>
    3072:	fe 01       	movw	r30, r28
    3074:	eb 53       	subi	r30, 0x3B	; 59
    3076:	ff 4f       	sbci	r31, 0xFF	; 255
    3078:	91 83       	std	Z+1, r25	; 0x01
    307a:	80 83       	st	Z, r24
			_delay_ms(100);
			update_orientation(data);		
    307c:	fe 01       	movw	r30, r28
    307e:	eb 5e       	subi	r30, 0xEB	; 235
    3080:	fd 4f       	sbci	r31, 0xFD	; 253
    3082:	80 81       	ld	r24, Z
    3084:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <update_orientation>
		}
	

		if(data == 0x35) //ASCII value of 5
    3088:	fe 01       	movw	r30, r28
    308a:	eb 5e       	subi	r30, 0xEB	; 235
    308c:	fd 4f       	sbci	r31, 0xFD	; 253
    308e:	80 81       	ld	r24, Z
    3090:	85 33       	cpi	r24, 0x35	; 53
    3092:	11 f4       	brne	.+4      	; 0x3098 <__stack+0xe99>
		{
			stop();//stop
    3094:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <stop>
		}

		if(data == 0x7a)
    3098:	fe 01       	movw	r30, r28
    309a:	eb 5e       	subi	r30, 0xEB	; 235
    309c:	fd 4f       	sbci	r31, 0xFD	; 253
    309e:	80 81       	ld	r24, Z
    30a0:	8a 37       	cpi	r24, 0x7A	; 122
    30a2:	09 f0       	breq	.+2      	; 0x30a6 <__stack+0xea7>
    30a4:	b7 c0       	rjmp	.+366    	; 0x3214 <__stack+0x1015>
		{
			buzzer_on();
    30a6:	0e 94 d6 03 	call	0x7ac	; 0x7ac <buzzer_on>
    30aa:	fe 01       	movw	r30, r28
    30ac:	ef 53       	subi	r30, 0x3F	; 63
    30ae:	ff 4f       	sbci	r31, 0xFF	; 255
    30b0:	80 e0       	ldi	r24, 0x00	; 0
    30b2:	90 e4       	ldi	r25, 0x40	; 64
    30b4:	ac e9       	ldi	r26, 0x9C	; 156
    30b6:	b5 e4       	ldi	r27, 0x45	; 69
    30b8:	80 83       	st	Z, r24
    30ba:	91 83       	std	Z+1, r25	; 0x01
    30bc:	a2 83       	std	Z+2, r26	; 0x02
    30be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30c0:	8e 01       	movw	r16, r28
    30c2:	03 54       	subi	r16, 0x43	; 67
    30c4:	1f 4f       	sbci	r17, 0xFF	; 255
    30c6:	fe 01       	movw	r30, r28
    30c8:	ef 53       	subi	r30, 0x3F	; 63
    30ca:	ff 4f       	sbci	r31, 0xFF	; 255
    30cc:	60 81       	ld	r22, Z
    30ce:	71 81       	ldd	r23, Z+1	; 0x01
    30d0:	82 81       	ldd	r24, Z+2	; 0x02
    30d2:	93 81       	ldd	r25, Z+3	; 0x03
    30d4:	26 e6       	ldi	r18, 0x66	; 102
    30d6:	36 e6       	ldi	r19, 0x66	; 102
    30d8:	46 e6       	ldi	r20, 0x66	; 102
    30da:	55 e4       	ldi	r21, 0x45	; 69
    30dc:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    30e0:	dc 01       	movw	r26, r24
    30e2:	cb 01       	movw	r24, r22
    30e4:	f8 01       	movw	r30, r16
    30e6:	80 83       	st	Z, r24
    30e8:	91 83       	std	Z+1, r25	; 0x01
    30ea:	a2 83       	std	Z+2, r26	; 0x02
    30ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    30ee:	fe 01       	movw	r30, r28
    30f0:	e3 54       	subi	r30, 0x43	; 67
    30f2:	ff 4f       	sbci	r31, 0xFF	; 255
    30f4:	60 81       	ld	r22, Z
    30f6:	71 81       	ldd	r23, Z+1	; 0x01
    30f8:	82 81       	ldd	r24, Z+2	; 0x02
    30fa:	93 81       	ldd	r25, Z+3	; 0x03
    30fc:	20 e0       	ldi	r18, 0x00	; 0
    30fe:	30 e0       	ldi	r19, 0x00	; 0
    3100:	40 e8       	ldi	r20, 0x80	; 128
    3102:	5f e3       	ldi	r21, 0x3F	; 63
    3104:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3108:	88 23       	and	r24, r24
    310a:	44 f4       	brge	.+16     	; 0x311c <__stack+0xf1d>
		__ticks = 1;
    310c:	fe 01       	movw	r30, r28
    310e:	e5 54       	subi	r30, 0x45	; 69
    3110:	ff 4f       	sbci	r31, 0xFF	; 255
    3112:	81 e0       	ldi	r24, 0x01	; 1
    3114:	90 e0       	ldi	r25, 0x00	; 0
    3116:	91 83       	std	Z+1, r25	; 0x01
    3118:	80 83       	st	Z, r24
    311a:	64 c0       	rjmp	.+200    	; 0x31e4 <__stack+0xfe5>
	else if (__tmp > 65535)
    311c:	fe 01       	movw	r30, r28
    311e:	e3 54       	subi	r30, 0x43	; 67
    3120:	ff 4f       	sbci	r31, 0xFF	; 255
    3122:	60 81       	ld	r22, Z
    3124:	71 81       	ldd	r23, Z+1	; 0x01
    3126:	82 81       	ldd	r24, Z+2	; 0x02
    3128:	93 81       	ldd	r25, Z+3	; 0x03
    312a:	20 e0       	ldi	r18, 0x00	; 0
    312c:	3f ef       	ldi	r19, 0xFF	; 255
    312e:	4f e7       	ldi	r20, 0x7F	; 127
    3130:	57 e4       	ldi	r21, 0x47	; 71
    3132:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3136:	18 16       	cp	r1, r24
    3138:	0c f0       	brlt	.+2      	; 0x313c <__stack+0xf3d>
    313a:	43 c0       	rjmp	.+134    	; 0x31c2 <__stack+0xfc3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    313c:	fe 01       	movw	r30, r28
    313e:	ef 53       	subi	r30, 0x3F	; 63
    3140:	ff 4f       	sbci	r31, 0xFF	; 255
    3142:	60 81       	ld	r22, Z
    3144:	71 81       	ldd	r23, Z+1	; 0x01
    3146:	82 81       	ldd	r24, Z+2	; 0x02
    3148:	93 81       	ldd	r25, Z+3	; 0x03
    314a:	20 e0       	ldi	r18, 0x00	; 0
    314c:	30 e0       	ldi	r19, 0x00	; 0
    314e:	40 e2       	ldi	r20, 0x20	; 32
    3150:	51 e4       	ldi	r21, 0x41	; 65
    3152:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3156:	dc 01       	movw	r26, r24
    3158:	cb 01       	movw	r24, r22
    315a:	8e 01       	movw	r16, r28
    315c:	05 54       	subi	r16, 0x45	; 69
    315e:	1f 4f       	sbci	r17, 0xFF	; 255
    3160:	bc 01       	movw	r22, r24
    3162:	cd 01       	movw	r24, r26
    3164:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3168:	dc 01       	movw	r26, r24
    316a:	cb 01       	movw	r24, r22
    316c:	f8 01       	movw	r30, r16
    316e:	91 83       	std	Z+1, r25	; 0x01
    3170:	80 83       	st	Z, r24
    3172:	1f c0       	rjmp	.+62     	; 0x31b2 <__stack+0xfb3>
    3174:	fe 01       	movw	r30, r28
    3176:	e7 54       	subi	r30, 0x47	; 71
    3178:	ff 4f       	sbci	r31, 0xFF	; 255
    317a:	80 e7       	ldi	r24, 0x70	; 112
    317c:	91 e0       	ldi	r25, 0x01	; 1
    317e:	91 83       	std	Z+1, r25	; 0x01
    3180:	80 83       	st	Z, r24
    3182:	fe 01       	movw	r30, r28
    3184:	e7 54       	subi	r30, 0x47	; 71
    3186:	ff 4f       	sbci	r31, 0xFF	; 255
    3188:	80 81       	ld	r24, Z
    318a:	91 81       	ldd	r25, Z+1	; 0x01
    318c:	01 97       	sbiw	r24, 0x01	; 1
    318e:	f1 f7       	brne	.-4      	; 0x318c <__stack+0xf8d>
    3190:	fe 01       	movw	r30, r28
    3192:	e7 54       	subi	r30, 0x47	; 71
    3194:	ff 4f       	sbci	r31, 0xFF	; 255
    3196:	91 83       	std	Z+1, r25	; 0x01
    3198:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    319a:	de 01       	movw	r26, r28
    319c:	a5 54       	subi	r26, 0x45	; 69
    319e:	bf 4f       	sbci	r27, 0xFF	; 255
    31a0:	fe 01       	movw	r30, r28
    31a2:	e5 54       	subi	r30, 0x45	; 69
    31a4:	ff 4f       	sbci	r31, 0xFF	; 255
    31a6:	80 81       	ld	r24, Z
    31a8:	91 81       	ldd	r25, Z+1	; 0x01
    31aa:	01 97       	sbiw	r24, 0x01	; 1
    31ac:	11 96       	adiw	r26, 0x01	; 1
    31ae:	9c 93       	st	X, r25
    31b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31b2:	fe 01       	movw	r30, r28
    31b4:	e5 54       	subi	r30, 0x45	; 69
    31b6:	ff 4f       	sbci	r31, 0xFF	; 255
    31b8:	80 81       	ld	r24, Z
    31ba:	91 81       	ldd	r25, Z+1	; 0x01
    31bc:	00 97       	sbiw	r24, 0x00	; 0
    31be:	d1 f6       	brne	.-76     	; 0x3174 <__stack+0xf75>
    31c0:	27 c0       	rjmp	.+78     	; 0x3210 <__stack+0x1011>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31c2:	8e 01       	movw	r16, r28
    31c4:	05 54       	subi	r16, 0x45	; 69
    31c6:	1f 4f       	sbci	r17, 0xFF	; 255
    31c8:	fe 01       	movw	r30, r28
    31ca:	e3 54       	subi	r30, 0x43	; 67
    31cc:	ff 4f       	sbci	r31, 0xFF	; 255
    31ce:	60 81       	ld	r22, Z
    31d0:	71 81       	ldd	r23, Z+1	; 0x01
    31d2:	82 81       	ldd	r24, Z+2	; 0x02
    31d4:	93 81       	ldd	r25, Z+3	; 0x03
    31d6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    31da:	dc 01       	movw	r26, r24
    31dc:	cb 01       	movw	r24, r22
    31de:	f8 01       	movw	r30, r16
    31e0:	91 83       	std	Z+1, r25	; 0x01
    31e2:	80 83       	st	Z, r24
    31e4:	de 01       	movw	r26, r28
    31e6:	a9 54       	subi	r26, 0x49	; 73
    31e8:	bf 4f       	sbci	r27, 0xFF	; 255
    31ea:	fe 01       	movw	r30, r28
    31ec:	e5 54       	subi	r30, 0x45	; 69
    31ee:	ff 4f       	sbci	r31, 0xFF	; 255
    31f0:	80 81       	ld	r24, Z
    31f2:	91 81       	ldd	r25, Z+1	; 0x01
    31f4:	8d 93       	st	X+, r24
    31f6:	9c 93       	st	X, r25
    31f8:	fe 01       	movw	r30, r28
    31fa:	e9 54       	subi	r30, 0x49	; 73
    31fc:	ff 4f       	sbci	r31, 0xFF	; 255
    31fe:	80 81       	ld	r24, Z
    3200:	91 81       	ldd	r25, Z+1	; 0x01
    3202:	01 97       	sbiw	r24, 0x01	; 1
    3204:	f1 f7       	brne	.-4      	; 0x3202 <__stack+0x1003>
    3206:	fe 01       	movw	r30, r28
    3208:	e9 54       	subi	r30, 0x49	; 73
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	91 83       	std	Z+1, r25	; 0x01
    320e:	80 83       	st	Z, r24
			_delay_ms(5000);
			buzzer_off();
    3210:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <buzzer_off>
		//if(data == 0x39) //ASCII value of 9
		//{
		//	buzzer_off();
		//}

        if (data== 0x36)
    3214:	fe 01       	movw	r30, r28
    3216:	eb 5e       	subi	r30, 0xEB	; 235
    3218:	fd 4f       	sbci	r31, 0xFD	; 253
    321a:	80 81       	ld	r24, Z
    321c:	86 33       	cpi	r24, 0x36	; 54
    321e:	09 f0       	breq	.+2      	; 0x3222 <__stack+0x1023>
    3220:	de c2       	rjmp	.+1468   	; 0x37de <__stack+0x15df>
		{
	//pickup_storage()
	  servo_3(120);
    3222:	88 e7       	ldi	r24, 0x78	; 120
    3224:	0e 94 9c 04 	call	0x938	; 0x938 <servo_3>
    3228:	fe 01       	movw	r30, r28
    322a:	ed 54       	subi	r30, 0x4D	; 77
    322c:	ff 4f       	sbci	r31, 0xFF	; 255
    322e:	80 e0       	ldi	r24, 0x00	; 0
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	aa ef       	ldi	r26, 0xFA	; 250
    3234:	b3 e4       	ldi	r27, 0x43	; 67
    3236:	80 83       	st	Z, r24
    3238:	91 83       	std	Z+1, r25	; 0x01
    323a:	a2 83       	std	Z+2, r26	; 0x02
    323c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    323e:	8e 01       	movw	r16, r28
    3240:	01 55       	subi	r16, 0x51	; 81
    3242:	1f 4f       	sbci	r17, 0xFF	; 255
    3244:	fe 01       	movw	r30, r28
    3246:	ed 54       	subi	r30, 0x4D	; 77
    3248:	ff 4f       	sbci	r31, 0xFF	; 255
    324a:	60 81       	ld	r22, Z
    324c:	71 81       	ldd	r23, Z+1	; 0x01
    324e:	82 81       	ldd	r24, Z+2	; 0x02
    3250:	93 81       	ldd	r25, Z+3	; 0x03
    3252:	26 e6       	ldi	r18, 0x66	; 102
    3254:	36 e6       	ldi	r19, 0x66	; 102
    3256:	46 e6       	ldi	r20, 0x66	; 102
    3258:	55 e4       	ldi	r21, 0x45	; 69
    325a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    325e:	dc 01       	movw	r26, r24
    3260:	cb 01       	movw	r24, r22
    3262:	f8 01       	movw	r30, r16
    3264:	80 83       	st	Z, r24
    3266:	91 83       	std	Z+1, r25	; 0x01
    3268:	a2 83       	std	Z+2, r26	; 0x02
    326a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    326c:	fe 01       	movw	r30, r28
    326e:	e1 55       	subi	r30, 0x51	; 81
    3270:	ff 4f       	sbci	r31, 0xFF	; 255
    3272:	60 81       	ld	r22, Z
    3274:	71 81       	ldd	r23, Z+1	; 0x01
    3276:	82 81       	ldd	r24, Z+2	; 0x02
    3278:	93 81       	ldd	r25, Z+3	; 0x03
    327a:	20 e0       	ldi	r18, 0x00	; 0
    327c:	30 e0       	ldi	r19, 0x00	; 0
    327e:	40 e8       	ldi	r20, 0x80	; 128
    3280:	5f e3       	ldi	r21, 0x3F	; 63
    3282:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3286:	88 23       	and	r24, r24
    3288:	44 f4       	brge	.+16     	; 0x329a <__stack+0x109b>
		__ticks = 1;
    328a:	fe 01       	movw	r30, r28
    328c:	e3 55       	subi	r30, 0x53	; 83
    328e:	ff 4f       	sbci	r31, 0xFF	; 255
    3290:	81 e0       	ldi	r24, 0x01	; 1
    3292:	90 e0       	ldi	r25, 0x00	; 0
    3294:	91 83       	std	Z+1, r25	; 0x01
    3296:	80 83       	st	Z, r24
    3298:	64 c0       	rjmp	.+200    	; 0x3362 <__stack+0x1163>
	else if (__tmp > 65535)
    329a:	fe 01       	movw	r30, r28
    329c:	e1 55       	subi	r30, 0x51	; 81
    329e:	ff 4f       	sbci	r31, 0xFF	; 255
    32a0:	60 81       	ld	r22, Z
    32a2:	71 81       	ldd	r23, Z+1	; 0x01
    32a4:	82 81       	ldd	r24, Z+2	; 0x02
    32a6:	93 81       	ldd	r25, Z+3	; 0x03
    32a8:	20 e0       	ldi	r18, 0x00	; 0
    32aa:	3f ef       	ldi	r19, 0xFF	; 255
    32ac:	4f e7       	ldi	r20, 0x7F	; 127
    32ae:	57 e4       	ldi	r21, 0x47	; 71
    32b0:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    32b4:	18 16       	cp	r1, r24
    32b6:	0c f0       	brlt	.+2      	; 0x32ba <__stack+0x10bb>
    32b8:	43 c0       	rjmp	.+134    	; 0x3340 <__stack+0x1141>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32ba:	fe 01       	movw	r30, r28
    32bc:	ed 54       	subi	r30, 0x4D	; 77
    32be:	ff 4f       	sbci	r31, 0xFF	; 255
    32c0:	60 81       	ld	r22, Z
    32c2:	71 81       	ldd	r23, Z+1	; 0x01
    32c4:	82 81       	ldd	r24, Z+2	; 0x02
    32c6:	93 81       	ldd	r25, Z+3	; 0x03
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	40 e2       	ldi	r20, 0x20	; 32
    32ce:	51 e4       	ldi	r21, 0x41	; 65
    32d0:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    32d4:	dc 01       	movw	r26, r24
    32d6:	cb 01       	movw	r24, r22
    32d8:	8e 01       	movw	r16, r28
    32da:	03 55       	subi	r16, 0x53	; 83
    32dc:	1f 4f       	sbci	r17, 0xFF	; 255
    32de:	bc 01       	movw	r22, r24
    32e0:	cd 01       	movw	r24, r26
    32e2:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    32e6:	dc 01       	movw	r26, r24
    32e8:	cb 01       	movw	r24, r22
    32ea:	f8 01       	movw	r30, r16
    32ec:	91 83       	std	Z+1, r25	; 0x01
    32ee:	80 83       	st	Z, r24
    32f0:	1f c0       	rjmp	.+62     	; 0x3330 <__stack+0x1131>
    32f2:	fe 01       	movw	r30, r28
    32f4:	e5 55       	subi	r30, 0x55	; 85
    32f6:	ff 4f       	sbci	r31, 0xFF	; 255
    32f8:	80 e7       	ldi	r24, 0x70	; 112
    32fa:	91 e0       	ldi	r25, 0x01	; 1
    32fc:	91 83       	std	Z+1, r25	; 0x01
    32fe:	80 83       	st	Z, r24
    3300:	fe 01       	movw	r30, r28
    3302:	e5 55       	subi	r30, 0x55	; 85
    3304:	ff 4f       	sbci	r31, 0xFF	; 255
    3306:	80 81       	ld	r24, Z
    3308:	91 81       	ldd	r25, Z+1	; 0x01
    330a:	01 97       	sbiw	r24, 0x01	; 1
    330c:	f1 f7       	brne	.-4      	; 0x330a <__stack+0x110b>
    330e:	fe 01       	movw	r30, r28
    3310:	e5 55       	subi	r30, 0x55	; 85
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	91 83       	std	Z+1, r25	; 0x01
    3316:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3318:	de 01       	movw	r26, r28
    331a:	a3 55       	subi	r26, 0x53	; 83
    331c:	bf 4f       	sbci	r27, 0xFF	; 255
    331e:	fe 01       	movw	r30, r28
    3320:	e3 55       	subi	r30, 0x53	; 83
    3322:	ff 4f       	sbci	r31, 0xFF	; 255
    3324:	80 81       	ld	r24, Z
    3326:	91 81       	ldd	r25, Z+1	; 0x01
    3328:	01 97       	sbiw	r24, 0x01	; 1
    332a:	11 96       	adiw	r26, 0x01	; 1
    332c:	9c 93       	st	X, r25
    332e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3330:	fe 01       	movw	r30, r28
    3332:	e3 55       	subi	r30, 0x53	; 83
    3334:	ff 4f       	sbci	r31, 0xFF	; 255
    3336:	80 81       	ld	r24, Z
    3338:	91 81       	ldd	r25, Z+1	; 0x01
    333a:	00 97       	sbiw	r24, 0x00	; 0
    333c:	d1 f6       	brne	.-76     	; 0x32f2 <__stack+0x10f3>
    333e:	27 c0       	rjmp	.+78     	; 0x338e <__stack+0x118f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3340:	8e 01       	movw	r16, r28
    3342:	03 55       	subi	r16, 0x53	; 83
    3344:	1f 4f       	sbci	r17, 0xFF	; 255
    3346:	fe 01       	movw	r30, r28
    3348:	e1 55       	subi	r30, 0x51	; 81
    334a:	ff 4f       	sbci	r31, 0xFF	; 255
    334c:	60 81       	ld	r22, Z
    334e:	71 81       	ldd	r23, Z+1	; 0x01
    3350:	82 81       	ldd	r24, Z+2	; 0x02
    3352:	93 81       	ldd	r25, Z+3	; 0x03
    3354:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3358:	dc 01       	movw	r26, r24
    335a:	cb 01       	movw	r24, r22
    335c:	f8 01       	movw	r30, r16
    335e:	91 83       	std	Z+1, r25	; 0x01
    3360:	80 83       	st	Z, r24
    3362:	de 01       	movw	r26, r28
    3364:	a7 55       	subi	r26, 0x57	; 87
    3366:	bf 4f       	sbci	r27, 0xFF	; 255
    3368:	fe 01       	movw	r30, r28
    336a:	e3 55       	subi	r30, 0x53	; 83
    336c:	ff 4f       	sbci	r31, 0xFF	; 255
    336e:	80 81       	ld	r24, Z
    3370:	91 81       	ldd	r25, Z+1	; 0x01
    3372:	8d 93       	st	X+, r24
    3374:	9c 93       	st	X, r25
    3376:	fe 01       	movw	r30, r28
    3378:	e7 55       	subi	r30, 0x57	; 87
    337a:	ff 4f       	sbci	r31, 0xFF	; 255
    337c:	80 81       	ld	r24, Z
    337e:	91 81       	ldd	r25, Z+1	; 0x01
    3380:	01 97       	sbiw	r24, 0x01	; 1
    3382:	f1 f7       	brne	.-4      	; 0x3380 <__stack+0x1181>
    3384:	fe 01       	movw	r30, r28
    3386:	e7 55       	subi	r30, 0x57	; 87
    3388:	ff 4f       	sbci	r31, 0xFF	; 255
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
	  _delay_ms(500);
	  servo_1(90);
    338e:	8a e5       	ldi	r24, 0x5A	; 90
    3390:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
	  servo_2(0);
    3394:	80 e0       	ldi	r24, 0x00	; 0
    3396:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    339a:	fe 01       	movw	r30, r28
    339c:	eb 55       	subi	r30, 0x5B	; 91
    339e:	ff 4f       	sbci	r31, 0xFF	; 255
    33a0:	80 e0       	ldi	r24, 0x00	; 0
    33a2:	90 e0       	ldi	r25, 0x00	; 0
    33a4:	aa e7       	ldi	r26, 0x7A	; 122
    33a6:	b3 e4       	ldi	r27, 0x43	; 67
    33a8:	80 83       	st	Z, r24
    33aa:	91 83       	std	Z+1, r25	; 0x01
    33ac:	a2 83       	std	Z+2, r26	; 0x02
    33ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33b0:	8e 01       	movw	r16, r28
    33b2:	0f 55       	subi	r16, 0x5F	; 95
    33b4:	1f 4f       	sbci	r17, 0xFF	; 255
    33b6:	fe 01       	movw	r30, r28
    33b8:	eb 55       	subi	r30, 0x5B	; 91
    33ba:	ff 4f       	sbci	r31, 0xFF	; 255
    33bc:	60 81       	ld	r22, Z
    33be:	71 81       	ldd	r23, Z+1	; 0x01
    33c0:	82 81       	ldd	r24, Z+2	; 0x02
    33c2:	93 81       	ldd	r25, Z+3	; 0x03
    33c4:	26 e6       	ldi	r18, 0x66	; 102
    33c6:	36 e6       	ldi	r19, 0x66	; 102
    33c8:	46 e6       	ldi	r20, 0x66	; 102
    33ca:	55 e4       	ldi	r21, 0x45	; 69
    33cc:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    33d0:	dc 01       	movw	r26, r24
    33d2:	cb 01       	movw	r24, r22
    33d4:	f8 01       	movw	r30, r16
    33d6:	80 83       	st	Z, r24
    33d8:	91 83       	std	Z+1, r25	; 0x01
    33da:	a2 83       	std	Z+2, r26	; 0x02
    33dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    33de:	fe 01       	movw	r30, r28
    33e0:	ef 55       	subi	r30, 0x5F	; 95
    33e2:	ff 4f       	sbci	r31, 0xFF	; 255
    33e4:	60 81       	ld	r22, Z
    33e6:	71 81       	ldd	r23, Z+1	; 0x01
    33e8:	82 81       	ldd	r24, Z+2	; 0x02
    33ea:	93 81       	ldd	r25, Z+3	; 0x03
    33ec:	20 e0       	ldi	r18, 0x00	; 0
    33ee:	30 e0       	ldi	r19, 0x00	; 0
    33f0:	40 e8       	ldi	r20, 0x80	; 128
    33f2:	5f e3       	ldi	r21, 0x3F	; 63
    33f4:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    33f8:	88 23       	and	r24, r24
    33fa:	44 f4       	brge	.+16     	; 0x340c <__stack+0x120d>
		__ticks = 1;
    33fc:	fe 01       	movw	r30, r28
    33fe:	e1 56       	subi	r30, 0x61	; 97
    3400:	ff 4f       	sbci	r31, 0xFF	; 255
    3402:	81 e0       	ldi	r24, 0x01	; 1
    3404:	90 e0       	ldi	r25, 0x00	; 0
    3406:	91 83       	std	Z+1, r25	; 0x01
    3408:	80 83       	st	Z, r24
    340a:	64 c0       	rjmp	.+200    	; 0x34d4 <__stack+0x12d5>
	else if (__tmp > 65535)
    340c:	fe 01       	movw	r30, r28
    340e:	ef 55       	subi	r30, 0x5F	; 95
    3410:	ff 4f       	sbci	r31, 0xFF	; 255
    3412:	60 81       	ld	r22, Z
    3414:	71 81       	ldd	r23, Z+1	; 0x01
    3416:	82 81       	ldd	r24, Z+2	; 0x02
    3418:	93 81       	ldd	r25, Z+3	; 0x03
    341a:	20 e0       	ldi	r18, 0x00	; 0
    341c:	3f ef       	ldi	r19, 0xFF	; 255
    341e:	4f e7       	ldi	r20, 0x7F	; 127
    3420:	57 e4       	ldi	r21, 0x47	; 71
    3422:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3426:	18 16       	cp	r1, r24
    3428:	0c f0       	brlt	.+2      	; 0x342c <__stack+0x122d>
    342a:	43 c0       	rjmp	.+134    	; 0x34b2 <__stack+0x12b3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    342c:	fe 01       	movw	r30, r28
    342e:	eb 55       	subi	r30, 0x5B	; 91
    3430:	ff 4f       	sbci	r31, 0xFF	; 255
    3432:	60 81       	ld	r22, Z
    3434:	71 81       	ldd	r23, Z+1	; 0x01
    3436:	82 81       	ldd	r24, Z+2	; 0x02
    3438:	93 81       	ldd	r25, Z+3	; 0x03
    343a:	20 e0       	ldi	r18, 0x00	; 0
    343c:	30 e0       	ldi	r19, 0x00	; 0
    343e:	40 e2       	ldi	r20, 0x20	; 32
    3440:	51 e4       	ldi	r21, 0x41	; 65
    3442:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3446:	dc 01       	movw	r26, r24
    3448:	cb 01       	movw	r24, r22
    344a:	8e 01       	movw	r16, r28
    344c:	01 56       	subi	r16, 0x61	; 97
    344e:	1f 4f       	sbci	r17, 0xFF	; 255
    3450:	bc 01       	movw	r22, r24
    3452:	cd 01       	movw	r24, r26
    3454:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3458:	dc 01       	movw	r26, r24
    345a:	cb 01       	movw	r24, r22
    345c:	f8 01       	movw	r30, r16
    345e:	91 83       	std	Z+1, r25	; 0x01
    3460:	80 83       	st	Z, r24
    3462:	1f c0       	rjmp	.+62     	; 0x34a2 <__stack+0x12a3>
    3464:	fe 01       	movw	r30, r28
    3466:	e3 56       	subi	r30, 0x63	; 99
    3468:	ff 4f       	sbci	r31, 0xFF	; 255
    346a:	80 e7       	ldi	r24, 0x70	; 112
    346c:	91 e0       	ldi	r25, 0x01	; 1
    346e:	91 83       	std	Z+1, r25	; 0x01
    3470:	80 83       	st	Z, r24
    3472:	fe 01       	movw	r30, r28
    3474:	e3 56       	subi	r30, 0x63	; 99
    3476:	ff 4f       	sbci	r31, 0xFF	; 255
    3478:	80 81       	ld	r24, Z
    347a:	91 81       	ldd	r25, Z+1	; 0x01
    347c:	01 97       	sbiw	r24, 0x01	; 1
    347e:	f1 f7       	brne	.-4      	; 0x347c <__stack+0x127d>
    3480:	fe 01       	movw	r30, r28
    3482:	e3 56       	subi	r30, 0x63	; 99
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	91 83       	std	Z+1, r25	; 0x01
    3488:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    348a:	de 01       	movw	r26, r28
    348c:	a1 56       	subi	r26, 0x61	; 97
    348e:	bf 4f       	sbci	r27, 0xFF	; 255
    3490:	fe 01       	movw	r30, r28
    3492:	e1 56       	subi	r30, 0x61	; 97
    3494:	ff 4f       	sbci	r31, 0xFF	; 255
    3496:	80 81       	ld	r24, Z
    3498:	91 81       	ldd	r25, Z+1	; 0x01
    349a:	01 97       	sbiw	r24, 0x01	; 1
    349c:	11 96       	adiw	r26, 0x01	; 1
    349e:	9c 93       	st	X, r25
    34a0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34a2:	fe 01       	movw	r30, r28
    34a4:	e1 56       	subi	r30, 0x61	; 97
    34a6:	ff 4f       	sbci	r31, 0xFF	; 255
    34a8:	80 81       	ld	r24, Z
    34aa:	91 81       	ldd	r25, Z+1	; 0x01
    34ac:	00 97       	sbiw	r24, 0x00	; 0
    34ae:	d1 f6       	brne	.-76     	; 0x3464 <__stack+0x1265>
    34b0:	27 c0       	rjmp	.+78     	; 0x3500 <__stack+0x1301>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34b2:	8e 01       	movw	r16, r28
    34b4:	01 56       	subi	r16, 0x61	; 97
    34b6:	1f 4f       	sbci	r17, 0xFF	; 255
    34b8:	fe 01       	movw	r30, r28
    34ba:	ef 55       	subi	r30, 0x5F	; 95
    34bc:	ff 4f       	sbci	r31, 0xFF	; 255
    34be:	60 81       	ld	r22, Z
    34c0:	71 81       	ldd	r23, Z+1	; 0x01
    34c2:	82 81       	ldd	r24, Z+2	; 0x02
    34c4:	93 81       	ldd	r25, Z+3	; 0x03
    34c6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    34ca:	dc 01       	movw	r26, r24
    34cc:	cb 01       	movw	r24, r22
    34ce:	f8 01       	movw	r30, r16
    34d0:	91 83       	std	Z+1, r25	; 0x01
    34d2:	80 83       	st	Z, r24
    34d4:	de 01       	movw	r26, r28
    34d6:	a5 56       	subi	r26, 0x65	; 101
    34d8:	bf 4f       	sbci	r27, 0xFF	; 255
    34da:	fe 01       	movw	r30, r28
    34dc:	e1 56       	subi	r30, 0x61	; 97
    34de:	ff 4f       	sbci	r31, 0xFF	; 255
    34e0:	80 81       	ld	r24, Z
    34e2:	91 81       	ldd	r25, Z+1	; 0x01
    34e4:	8d 93       	st	X+, r24
    34e6:	9c 93       	st	X, r25
    34e8:	fe 01       	movw	r30, r28
    34ea:	e5 56       	subi	r30, 0x65	; 101
    34ec:	ff 4f       	sbci	r31, 0xFF	; 255
    34ee:	80 81       	ld	r24, Z
    34f0:	91 81       	ldd	r25, Z+1	; 0x01
    34f2:	01 97       	sbiw	r24, 0x01	; 1
    34f4:	f1 f7       	brne	.-4      	; 0x34f2 <__stack+0x12f3>
    34f6:	fe 01       	movw	r30, r28
    34f8:	e5 56       	subi	r30, 0x65	; 101
    34fa:	ff 4f       	sbci	r31, 0xFF	; 255
    34fc:	91 83       	std	Z+1, r25	; 0x01
    34fe:	80 83       	st	Z, r24
	  _delay_ms(250);
	  servo_1(15);
    3500:	8f e0       	ldi	r24, 0x0F	; 15
    3502:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
    3506:	fe 01       	movw	r30, r28
    3508:	e9 56       	subi	r30, 0x69	; 105
    350a:	ff 4f       	sbci	r31, 0xFF	; 255
    350c:	80 e0       	ldi	r24, 0x00	; 0
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	a8 e4       	ldi	r26, 0x48	; 72
    3512:	b2 e4       	ldi	r27, 0x42	; 66
    3514:	80 83       	st	Z, r24
    3516:	91 83       	std	Z+1, r25	; 0x01
    3518:	a2 83       	std	Z+2, r26	; 0x02
    351a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    351c:	8e 01       	movw	r16, r28
    351e:	0d 56       	subi	r16, 0x6D	; 109
    3520:	1f 4f       	sbci	r17, 0xFF	; 255
    3522:	fe 01       	movw	r30, r28
    3524:	e9 56       	subi	r30, 0x69	; 105
    3526:	ff 4f       	sbci	r31, 0xFF	; 255
    3528:	60 81       	ld	r22, Z
    352a:	71 81       	ldd	r23, Z+1	; 0x01
    352c:	82 81       	ldd	r24, Z+2	; 0x02
    352e:	93 81       	ldd	r25, Z+3	; 0x03
    3530:	26 e6       	ldi	r18, 0x66	; 102
    3532:	36 e6       	ldi	r19, 0x66	; 102
    3534:	46 e6       	ldi	r20, 0x66	; 102
    3536:	55 e4       	ldi	r21, 0x45	; 69
    3538:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    353c:	dc 01       	movw	r26, r24
    353e:	cb 01       	movw	r24, r22
    3540:	f8 01       	movw	r30, r16
    3542:	80 83       	st	Z, r24
    3544:	91 83       	std	Z+1, r25	; 0x01
    3546:	a2 83       	std	Z+2, r26	; 0x02
    3548:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    354a:	fe 01       	movw	r30, r28
    354c:	ed 56       	subi	r30, 0x6D	; 109
    354e:	ff 4f       	sbci	r31, 0xFF	; 255
    3550:	60 81       	ld	r22, Z
    3552:	71 81       	ldd	r23, Z+1	; 0x01
    3554:	82 81       	ldd	r24, Z+2	; 0x02
    3556:	93 81       	ldd	r25, Z+3	; 0x03
    3558:	20 e0       	ldi	r18, 0x00	; 0
    355a:	30 e0       	ldi	r19, 0x00	; 0
    355c:	40 e8       	ldi	r20, 0x80	; 128
    355e:	5f e3       	ldi	r21, 0x3F	; 63
    3560:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3564:	88 23       	and	r24, r24
    3566:	44 f4       	brge	.+16     	; 0x3578 <__stack+0x1379>
		__ticks = 1;
    3568:	fe 01       	movw	r30, r28
    356a:	ef 56       	subi	r30, 0x6F	; 111
    356c:	ff 4f       	sbci	r31, 0xFF	; 255
    356e:	81 e0       	ldi	r24, 0x01	; 1
    3570:	90 e0       	ldi	r25, 0x00	; 0
    3572:	91 83       	std	Z+1, r25	; 0x01
    3574:	80 83       	st	Z, r24
    3576:	64 c0       	rjmp	.+200    	; 0x3640 <__stack+0x1441>
	else if (__tmp > 65535)
    3578:	fe 01       	movw	r30, r28
    357a:	ed 56       	subi	r30, 0x6D	; 109
    357c:	ff 4f       	sbci	r31, 0xFF	; 255
    357e:	60 81       	ld	r22, Z
    3580:	71 81       	ldd	r23, Z+1	; 0x01
    3582:	82 81       	ldd	r24, Z+2	; 0x02
    3584:	93 81       	ldd	r25, Z+3	; 0x03
    3586:	20 e0       	ldi	r18, 0x00	; 0
    3588:	3f ef       	ldi	r19, 0xFF	; 255
    358a:	4f e7       	ldi	r20, 0x7F	; 127
    358c:	57 e4       	ldi	r21, 0x47	; 71
    358e:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3592:	18 16       	cp	r1, r24
    3594:	0c f0       	brlt	.+2      	; 0x3598 <__stack+0x1399>
    3596:	43 c0       	rjmp	.+134    	; 0x361e <__stack+0x141f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3598:	fe 01       	movw	r30, r28
    359a:	e9 56       	subi	r30, 0x69	; 105
    359c:	ff 4f       	sbci	r31, 0xFF	; 255
    359e:	60 81       	ld	r22, Z
    35a0:	71 81       	ldd	r23, Z+1	; 0x01
    35a2:	82 81       	ldd	r24, Z+2	; 0x02
    35a4:	93 81       	ldd	r25, Z+3	; 0x03
    35a6:	20 e0       	ldi	r18, 0x00	; 0
    35a8:	30 e0       	ldi	r19, 0x00	; 0
    35aa:	40 e2       	ldi	r20, 0x20	; 32
    35ac:	51 e4       	ldi	r21, 0x41	; 65
    35ae:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    35b2:	dc 01       	movw	r26, r24
    35b4:	cb 01       	movw	r24, r22
    35b6:	8e 01       	movw	r16, r28
    35b8:	0f 56       	subi	r16, 0x6F	; 111
    35ba:	1f 4f       	sbci	r17, 0xFF	; 255
    35bc:	bc 01       	movw	r22, r24
    35be:	cd 01       	movw	r24, r26
    35c0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    35c4:	dc 01       	movw	r26, r24
    35c6:	cb 01       	movw	r24, r22
    35c8:	f8 01       	movw	r30, r16
    35ca:	91 83       	std	Z+1, r25	; 0x01
    35cc:	80 83       	st	Z, r24
    35ce:	1f c0       	rjmp	.+62     	; 0x360e <__stack+0x140f>
    35d0:	fe 01       	movw	r30, r28
    35d2:	e1 57       	subi	r30, 0x71	; 113
    35d4:	ff 4f       	sbci	r31, 0xFF	; 255
    35d6:	80 e7       	ldi	r24, 0x70	; 112
    35d8:	91 e0       	ldi	r25, 0x01	; 1
    35da:	91 83       	std	Z+1, r25	; 0x01
    35dc:	80 83       	st	Z, r24
    35de:	fe 01       	movw	r30, r28
    35e0:	e1 57       	subi	r30, 0x71	; 113
    35e2:	ff 4f       	sbci	r31, 0xFF	; 255
    35e4:	80 81       	ld	r24, Z
    35e6:	91 81       	ldd	r25, Z+1	; 0x01
    35e8:	01 97       	sbiw	r24, 0x01	; 1
    35ea:	f1 f7       	brne	.-4      	; 0x35e8 <__stack+0x13e9>
    35ec:	fe 01       	movw	r30, r28
    35ee:	e1 57       	subi	r30, 0x71	; 113
    35f0:	ff 4f       	sbci	r31, 0xFF	; 255
    35f2:	91 83       	std	Z+1, r25	; 0x01
    35f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35f6:	de 01       	movw	r26, r28
    35f8:	af 56       	subi	r26, 0x6F	; 111
    35fa:	bf 4f       	sbci	r27, 0xFF	; 255
    35fc:	fe 01       	movw	r30, r28
    35fe:	ef 56       	subi	r30, 0x6F	; 111
    3600:	ff 4f       	sbci	r31, 0xFF	; 255
    3602:	80 81       	ld	r24, Z
    3604:	91 81       	ldd	r25, Z+1	; 0x01
    3606:	01 97       	sbiw	r24, 0x01	; 1
    3608:	11 96       	adiw	r26, 0x01	; 1
    360a:	9c 93       	st	X, r25
    360c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    360e:	fe 01       	movw	r30, r28
    3610:	ef 56       	subi	r30, 0x6F	; 111
    3612:	ff 4f       	sbci	r31, 0xFF	; 255
    3614:	80 81       	ld	r24, Z
    3616:	91 81       	ldd	r25, Z+1	; 0x01
    3618:	00 97       	sbiw	r24, 0x00	; 0
    361a:	d1 f6       	brne	.-76     	; 0x35d0 <__stack+0x13d1>
    361c:	27 c0       	rjmp	.+78     	; 0x366c <__stack+0x146d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    361e:	8e 01       	movw	r16, r28
    3620:	0f 56       	subi	r16, 0x6F	; 111
    3622:	1f 4f       	sbci	r17, 0xFF	; 255
    3624:	fe 01       	movw	r30, r28
    3626:	ed 56       	subi	r30, 0x6D	; 109
    3628:	ff 4f       	sbci	r31, 0xFF	; 255
    362a:	60 81       	ld	r22, Z
    362c:	71 81       	ldd	r23, Z+1	; 0x01
    362e:	82 81       	ldd	r24, Z+2	; 0x02
    3630:	93 81       	ldd	r25, Z+3	; 0x03
    3632:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3636:	dc 01       	movw	r26, r24
    3638:	cb 01       	movw	r24, r22
    363a:	f8 01       	movw	r30, r16
    363c:	91 83       	std	Z+1, r25	; 0x01
    363e:	80 83       	st	Z, r24
    3640:	de 01       	movw	r26, r28
    3642:	a3 57       	subi	r26, 0x73	; 115
    3644:	bf 4f       	sbci	r27, 0xFF	; 255
    3646:	fe 01       	movw	r30, r28
    3648:	ef 56       	subi	r30, 0x6F	; 111
    364a:	ff 4f       	sbci	r31, 0xFF	; 255
    364c:	80 81       	ld	r24, Z
    364e:	91 81       	ldd	r25, Z+1	; 0x01
    3650:	8d 93       	st	X+, r24
    3652:	9c 93       	st	X, r25
    3654:	fe 01       	movw	r30, r28
    3656:	e3 57       	subi	r30, 0x73	; 115
    3658:	ff 4f       	sbci	r31, 0xFF	; 255
    365a:	80 81       	ld	r24, Z
    365c:	91 81       	ldd	r25, Z+1	; 0x01
    365e:	01 97       	sbiw	r24, 0x01	; 1
    3660:	f1 f7       	brne	.-4      	; 0x365e <__stack+0x145f>
    3662:	fe 01       	movw	r30, r28
    3664:	e3 57       	subi	r30, 0x73	; 115
    3666:	ff 4f       	sbci	r31, 0xFF	; 255
    3668:	91 83       	std	Z+1, r25	; 0x01
    366a:	80 83       	st	Z, r24
	  _delay_ms(50);
	  servo_2(180);
    366c:	84 eb       	ldi	r24, 0xB4	; 180
    366e:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    3672:	fe 01       	movw	r30, r28
    3674:	e7 57       	subi	r30, 0x77	; 119
    3676:	ff 4f       	sbci	r31, 0xFF	; 255
    3678:	80 e0       	ldi	r24, 0x00	; 0
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	aa e7       	ldi	r26, 0x7A	; 122
    367e:	b3 e4       	ldi	r27, 0x43	; 67
    3680:	80 83       	st	Z, r24
    3682:	91 83       	std	Z+1, r25	; 0x01
    3684:	a2 83       	std	Z+2, r26	; 0x02
    3686:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3688:	8e 01       	movw	r16, r28
    368a:	0b 57       	subi	r16, 0x7B	; 123
    368c:	1f 4f       	sbci	r17, 0xFF	; 255
    368e:	fe 01       	movw	r30, r28
    3690:	e7 57       	subi	r30, 0x77	; 119
    3692:	ff 4f       	sbci	r31, 0xFF	; 255
    3694:	60 81       	ld	r22, Z
    3696:	71 81       	ldd	r23, Z+1	; 0x01
    3698:	82 81       	ldd	r24, Z+2	; 0x02
    369a:	93 81       	ldd	r25, Z+3	; 0x03
    369c:	26 e6       	ldi	r18, 0x66	; 102
    369e:	36 e6       	ldi	r19, 0x66	; 102
    36a0:	46 e6       	ldi	r20, 0x66	; 102
    36a2:	55 e4       	ldi	r21, 0x45	; 69
    36a4:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    36a8:	dc 01       	movw	r26, r24
    36aa:	cb 01       	movw	r24, r22
    36ac:	f8 01       	movw	r30, r16
    36ae:	80 83       	st	Z, r24
    36b0:	91 83       	std	Z+1, r25	; 0x01
    36b2:	a2 83       	std	Z+2, r26	; 0x02
    36b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36b6:	fe 01       	movw	r30, r28
    36b8:	eb 57       	subi	r30, 0x7B	; 123
    36ba:	ff 4f       	sbci	r31, 0xFF	; 255
    36bc:	60 81       	ld	r22, Z
    36be:	71 81       	ldd	r23, Z+1	; 0x01
    36c0:	82 81       	ldd	r24, Z+2	; 0x02
    36c2:	93 81       	ldd	r25, Z+3	; 0x03
    36c4:	20 e0       	ldi	r18, 0x00	; 0
    36c6:	30 e0       	ldi	r19, 0x00	; 0
    36c8:	40 e8       	ldi	r20, 0x80	; 128
    36ca:	5f e3       	ldi	r21, 0x3F	; 63
    36cc:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    36d0:	88 23       	and	r24, r24
    36d2:	44 f4       	brge	.+16     	; 0x36e4 <__stack+0x14e5>
		__ticks = 1;
    36d4:	fe 01       	movw	r30, r28
    36d6:	ed 57       	subi	r30, 0x7D	; 125
    36d8:	ff 4f       	sbci	r31, 0xFF	; 255
    36da:	81 e0       	ldi	r24, 0x01	; 1
    36dc:	90 e0       	ldi	r25, 0x00	; 0
    36de:	91 83       	std	Z+1, r25	; 0x01
    36e0:	80 83       	st	Z, r24
    36e2:	64 c0       	rjmp	.+200    	; 0x37ac <__stack+0x15ad>
	else if (__tmp > 65535)
    36e4:	fe 01       	movw	r30, r28
    36e6:	eb 57       	subi	r30, 0x7B	; 123
    36e8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ea:	60 81       	ld	r22, Z
    36ec:	71 81       	ldd	r23, Z+1	; 0x01
    36ee:	82 81       	ldd	r24, Z+2	; 0x02
    36f0:	93 81       	ldd	r25, Z+3	; 0x03
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	3f ef       	ldi	r19, 0xFF	; 255
    36f6:	4f e7       	ldi	r20, 0x7F	; 127
    36f8:	57 e4       	ldi	r21, 0x47	; 71
    36fa:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    36fe:	18 16       	cp	r1, r24
    3700:	0c f0       	brlt	.+2      	; 0x3704 <__stack+0x1505>
    3702:	43 c0       	rjmp	.+134    	; 0x378a <__stack+0x158b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3704:	fe 01       	movw	r30, r28
    3706:	e7 57       	subi	r30, 0x77	; 119
    3708:	ff 4f       	sbci	r31, 0xFF	; 255
    370a:	60 81       	ld	r22, Z
    370c:	71 81       	ldd	r23, Z+1	; 0x01
    370e:	82 81       	ldd	r24, Z+2	; 0x02
    3710:	93 81       	ldd	r25, Z+3	; 0x03
    3712:	20 e0       	ldi	r18, 0x00	; 0
    3714:	30 e0       	ldi	r19, 0x00	; 0
    3716:	40 e2       	ldi	r20, 0x20	; 32
    3718:	51 e4       	ldi	r21, 0x41	; 65
    371a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    371e:	dc 01       	movw	r26, r24
    3720:	cb 01       	movw	r24, r22
    3722:	8e 01       	movw	r16, r28
    3724:	0d 57       	subi	r16, 0x7D	; 125
    3726:	1f 4f       	sbci	r17, 0xFF	; 255
    3728:	bc 01       	movw	r22, r24
    372a:	cd 01       	movw	r24, r26
    372c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3730:	dc 01       	movw	r26, r24
    3732:	cb 01       	movw	r24, r22
    3734:	f8 01       	movw	r30, r16
    3736:	91 83       	std	Z+1, r25	; 0x01
    3738:	80 83       	st	Z, r24
    373a:	1f c0       	rjmp	.+62     	; 0x377a <__stack+0x157b>
    373c:	fe 01       	movw	r30, r28
    373e:	ef 57       	subi	r30, 0x7F	; 127
    3740:	ff 4f       	sbci	r31, 0xFF	; 255
    3742:	80 e7       	ldi	r24, 0x70	; 112
    3744:	91 e0       	ldi	r25, 0x01	; 1
    3746:	91 83       	std	Z+1, r25	; 0x01
    3748:	80 83       	st	Z, r24
    374a:	fe 01       	movw	r30, r28
    374c:	ef 57       	subi	r30, 0x7F	; 127
    374e:	ff 4f       	sbci	r31, 0xFF	; 255
    3750:	80 81       	ld	r24, Z
    3752:	91 81       	ldd	r25, Z+1	; 0x01
    3754:	01 97       	sbiw	r24, 0x01	; 1
    3756:	f1 f7       	brne	.-4      	; 0x3754 <__stack+0x1555>
    3758:	fe 01       	movw	r30, r28
    375a:	ef 57       	subi	r30, 0x7F	; 127
    375c:	ff 4f       	sbci	r31, 0xFF	; 255
    375e:	91 83       	std	Z+1, r25	; 0x01
    3760:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3762:	de 01       	movw	r26, r28
    3764:	ad 57       	subi	r26, 0x7D	; 125
    3766:	bf 4f       	sbci	r27, 0xFF	; 255
    3768:	fe 01       	movw	r30, r28
    376a:	ed 57       	subi	r30, 0x7D	; 125
    376c:	ff 4f       	sbci	r31, 0xFF	; 255
    376e:	80 81       	ld	r24, Z
    3770:	91 81       	ldd	r25, Z+1	; 0x01
    3772:	01 97       	sbiw	r24, 0x01	; 1
    3774:	11 96       	adiw	r26, 0x01	; 1
    3776:	9c 93       	st	X, r25
    3778:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    377a:	fe 01       	movw	r30, r28
    377c:	ed 57       	subi	r30, 0x7D	; 125
    377e:	ff 4f       	sbci	r31, 0xFF	; 255
    3780:	80 81       	ld	r24, Z
    3782:	91 81       	ldd	r25, Z+1	; 0x01
    3784:	00 97       	sbiw	r24, 0x00	; 0
    3786:	d1 f6       	brne	.-76     	; 0x373c <__stack+0x153d>
    3788:	27 c0       	rjmp	.+78     	; 0x37d8 <__stack+0x15d9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    378a:	8e 01       	movw	r16, r28
    378c:	0d 57       	subi	r16, 0x7D	; 125
    378e:	1f 4f       	sbci	r17, 0xFF	; 255
    3790:	fe 01       	movw	r30, r28
    3792:	eb 57       	subi	r30, 0x7B	; 123
    3794:	ff 4f       	sbci	r31, 0xFF	; 255
    3796:	60 81       	ld	r22, Z
    3798:	71 81       	ldd	r23, Z+1	; 0x01
    379a:	82 81       	ldd	r24, Z+2	; 0x02
    379c:	93 81       	ldd	r25, Z+3	; 0x03
    379e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    37a2:	dc 01       	movw	r26, r24
    37a4:	cb 01       	movw	r24, r22
    37a6:	f8 01       	movw	r30, r16
    37a8:	91 83       	std	Z+1, r25	; 0x01
    37aa:	80 83       	st	Z, r24
    37ac:	de 01       	movw	r26, r28
    37ae:	a1 58       	subi	r26, 0x81	; 129
    37b0:	bf 4f       	sbci	r27, 0xFF	; 255
    37b2:	fe 01       	movw	r30, r28
    37b4:	ed 57       	subi	r30, 0x7D	; 125
    37b6:	ff 4f       	sbci	r31, 0xFF	; 255
    37b8:	80 81       	ld	r24, Z
    37ba:	91 81       	ldd	r25, Z+1	; 0x01
    37bc:	8d 93       	st	X+, r24
    37be:	9c 93       	st	X, r25
    37c0:	fe 01       	movw	r30, r28
    37c2:	e1 58       	subi	r30, 0x81	; 129
    37c4:	ff 4f       	sbci	r31, 0xFF	; 255
    37c6:	80 81       	ld	r24, Z
    37c8:	91 81       	ldd	r25, Z+1	; 0x01
    37ca:	01 97       	sbiw	r24, 0x01	; 1
    37cc:	f1 f7       	brne	.-4      	; 0x37ca <__stack+0x15cb>
    37ce:	fe 01       	movw	r30, r28
    37d0:	e1 58       	subi	r30, 0x81	; 129
    37d2:	ff 4f       	sbci	r31, 0xFF	; 255
    37d4:	91 83       	std	Z+1, r25	; 0x01
    37d6:	80 83       	st	Z, r24
	  _delay_ms(250);
	  servo_1(90);
    37d8:	8a e5       	ldi	r24, 0x5A	; 90
    37da:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
			
		}
		if(data == 0x37)
    37de:	fe 01       	movw	r30, r28
    37e0:	eb 5e       	subi	r30, 0xEB	; 235
    37e2:	fd 4f       	sbci	r31, 0xFD	; 253
    37e4:	80 81       	ld	r24, Z
    37e6:	87 33       	cpi	r24, 0x37	; 55
    37e8:	09 f0       	breq	.+2      	; 0x37ec <__stack+0x15ed>
    37ea:	28 c2       	rjmp	.+1104   	; 0x3c3c <__stack+0x1a3d>
		{
	//pickup_buffer();
	   servo_3(120);
    37ec:	88 e7       	ldi	r24, 0x78	; 120
    37ee:	0e 94 9c 04 	call	0x938	; 0x938 <servo_3>
    37f2:	fe 01       	movw	r30, r28
    37f4:	e5 58       	subi	r30, 0x85	; 133
    37f6:	ff 4f       	sbci	r31, 0xFF	; 255
    37f8:	80 e0       	ldi	r24, 0x00	; 0
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	aa ef       	ldi	r26, 0xFA	; 250
    37fe:	b3 e4       	ldi	r27, 0x43	; 67
    3800:	80 83       	st	Z, r24
    3802:	91 83       	std	Z+1, r25	; 0x01
    3804:	a2 83       	std	Z+2, r26	; 0x02
    3806:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3808:	8e 01       	movw	r16, r28
    380a:	09 58       	subi	r16, 0x89	; 137
    380c:	1f 4f       	sbci	r17, 0xFF	; 255
    380e:	fe 01       	movw	r30, r28
    3810:	e5 58       	subi	r30, 0x85	; 133
    3812:	ff 4f       	sbci	r31, 0xFF	; 255
    3814:	60 81       	ld	r22, Z
    3816:	71 81       	ldd	r23, Z+1	; 0x01
    3818:	82 81       	ldd	r24, Z+2	; 0x02
    381a:	93 81       	ldd	r25, Z+3	; 0x03
    381c:	26 e6       	ldi	r18, 0x66	; 102
    381e:	36 e6       	ldi	r19, 0x66	; 102
    3820:	46 e6       	ldi	r20, 0x66	; 102
    3822:	55 e4       	ldi	r21, 0x45	; 69
    3824:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3828:	dc 01       	movw	r26, r24
    382a:	cb 01       	movw	r24, r22
    382c:	f8 01       	movw	r30, r16
    382e:	80 83       	st	Z, r24
    3830:	91 83       	std	Z+1, r25	; 0x01
    3832:	a2 83       	std	Z+2, r26	; 0x02
    3834:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3836:	fe 01       	movw	r30, r28
    3838:	e9 58       	subi	r30, 0x89	; 137
    383a:	ff 4f       	sbci	r31, 0xFF	; 255
    383c:	60 81       	ld	r22, Z
    383e:	71 81       	ldd	r23, Z+1	; 0x01
    3840:	82 81       	ldd	r24, Z+2	; 0x02
    3842:	93 81       	ldd	r25, Z+3	; 0x03
    3844:	20 e0       	ldi	r18, 0x00	; 0
    3846:	30 e0       	ldi	r19, 0x00	; 0
    3848:	40 e8       	ldi	r20, 0x80	; 128
    384a:	5f e3       	ldi	r21, 0x3F	; 63
    384c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3850:	88 23       	and	r24, r24
    3852:	44 f4       	brge	.+16     	; 0x3864 <__stack+0x1665>
		__ticks = 1;
    3854:	fe 01       	movw	r30, r28
    3856:	eb 58       	subi	r30, 0x8B	; 139
    3858:	ff 4f       	sbci	r31, 0xFF	; 255
    385a:	81 e0       	ldi	r24, 0x01	; 1
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	91 83       	std	Z+1, r25	; 0x01
    3860:	80 83       	st	Z, r24
    3862:	64 c0       	rjmp	.+200    	; 0x392c <__stack+0x172d>
	else if (__tmp > 65535)
    3864:	fe 01       	movw	r30, r28
    3866:	e9 58       	subi	r30, 0x89	; 137
    3868:	ff 4f       	sbci	r31, 0xFF	; 255
    386a:	60 81       	ld	r22, Z
    386c:	71 81       	ldd	r23, Z+1	; 0x01
    386e:	82 81       	ldd	r24, Z+2	; 0x02
    3870:	93 81       	ldd	r25, Z+3	; 0x03
    3872:	20 e0       	ldi	r18, 0x00	; 0
    3874:	3f ef       	ldi	r19, 0xFF	; 255
    3876:	4f e7       	ldi	r20, 0x7F	; 127
    3878:	57 e4       	ldi	r21, 0x47	; 71
    387a:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    387e:	18 16       	cp	r1, r24
    3880:	0c f0       	brlt	.+2      	; 0x3884 <__stack+0x1685>
    3882:	43 c0       	rjmp	.+134    	; 0x390a <__stack+0x170b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3884:	fe 01       	movw	r30, r28
    3886:	e5 58       	subi	r30, 0x85	; 133
    3888:	ff 4f       	sbci	r31, 0xFF	; 255
    388a:	60 81       	ld	r22, Z
    388c:	71 81       	ldd	r23, Z+1	; 0x01
    388e:	82 81       	ldd	r24, Z+2	; 0x02
    3890:	93 81       	ldd	r25, Z+3	; 0x03
    3892:	20 e0       	ldi	r18, 0x00	; 0
    3894:	30 e0       	ldi	r19, 0x00	; 0
    3896:	40 e2       	ldi	r20, 0x20	; 32
    3898:	51 e4       	ldi	r21, 0x41	; 65
    389a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    389e:	dc 01       	movw	r26, r24
    38a0:	cb 01       	movw	r24, r22
    38a2:	8e 01       	movw	r16, r28
    38a4:	0b 58       	subi	r16, 0x8B	; 139
    38a6:	1f 4f       	sbci	r17, 0xFF	; 255
    38a8:	bc 01       	movw	r22, r24
    38aa:	cd 01       	movw	r24, r26
    38ac:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    38b0:	dc 01       	movw	r26, r24
    38b2:	cb 01       	movw	r24, r22
    38b4:	f8 01       	movw	r30, r16
    38b6:	91 83       	std	Z+1, r25	; 0x01
    38b8:	80 83       	st	Z, r24
    38ba:	1f c0       	rjmp	.+62     	; 0x38fa <__stack+0x16fb>
    38bc:	fe 01       	movw	r30, r28
    38be:	ed 58       	subi	r30, 0x8D	; 141
    38c0:	ff 4f       	sbci	r31, 0xFF	; 255
    38c2:	80 e7       	ldi	r24, 0x70	; 112
    38c4:	91 e0       	ldi	r25, 0x01	; 1
    38c6:	91 83       	std	Z+1, r25	; 0x01
    38c8:	80 83       	st	Z, r24
    38ca:	fe 01       	movw	r30, r28
    38cc:	ed 58       	subi	r30, 0x8D	; 141
    38ce:	ff 4f       	sbci	r31, 0xFF	; 255
    38d0:	80 81       	ld	r24, Z
    38d2:	91 81       	ldd	r25, Z+1	; 0x01
    38d4:	01 97       	sbiw	r24, 0x01	; 1
    38d6:	f1 f7       	brne	.-4      	; 0x38d4 <__stack+0x16d5>
    38d8:	fe 01       	movw	r30, r28
    38da:	ed 58       	subi	r30, 0x8D	; 141
    38dc:	ff 4f       	sbci	r31, 0xFF	; 255
    38de:	91 83       	std	Z+1, r25	; 0x01
    38e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38e2:	de 01       	movw	r26, r28
    38e4:	ab 58       	subi	r26, 0x8B	; 139
    38e6:	bf 4f       	sbci	r27, 0xFF	; 255
    38e8:	fe 01       	movw	r30, r28
    38ea:	eb 58       	subi	r30, 0x8B	; 139
    38ec:	ff 4f       	sbci	r31, 0xFF	; 255
    38ee:	80 81       	ld	r24, Z
    38f0:	91 81       	ldd	r25, Z+1	; 0x01
    38f2:	01 97       	sbiw	r24, 0x01	; 1
    38f4:	11 96       	adiw	r26, 0x01	; 1
    38f6:	9c 93       	st	X, r25
    38f8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38fa:	fe 01       	movw	r30, r28
    38fc:	eb 58       	subi	r30, 0x8B	; 139
    38fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3900:	80 81       	ld	r24, Z
    3902:	91 81       	ldd	r25, Z+1	; 0x01
    3904:	00 97       	sbiw	r24, 0x00	; 0
    3906:	d1 f6       	brne	.-76     	; 0x38bc <__stack+0x16bd>
    3908:	27 c0       	rjmp	.+78     	; 0x3958 <__stack+0x1759>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    390a:	8e 01       	movw	r16, r28
    390c:	0b 58       	subi	r16, 0x8B	; 139
    390e:	1f 4f       	sbci	r17, 0xFF	; 255
    3910:	fe 01       	movw	r30, r28
    3912:	e9 58       	subi	r30, 0x89	; 137
    3914:	ff 4f       	sbci	r31, 0xFF	; 255
    3916:	60 81       	ld	r22, Z
    3918:	71 81       	ldd	r23, Z+1	; 0x01
    391a:	82 81       	ldd	r24, Z+2	; 0x02
    391c:	93 81       	ldd	r25, Z+3	; 0x03
    391e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3922:	dc 01       	movw	r26, r24
    3924:	cb 01       	movw	r24, r22
    3926:	f8 01       	movw	r30, r16
    3928:	91 83       	std	Z+1, r25	; 0x01
    392a:	80 83       	st	Z, r24
    392c:	de 01       	movw	r26, r28
    392e:	af 58       	subi	r26, 0x8F	; 143
    3930:	bf 4f       	sbci	r27, 0xFF	; 255
    3932:	fe 01       	movw	r30, r28
    3934:	eb 58       	subi	r30, 0x8B	; 139
    3936:	ff 4f       	sbci	r31, 0xFF	; 255
    3938:	80 81       	ld	r24, Z
    393a:	91 81       	ldd	r25, Z+1	; 0x01
    393c:	8d 93       	st	X+, r24
    393e:	9c 93       	st	X, r25
    3940:	fe 01       	movw	r30, r28
    3942:	ef 58       	subi	r30, 0x8F	; 143
    3944:	ff 4f       	sbci	r31, 0xFF	; 255
    3946:	80 81       	ld	r24, Z
    3948:	91 81       	ldd	r25, Z+1	; 0x01
    394a:	01 97       	sbiw	r24, 0x01	; 1
    394c:	f1 f7       	brne	.-4      	; 0x394a <__stack+0x174b>
    394e:	fe 01       	movw	r30, r28
    3950:	ef 58       	subi	r30, 0x8F	; 143
    3952:	ff 4f       	sbci	r31, 0xFF	; 255
    3954:	91 83       	std	Z+1, r25	; 0x01
    3956:	80 83       	st	Z, r24
	  _delay_ms(500);
	  servo_1(90);
    3958:	8a e5       	ldi	r24, 0x5A	; 90
    395a:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
	  servo_2(0);
    395e:	80 e0       	ldi	r24, 0x00	; 0
    3960:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    3964:	fe 01       	movw	r30, r28
    3966:	e3 59       	subi	r30, 0x93	; 147
    3968:	ff 4f       	sbci	r31, 0xFF	; 255
    396a:	80 e0       	ldi	r24, 0x00	; 0
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	aa e7       	ldi	r26, 0x7A	; 122
    3970:	b3 e4       	ldi	r27, 0x43	; 67
    3972:	80 83       	st	Z, r24
    3974:	91 83       	std	Z+1, r25	; 0x01
    3976:	a2 83       	std	Z+2, r26	; 0x02
    3978:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    397a:	8e 01       	movw	r16, r28
    397c:	07 59       	subi	r16, 0x97	; 151
    397e:	1f 4f       	sbci	r17, 0xFF	; 255
    3980:	fe 01       	movw	r30, r28
    3982:	e3 59       	subi	r30, 0x93	; 147
    3984:	ff 4f       	sbci	r31, 0xFF	; 255
    3986:	60 81       	ld	r22, Z
    3988:	71 81       	ldd	r23, Z+1	; 0x01
    398a:	82 81       	ldd	r24, Z+2	; 0x02
    398c:	93 81       	ldd	r25, Z+3	; 0x03
    398e:	26 e6       	ldi	r18, 0x66	; 102
    3990:	36 e6       	ldi	r19, 0x66	; 102
    3992:	46 e6       	ldi	r20, 0x66	; 102
    3994:	55 e4       	ldi	r21, 0x45	; 69
    3996:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    399a:	dc 01       	movw	r26, r24
    399c:	cb 01       	movw	r24, r22
    399e:	f8 01       	movw	r30, r16
    39a0:	80 83       	st	Z, r24
    39a2:	91 83       	std	Z+1, r25	; 0x01
    39a4:	a2 83       	std	Z+2, r26	; 0x02
    39a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39a8:	fe 01       	movw	r30, r28
    39aa:	e7 59       	subi	r30, 0x97	; 151
    39ac:	ff 4f       	sbci	r31, 0xFF	; 255
    39ae:	60 81       	ld	r22, Z
    39b0:	71 81       	ldd	r23, Z+1	; 0x01
    39b2:	82 81       	ldd	r24, Z+2	; 0x02
    39b4:	93 81       	ldd	r25, Z+3	; 0x03
    39b6:	20 e0       	ldi	r18, 0x00	; 0
    39b8:	30 e0       	ldi	r19, 0x00	; 0
    39ba:	40 e8       	ldi	r20, 0x80	; 128
    39bc:	5f e3       	ldi	r21, 0x3F	; 63
    39be:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    39c2:	88 23       	and	r24, r24
    39c4:	44 f4       	brge	.+16     	; 0x39d6 <__stack+0x17d7>
		__ticks = 1;
    39c6:	fe 01       	movw	r30, r28
    39c8:	e9 59       	subi	r30, 0x99	; 153
    39ca:	ff 4f       	sbci	r31, 0xFF	; 255
    39cc:	81 e0       	ldi	r24, 0x01	; 1
    39ce:	90 e0       	ldi	r25, 0x00	; 0
    39d0:	91 83       	std	Z+1, r25	; 0x01
    39d2:	80 83       	st	Z, r24
    39d4:	64 c0       	rjmp	.+200    	; 0x3a9e <__stack+0x189f>
	else if (__tmp > 65535)
    39d6:	fe 01       	movw	r30, r28
    39d8:	e7 59       	subi	r30, 0x97	; 151
    39da:	ff 4f       	sbci	r31, 0xFF	; 255
    39dc:	60 81       	ld	r22, Z
    39de:	71 81       	ldd	r23, Z+1	; 0x01
    39e0:	82 81       	ldd	r24, Z+2	; 0x02
    39e2:	93 81       	ldd	r25, Z+3	; 0x03
    39e4:	20 e0       	ldi	r18, 0x00	; 0
    39e6:	3f ef       	ldi	r19, 0xFF	; 255
    39e8:	4f e7       	ldi	r20, 0x7F	; 127
    39ea:	57 e4       	ldi	r21, 0x47	; 71
    39ec:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    39f0:	18 16       	cp	r1, r24
    39f2:	0c f0       	brlt	.+2      	; 0x39f6 <__stack+0x17f7>
    39f4:	43 c0       	rjmp	.+134    	; 0x3a7c <__stack+0x187d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39f6:	fe 01       	movw	r30, r28
    39f8:	e3 59       	subi	r30, 0x93	; 147
    39fa:	ff 4f       	sbci	r31, 0xFF	; 255
    39fc:	60 81       	ld	r22, Z
    39fe:	71 81       	ldd	r23, Z+1	; 0x01
    3a00:	82 81       	ldd	r24, Z+2	; 0x02
    3a02:	93 81       	ldd	r25, Z+3	; 0x03
    3a04:	20 e0       	ldi	r18, 0x00	; 0
    3a06:	30 e0       	ldi	r19, 0x00	; 0
    3a08:	40 e2       	ldi	r20, 0x20	; 32
    3a0a:	51 e4       	ldi	r21, 0x41	; 65
    3a0c:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3a10:	dc 01       	movw	r26, r24
    3a12:	cb 01       	movw	r24, r22
    3a14:	8e 01       	movw	r16, r28
    3a16:	09 59       	subi	r16, 0x99	; 153
    3a18:	1f 4f       	sbci	r17, 0xFF	; 255
    3a1a:	bc 01       	movw	r22, r24
    3a1c:	cd 01       	movw	r24, r26
    3a1e:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3a22:	dc 01       	movw	r26, r24
    3a24:	cb 01       	movw	r24, r22
    3a26:	f8 01       	movw	r30, r16
    3a28:	91 83       	std	Z+1, r25	; 0x01
    3a2a:	80 83       	st	Z, r24
    3a2c:	1f c0       	rjmp	.+62     	; 0x3a6c <__stack+0x186d>
    3a2e:	fe 01       	movw	r30, r28
    3a30:	eb 59       	subi	r30, 0x9B	; 155
    3a32:	ff 4f       	sbci	r31, 0xFF	; 255
    3a34:	80 e7       	ldi	r24, 0x70	; 112
    3a36:	91 e0       	ldi	r25, 0x01	; 1
    3a38:	91 83       	std	Z+1, r25	; 0x01
    3a3a:	80 83       	st	Z, r24
    3a3c:	fe 01       	movw	r30, r28
    3a3e:	eb 59       	subi	r30, 0x9B	; 155
    3a40:	ff 4f       	sbci	r31, 0xFF	; 255
    3a42:	80 81       	ld	r24, Z
    3a44:	91 81       	ldd	r25, Z+1	; 0x01
    3a46:	01 97       	sbiw	r24, 0x01	; 1
    3a48:	f1 f7       	brne	.-4      	; 0x3a46 <__stack+0x1847>
    3a4a:	fe 01       	movw	r30, r28
    3a4c:	eb 59       	subi	r30, 0x9B	; 155
    3a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a50:	91 83       	std	Z+1, r25	; 0x01
    3a52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a54:	de 01       	movw	r26, r28
    3a56:	a9 59       	subi	r26, 0x99	; 153
    3a58:	bf 4f       	sbci	r27, 0xFF	; 255
    3a5a:	fe 01       	movw	r30, r28
    3a5c:	e9 59       	subi	r30, 0x99	; 153
    3a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a60:	80 81       	ld	r24, Z
    3a62:	91 81       	ldd	r25, Z+1	; 0x01
    3a64:	01 97       	sbiw	r24, 0x01	; 1
    3a66:	11 96       	adiw	r26, 0x01	; 1
    3a68:	9c 93       	st	X, r25
    3a6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a6c:	fe 01       	movw	r30, r28
    3a6e:	e9 59       	subi	r30, 0x99	; 153
    3a70:	ff 4f       	sbci	r31, 0xFF	; 255
    3a72:	80 81       	ld	r24, Z
    3a74:	91 81       	ldd	r25, Z+1	; 0x01
    3a76:	00 97       	sbiw	r24, 0x00	; 0
    3a78:	d1 f6       	brne	.-76     	; 0x3a2e <__stack+0x182f>
    3a7a:	27 c0       	rjmp	.+78     	; 0x3aca <__stack+0x18cb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a7c:	8e 01       	movw	r16, r28
    3a7e:	09 59       	subi	r16, 0x99	; 153
    3a80:	1f 4f       	sbci	r17, 0xFF	; 255
    3a82:	fe 01       	movw	r30, r28
    3a84:	e7 59       	subi	r30, 0x97	; 151
    3a86:	ff 4f       	sbci	r31, 0xFF	; 255
    3a88:	60 81       	ld	r22, Z
    3a8a:	71 81       	ldd	r23, Z+1	; 0x01
    3a8c:	82 81       	ldd	r24, Z+2	; 0x02
    3a8e:	93 81       	ldd	r25, Z+3	; 0x03
    3a90:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3a94:	dc 01       	movw	r26, r24
    3a96:	cb 01       	movw	r24, r22
    3a98:	f8 01       	movw	r30, r16
    3a9a:	91 83       	std	Z+1, r25	; 0x01
    3a9c:	80 83       	st	Z, r24
    3a9e:	de 01       	movw	r26, r28
    3aa0:	ad 59       	subi	r26, 0x9D	; 157
    3aa2:	bf 4f       	sbci	r27, 0xFF	; 255
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	e9 59       	subi	r30, 0x99	; 153
    3aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aaa:	80 81       	ld	r24, Z
    3aac:	91 81       	ldd	r25, Z+1	; 0x01
    3aae:	8d 93       	st	X+, r24
    3ab0:	9c 93       	st	X, r25
    3ab2:	fe 01       	movw	r30, r28
    3ab4:	ed 59       	subi	r30, 0x9D	; 157
    3ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab8:	80 81       	ld	r24, Z
    3aba:	91 81       	ldd	r25, Z+1	; 0x01
    3abc:	01 97       	sbiw	r24, 0x01	; 1
    3abe:	f1 f7       	brne	.-4      	; 0x3abc <__stack+0x18bd>
    3ac0:	fe 01       	movw	r30, r28
    3ac2:	ed 59       	subi	r30, 0x9D	; 157
    3ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac6:	91 83       	std	Z+1, r25	; 0x01
    3ac8:	80 83       	st	Z, r24
	  _delay_ms(250);
	  servo_1(15);
    3aca:	8f e0       	ldi	r24, 0x0F	; 15
    3acc:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	e1 5a       	subi	r30, 0xA1	; 161
    3ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad6:	80 e0       	ldi	r24, 0x00	; 0
    3ad8:	90 e0       	ldi	r25, 0x00	; 0
    3ada:	a8 e4       	ldi	r26, 0x48	; 72
    3adc:	b2 e4       	ldi	r27, 0x42	; 66
    3ade:	80 83       	st	Z, r24
    3ae0:	91 83       	std	Z+1, r25	; 0x01
    3ae2:	a2 83       	std	Z+2, r26	; 0x02
    3ae4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ae6:	8e 01       	movw	r16, r28
    3ae8:	05 5a       	subi	r16, 0xA5	; 165
    3aea:	1f 4f       	sbci	r17, 0xFF	; 255
    3aec:	fe 01       	movw	r30, r28
    3aee:	e1 5a       	subi	r30, 0xA1	; 161
    3af0:	ff 4f       	sbci	r31, 0xFF	; 255
    3af2:	60 81       	ld	r22, Z
    3af4:	71 81       	ldd	r23, Z+1	; 0x01
    3af6:	82 81       	ldd	r24, Z+2	; 0x02
    3af8:	93 81       	ldd	r25, Z+3	; 0x03
    3afa:	26 e6       	ldi	r18, 0x66	; 102
    3afc:	36 e6       	ldi	r19, 0x66	; 102
    3afe:	46 e6       	ldi	r20, 0x66	; 102
    3b00:	55 e4       	ldi	r21, 0x45	; 69
    3b02:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3b06:	dc 01       	movw	r26, r24
    3b08:	cb 01       	movw	r24, r22
    3b0a:	f8 01       	movw	r30, r16
    3b0c:	80 83       	st	Z, r24
    3b0e:	91 83       	std	Z+1, r25	; 0x01
    3b10:	a2 83       	std	Z+2, r26	; 0x02
    3b12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b14:	fe 01       	movw	r30, r28
    3b16:	e5 5a       	subi	r30, 0xA5	; 165
    3b18:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1a:	60 81       	ld	r22, Z
    3b1c:	71 81       	ldd	r23, Z+1	; 0x01
    3b1e:	82 81       	ldd	r24, Z+2	; 0x02
    3b20:	93 81       	ldd	r25, Z+3	; 0x03
    3b22:	20 e0       	ldi	r18, 0x00	; 0
    3b24:	30 e0       	ldi	r19, 0x00	; 0
    3b26:	40 e8       	ldi	r20, 0x80	; 128
    3b28:	5f e3       	ldi	r21, 0x3F	; 63
    3b2a:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3b2e:	88 23       	and	r24, r24
    3b30:	44 f4       	brge	.+16     	; 0x3b42 <__stack+0x1943>
		__ticks = 1;
    3b32:	fe 01       	movw	r30, r28
    3b34:	e7 5a       	subi	r30, 0xA7	; 167
    3b36:	ff 4f       	sbci	r31, 0xFF	; 255
    3b38:	81 e0       	ldi	r24, 0x01	; 1
    3b3a:	90 e0       	ldi	r25, 0x00	; 0
    3b3c:	91 83       	std	Z+1, r25	; 0x01
    3b3e:	80 83       	st	Z, r24
    3b40:	64 c0       	rjmp	.+200    	; 0x3c0a <__stack+0x1a0b>
	else if (__tmp > 65535)
    3b42:	fe 01       	movw	r30, r28
    3b44:	e5 5a       	subi	r30, 0xA5	; 165
    3b46:	ff 4f       	sbci	r31, 0xFF	; 255
    3b48:	60 81       	ld	r22, Z
    3b4a:	71 81       	ldd	r23, Z+1	; 0x01
    3b4c:	82 81       	ldd	r24, Z+2	; 0x02
    3b4e:	93 81       	ldd	r25, Z+3	; 0x03
    3b50:	20 e0       	ldi	r18, 0x00	; 0
    3b52:	3f ef       	ldi	r19, 0xFF	; 255
    3b54:	4f e7       	ldi	r20, 0x7F	; 127
    3b56:	57 e4       	ldi	r21, 0x47	; 71
    3b58:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3b5c:	18 16       	cp	r1, r24
    3b5e:	0c f0       	brlt	.+2      	; 0x3b62 <__stack+0x1963>
    3b60:	43 c0       	rjmp	.+134    	; 0x3be8 <__stack+0x19e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b62:	fe 01       	movw	r30, r28
    3b64:	e1 5a       	subi	r30, 0xA1	; 161
    3b66:	ff 4f       	sbci	r31, 0xFF	; 255
    3b68:	60 81       	ld	r22, Z
    3b6a:	71 81       	ldd	r23, Z+1	; 0x01
    3b6c:	82 81       	ldd	r24, Z+2	; 0x02
    3b6e:	93 81       	ldd	r25, Z+3	; 0x03
    3b70:	20 e0       	ldi	r18, 0x00	; 0
    3b72:	30 e0       	ldi	r19, 0x00	; 0
    3b74:	40 e2       	ldi	r20, 0x20	; 32
    3b76:	51 e4       	ldi	r21, 0x41	; 65
    3b78:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3b7c:	dc 01       	movw	r26, r24
    3b7e:	cb 01       	movw	r24, r22
    3b80:	8e 01       	movw	r16, r28
    3b82:	07 5a       	subi	r16, 0xA7	; 167
    3b84:	1f 4f       	sbci	r17, 0xFF	; 255
    3b86:	bc 01       	movw	r22, r24
    3b88:	cd 01       	movw	r24, r26
    3b8a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3b8e:	dc 01       	movw	r26, r24
    3b90:	cb 01       	movw	r24, r22
    3b92:	f8 01       	movw	r30, r16
    3b94:	91 83       	std	Z+1, r25	; 0x01
    3b96:	80 83       	st	Z, r24
    3b98:	1f c0       	rjmp	.+62     	; 0x3bd8 <__stack+0x19d9>
    3b9a:	fe 01       	movw	r30, r28
    3b9c:	e9 5a       	subi	r30, 0xA9	; 169
    3b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba0:	80 e7       	ldi	r24, 0x70	; 112
    3ba2:	91 e0       	ldi	r25, 0x01	; 1
    3ba4:	91 83       	std	Z+1, r25	; 0x01
    3ba6:	80 83       	st	Z, r24
    3ba8:	fe 01       	movw	r30, r28
    3baa:	e9 5a       	subi	r30, 0xA9	; 169
    3bac:	ff 4f       	sbci	r31, 0xFF	; 255
    3bae:	80 81       	ld	r24, Z
    3bb0:	91 81       	ldd	r25, Z+1	; 0x01
    3bb2:	01 97       	sbiw	r24, 0x01	; 1
    3bb4:	f1 f7       	brne	.-4      	; 0x3bb2 <__stack+0x19b3>
    3bb6:	fe 01       	movw	r30, r28
    3bb8:	e9 5a       	subi	r30, 0xA9	; 169
    3bba:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbc:	91 83       	std	Z+1, r25	; 0x01
    3bbe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bc0:	de 01       	movw	r26, r28
    3bc2:	a7 5a       	subi	r26, 0xA7	; 167
    3bc4:	bf 4f       	sbci	r27, 0xFF	; 255
    3bc6:	fe 01       	movw	r30, r28
    3bc8:	e7 5a       	subi	r30, 0xA7	; 167
    3bca:	ff 4f       	sbci	r31, 0xFF	; 255
    3bcc:	80 81       	ld	r24, Z
    3bce:	91 81       	ldd	r25, Z+1	; 0x01
    3bd0:	01 97       	sbiw	r24, 0x01	; 1
    3bd2:	11 96       	adiw	r26, 0x01	; 1
    3bd4:	9c 93       	st	X, r25
    3bd6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bd8:	fe 01       	movw	r30, r28
    3bda:	e7 5a       	subi	r30, 0xA7	; 167
    3bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bde:	80 81       	ld	r24, Z
    3be0:	91 81       	ldd	r25, Z+1	; 0x01
    3be2:	00 97       	sbiw	r24, 0x00	; 0
    3be4:	d1 f6       	brne	.-76     	; 0x3b9a <__stack+0x199b>
    3be6:	27 c0       	rjmp	.+78     	; 0x3c36 <__stack+0x1a37>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3be8:	8e 01       	movw	r16, r28
    3bea:	07 5a       	subi	r16, 0xA7	; 167
    3bec:	1f 4f       	sbci	r17, 0xFF	; 255
    3bee:	fe 01       	movw	r30, r28
    3bf0:	e5 5a       	subi	r30, 0xA5	; 165
    3bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf4:	60 81       	ld	r22, Z
    3bf6:	71 81       	ldd	r23, Z+1	; 0x01
    3bf8:	82 81       	ldd	r24, Z+2	; 0x02
    3bfa:	93 81       	ldd	r25, Z+3	; 0x03
    3bfc:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3c00:	dc 01       	movw	r26, r24
    3c02:	cb 01       	movw	r24, r22
    3c04:	f8 01       	movw	r30, r16
    3c06:	91 83       	std	Z+1, r25	; 0x01
    3c08:	80 83       	st	Z, r24
    3c0a:	de 01       	movw	r26, r28
    3c0c:	ab 5a       	subi	r26, 0xAB	; 171
    3c0e:	bf 4f       	sbci	r27, 0xFF	; 255
    3c10:	fe 01       	movw	r30, r28
    3c12:	e7 5a       	subi	r30, 0xA7	; 167
    3c14:	ff 4f       	sbci	r31, 0xFF	; 255
    3c16:	80 81       	ld	r24, Z
    3c18:	91 81       	ldd	r25, Z+1	; 0x01
    3c1a:	8d 93       	st	X+, r24
    3c1c:	9c 93       	st	X, r25
    3c1e:	fe 01       	movw	r30, r28
    3c20:	eb 5a       	subi	r30, 0xAB	; 171
    3c22:	ff 4f       	sbci	r31, 0xFF	; 255
    3c24:	80 81       	ld	r24, Z
    3c26:	91 81       	ldd	r25, Z+1	; 0x01
    3c28:	01 97       	sbiw	r24, 0x01	; 1
    3c2a:	f1 f7       	brne	.-4      	; 0x3c28 <__stack+0x1a29>
    3c2c:	fe 01       	movw	r30, r28
    3c2e:	eb 5a       	subi	r30, 0xAB	; 171
    3c30:	ff 4f       	sbci	r31, 0xFF	; 255
    3c32:	91 83       	std	Z+1, r25	; 0x01
    3c34:	80 83       	st	Z, r24
	  _delay_ms(50);
	  servo_2(90);
    3c36:	8a e5       	ldi	r24, 0x5A	; 90
    3c38:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>

		}

		if(data == 0x38)
    3c3c:	fe 01       	movw	r30, r28
    3c3e:	eb 5e       	subi	r30, 0xEB	; 235
    3c40:	fd 4f       	sbci	r31, 0xFD	; 253
    3c42:	80 81       	ld	r24, Z
    3c44:	88 33       	cpi	r24, 0x38	; 56
    3c46:	09 f0       	breq	.+2      	; 0x3c4a <__stack+0x1a4b>
    3c48:	44 c1       	rjmp	.+648    	; 0x3ed2 <__stack+0x1cd3>
		{
	//drop_buffer();
      servo_3(120);
    3c4a:	88 e7       	ldi	r24, 0x78	; 120
    3c4c:	0e 94 9c 04 	call	0x938	; 0x938 <servo_3>
    3c50:	fe 01       	movw	r30, r28
    3c52:	ef 5a       	subi	r30, 0xAF	; 175
    3c54:	ff 4f       	sbci	r31, 0xFF	; 255
    3c56:	80 e0       	ldi	r24, 0x00	; 0
    3c58:	90 e0       	ldi	r25, 0x00	; 0
    3c5a:	a8 ec       	ldi	r26, 0xC8	; 200
    3c5c:	b2 e4       	ldi	r27, 0x42	; 66
    3c5e:	80 83       	st	Z, r24
    3c60:	91 83       	std	Z+1, r25	; 0x01
    3c62:	a2 83       	std	Z+2, r26	; 0x02
    3c64:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c66:	8e 01       	movw	r16, r28
    3c68:	03 5b       	subi	r16, 0xB3	; 179
    3c6a:	1f 4f       	sbci	r17, 0xFF	; 255
    3c6c:	fe 01       	movw	r30, r28
    3c6e:	ef 5a       	subi	r30, 0xAF	; 175
    3c70:	ff 4f       	sbci	r31, 0xFF	; 255
    3c72:	60 81       	ld	r22, Z
    3c74:	71 81       	ldd	r23, Z+1	; 0x01
    3c76:	82 81       	ldd	r24, Z+2	; 0x02
    3c78:	93 81       	ldd	r25, Z+3	; 0x03
    3c7a:	26 e6       	ldi	r18, 0x66	; 102
    3c7c:	36 e6       	ldi	r19, 0x66	; 102
    3c7e:	46 e6       	ldi	r20, 0x66	; 102
    3c80:	55 e4       	ldi	r21, 0x45	; 69
    3c82:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3c86:	dc 01       	movw	r26, r24
    3c88:	cb 01       	movw	r24, r22
    3c8a:	f8 01       	movw	r30, r16
    3c8c:	80 83       	st	Z, r24
    3c8e:	91 83       	std	Z+1, r25	; 0x01
    3c90:	a2 83       	std	Z+2, r26	; 0x02
    3c92:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c94:	fe 01       	movw	r30, r28
    3c96:	e3 5b       	subi	r30, 0xB3	; 179
    3c98:	ff 4f       	sbci	r31, 0xFF	; 255
    3c9a:	60 81       	ld	r22, Z
    3c9c:	71 81       	ldd	r23, Z+1	; 0x01
    3c9e:	82 81       	ldd	r24, Z+2	; 0x02
    3ca0:	93 81       	ldd	r25, Z+3	; 0x03
    3ca2:	20 e0       	ldi	r18, 0x00	; 0
    3ca4:	30 e0       	ldi	r19, 0x00	; 0
    3ca6:	40 e8       	ldi	r20, 0x80	; 128
    3ca8:	5f e3       	ldi	r21, 0x3F	; 63
    3caa:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3cae:	88 23       	and	r24, r24
    3cb0:	44 f4       	brge	.+16     	; 0x3cc2 <__stack+0x1ac3>
		__ticks = 1;
    3cb2:	fe 01       	movw	r30, r28
    3cb4:	e5 5b       	subi	r30, 0xB5	; 181
    3cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb8:	81 e0       	ldi	r24, 0x01	; 1
    3cba:	90 e0       	ldi	r25, 0x00	; 0
    3cbc:	91 83       	std	Z+1, r25	; 0x01
    3cbe:	80 83       	st	Z, r24
    3cc0:	64 c0       	rjmp	.+200    	; 0x3d8a <__stack+0x1b8b>
	else if (__tmp > 65535)
    3cc2:	fe 01       	movw	r30, r28
    3cc4:	e3 5b       	subi	r30, 0xB3	; 179
    3cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc8:	60 81       	ld	r22, Z
    3cca:	71 81       	ldd	r23, Z+1	; 0x01
    3ccc:	82 81       	ldd	r24, Z+2	; 0x02
    3cce:	93 81       	ldd	r25, Z+3	; 0x03
    3cd0:	20 e0       	ldi	r18, 0x00	; 0
    3cd2:	3f ef       	ldi	r19, 0xFF	; 255
    3cd4:	4f e7       	ldi	r20, 0x7F	; 127
    3cd6:	57 e4       	ldi	r21, 0x47	; 71
    3cd8:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3cdc:	18 16       	cp	r1, r24
    3cde:	0c f0       	brlt	.+2      	; 0x3ce2 <__stack+0x1ae3>
    3ce0:	43 c0       	rjmp	.+134    	; 0x3d68 <__stack+0x1b69>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ce2:	fe 01       	movw	r30, r28
    3ce4:	ef 5a       	subi	r30, 0xAF	; 175
    3ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce8:	60 81       	ld	r22, Z
    3cea:	71 81       	ldd	r23, Z+1	; 0x01
    3cec:	82 81       	ldd	r24, Z+2	; 0x02
    3cee:	93 81       	ldd	r25, Z+3	; 0x03
    3cf0:	20 e0       	ldi	r18, 0x00	; 0
    3cf2:	30 e0       	ldi	r19, 0x00	; 0
    3cf4:	40 e2       	ldi	r20, 0x20	; 32
    3cf6:	51 e4       	ldi	r21, 0x41	; 65
    3cf8:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3cfc:	dc 01       	movw	r26, r24
    3cfe:	cb 01       	movw	r24, r22
    3d00:	8e 01       	movw	r16, r28
    3d02:	05 5b       	subi	r16, 0xB5	; 181
    3d04:	1f 4f       	sbci	r17, 0xFF	; 255
    3d06:	bc 01       	movw	r22, r24
    3d08:	cd 01       	movw	r24, r26
    3d0a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3d0e:	dc 01       	movw	r26, r24
    3d10:	cb 01       	movw	r24, r22
    3d12:	f8 01       	movw	r30, r16
    3d14:	91 83       	std	Z+1, r25	; 0x01
    3d16:	80 83       	st	Z, r24
    3d18:	1f c0       	rjmp	.+62     	; 0x3d58 <__stack+0x1b59>
    3d1a:	fe 01       	movw	r30, r28
    3d1c:	e7 5b       	subi	r30, 0xB7	; 183
    3d1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d20:	80 e7       	ldi	r24, 0x70	; 112
    3d22:	91 e0       	ldi	r25, 0x01	; 1
    3d24:	91 83       	std	Z+1, r25	; 0x01
    3d26:	80 83       	st	Z, r24
    3d28:	fe 01       	movw	r30, r28
    3d2a:	e7 5b       	subi	r30, 0xB7	; 183
    3d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2e:	80 81       	ld	r24, Z
    3d30:	91 81       	ldd	r25, Z+1	; 0x01
    3d32:	01 97       	sbiw	r24, 0x01	; 1
    3d34:	f1 f7       	brne	.-4      	; 0x3d32 <__stack+0x1b33>
    3d36:	fe 01       	movw	r30, r28
    3d38:	e7 5b       	subi	r30, 0xB7	; 183
    3d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d3c:	91 83       	std	Z+1, r25	; 0x01
    3d3e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d40:	de 01       	movw	r26, r28
    3d42:	a5 5b       	subi	r26, 0xB5	; 181
    3d44:	bf 4f       	sbci	r27, 0xFF	; 255
    3d46:	fe 01       	movw	r30, r28
    3d48:	e5 5b       	subi	r30, 0xB5	; 181
    3d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d4c:	80 81       	ld	r24, Z
    3d4e:	91 81       	ldd	r25, Z+1	; 0x01
    3d50:	01 97       	sbiw	r24, 0x01	; 1
    3d52:	11 96       	adiw	r26, 0x01	; 1
    3d54:	9c 93       	st	X, r25
    3d56:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d58:	fe 01       	movw	r30, r28
    3d5a:	e5 5b       	subi	r30, 0xB5	; 181
    3d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d5e:	80 81       	ld	r24, Z
    3d60:	91 81       	ldd	r25, Z+1	; 0x01
    3d62:	00 97       	sbiw	r24, 0x00	; 0
    3d64:	d1 f6       	brne	.-76     	; 0x3d1a <__stack+0x1b1b>
    3d66:	27 c0       	rjmp	.+78     	; 0x3db6 <__stack+0x1bb7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d68:	8e 01       	movw	r16, r28
    3d6a:	05 5b       	subi	r16, 0xB5	; 181
    3d6c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d6e:	fe 01       	movw	r30, r28
    3d70:	e3 5b       	subi	r30, 0xB3	; 179
    3d72:	ff 4f       	sbci	r31, 0xFF	; 255
    3d74:	60 81       	ld	r22, Z
    3d76:	71 81       	ldd	r23, Z+1	; 0x01
    3d78:	82 81       	ldd	r24, Z+2	; 0x02
    3d7a:	93 81       	ldd	r25, Z+3	; 0x03
    3d7c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3d80:	dc 01       	movw	r26, r24
    3d82:	cb 01       	movw	r24, r22
    3d84:	f8 01       	movw	r30, r16
    3d86:	91 83       	std	Z+1, r25	; 0x01
    3d88:	80 83       	st	Z, r24
    3d8a:	de 01       	movw	r26, r28
    3d8c:	a9 5b       	subi	r26, 0xB9	; 185
    3d8e:	bf 4f       	sbci	r27, 0xFF	; 255
    3d90:	fe 01       	movw	r30, r28
    3d92:	e5 5b       	subi	r30, 0xB5	; 181
    3d94:	ff 4f       	sbci	r31, 0xFF	; 255
    3d96:	80 81       	ld	r24, Z
    3d98:	91 81       	ldd	r25, Z+1	; 0x01
    3d9a:	8d 93       	st	X+, r24
    3d9c:	9c 93       	st	X, r25
    3d9e:	fe 01       	movw	r30, r28
    3da0:	e9 5b       	subi	r30, 0xB9	; 185
    3da2:	ff 4f       	sbci	r31, 0xFF	; 255
    3da4:	80 81       	ld	r24, Z
    3da6:	91 81       	ldd	r25, Z+1	; 0x01
    3da8:	01 97       	sbiw	r24, 0x01	; 1
    3daa:	f1 f7       	brne	.-4      	; 0x3da8 <__stack+0x1ba9>
    3dac:	fe 01       	movw	r30, r28
    3dae:	e9 5b       	subi	r30, 0xB9	; 185
    3db0:	ff 4f       	sbci	r31, 0xFF	; 255
    3db2:	91 83       	std	Z+1, r25	; 0x01
    3db4:	80 83       	st	Z, r24
	  _delay_ms(100);
	  servo_1(15);
    3db6:	8f e0       	ldi	r24, 0x0F	; 15
    3db8:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
	  servo_2(0);
    3dbc:	80 e0       	ldi	r24, 0x00	; 0
    3dbe:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    3dc2:	fe 01       	movw	r30, r28
    3dc4:	ed 5b       	subi	r30, 0xBD	; 189
    3dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc8:	80 e0       	ldi	r24, 0x00	; 0
    3dca:	90 e0       	ldi	r25, 0x00	; 0
    3dcc:	a6 e1       	ldi	r26, 0x16	; 22
    3dce:	b3 e4       	ldi	r27, 0x43	; 67
    3dd0:	80 83       	st	Z, r24
    3dd2:	91 83       	std	Z+1, r25	; 0x01
    3dd4:	a2 83       	std	Z+2, r26	; 0x02
    3dd6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dd8:	8e 01       	movw	r16, r28
    3dda:	01 5c       	subi	r16, 0xC1	; 193
    3ddc:	1f 4f       	sbci	r17, 0xFF	; 255
    3dde:	fe 01       	movw	r30, r28
    3de0:	ed 5b       	subi	r30, 0xBD	; 189
    3de2:	ff 4f       	sbci	r31, 0xFF	; 255
    3de4:	60 81       	ld	r22, Z
    3de6:	71 81       	ldd	r23, Z+1	; 0x01
    3de8:	82 81       	ldd	r24, Z+2	; 0x02
    3dea:	93 81       	ldd	r25, Z+3	; 0x03
    3dec:	26 e6       	ldi	r18, 0x66	; 102
    3dee:	36 e6       	ldi	r19, 0x66	; 102
    3df0:	46 e6       	ldi	r20, 0x66	; 102
    3df2:	55 e4       	ldi	r21, 0x45	; 69
    3df4:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3df8:	dc 01       	movw	r26, r24
    3dfa:	cb 01       	movw	r24, r22
    3dfc:	f8 01       	movw	r30, r16
    3dfe:	80 83       	st	Z, r24
    3e00:	91 83       	std	Z+1, r25	; 0x01
    3e02:	a2 83       	std	Z+2, r26	; 0x02
    3e04:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e06:	fe 01       	movw	r30, r28
    3e08:	ff 96       	adiw	r30, 0x3f	; 63
    3e0a:	60 81       	ld	r22, Z
    3e0c:	71 81       	ldd	r23, Z+1	; 0x01
    3e0e:	82 81       	ldd	r24, Z+2	; 0x02
    3e10:	93 81       	ldd	r25, Z+3	; 0x03
    3e12:	20 e0       	ldi	r18, 0x00	; 0
    3e14:	30 e0       	ldi	r19, 0x00	; 0
    3e16:	40 e8       	ldi	r20, 0x80	; 128
    3e18:	5f e3       	ldi	r21, 0x3F	; 63
    3e1a:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3e1e:	88 23       	and	r24, r24
    3e20:	2c f4       	brge	.+10     	; 0x3e2c <__stack+0x1c2d>
		__ticks = 1;
    3e22:	81 e0       	ldi	r24, 0x01	; 1
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	9e af       	std	Y+62, r25	; 0x3e
    3e28:	8d af       	std	Y+61, r24	; 0x3d
    3e2a:	46 c0       	rjmp	.+140    	; 0x3eb8 <__stack+0x1cb9>
	else if (__tmp > 65535)
    3e2c:	fe 01       	movw	r30, r28
    3e2e:	ff 96       	adiw	r30, 0x3f	; 63
    3e30:	60 81       	ld	r22, Z
    3e32:	71 81       	ldd	r23, Z+1	; 0x01
    3e34:	82 81       	ldd	r24, Z+2	; 0x02
    3e36:	93 81       	ldd	r25, Z+3	; 0x03
    3e38:	20 e0       	ldi	r18, 0x00	; 0
    3e3a:	3f ef       	ldi	r19, 0xFF	; 255
    3e3c:	4f e7       	ldi	r20, 0x7F	; 127
    3e3e:	57 e4       	ldi	r21, 0x47	; 71
    3e40:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3e44:	18 16       	cp	r1, r24
    3e46:	64 f5       	brge	.+88     	; 0x3ea0 <__stack+0x1ca1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e48:	fe 01       	movw	r30, r28
    3e4a:	ed 5b       	subi	r30, 0xBD	; 189
    3e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4e:	60 81       	ld	r22, Z
    3e50:	71 81       	ldd	r23, Z+1	; 0x01
    3e52:	82 81       	ldd	r24, Z+2	; 0x02
    3e54:	93 81       	ldd	r25, Z+3	; 0x03
    3e56:	20 e0       	ldi	r18, 0x00	; 0
    3e58:	30 e0       	ldi	r19, 0x00	; 0
    3e5a:	40 e2       	ldi	r20, 0x20	; 32
    3e5c:	51 e4       	ldi	r21, 0x41	; 65
    3e5e:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3e62:	dc 01       	movw	r26, r24
    3e64:	cb 01       	movw	r24, r22
    3e66:	bc 01       	movw	r22, r24
    3e68:	cd 01       	movw	r24, r26
    3e6a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3e6e:	dc 01       	movw	r26, r24
    3e70:	cb 01       	movw	r24, r22
    3e72:	9e af       	std	Y+62, r25	; 0x3e
    3e74:	8d af       	std	Y+61, r24	; 0x3d
    3e76:	0f c0       	rjmp	.+30     	; 0x3e96 <__stack+0x1c97>
    3e78:	80 e7       	ldi	r24, 0x70	; 112
    3e7a:	91 e0       	ldi	r25, 0x01	; 1
    3e7c:	9c af       	std	Y+60, r25	; 0x3c
    3e7e:	8b af       	std	Y+59, r24	; 0x3b
    3e80:	8b ad       	ldd	r24, Y+59	; 0x3b
    3e82:	9c ad       	ldd	r25, Y+60	; 0x3c
    3e84:	01 97       	sbiw	r24, 0x01	; 1
    3e86:	f1 f7       	brne	.-4      	; 0x3e84 <__stack+0x1c85>
    3e88:	9c af       	std	Y+60, r25	; 0x3c
    3e8a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e8c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e8e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e90:	01 97       	sbiw	r24, 0x01	; 1
    3e92:	9e af       	std	Y+62, r25	; 0x3e
    3e94:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e96:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e98:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e9a:	00 97       	sbiw	r24, 0x00	; 0
    3e9c:	69 f7       	brne	.-38     	; 0x3e78 <__stack+0x1c79>
    3e9e:	16 c0       	rjmp	.+44     	; 0x3ecc <__stack+0x1ccd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ea0:	fe 01       	movw	r30, r28
    3ea2:	ff 96       	adiw	r30, 0x3f	; 63
    3ea4:	60 81       	ld	r22, Z
    3ea6:	71 81       	ldd	r23, Z+1	; 0x01
    3ea8:	82 81       	ldd	r24, Z+2	; 0x02
    3eaa:	93 81       	ldd	r25, Z+3	; 0x03
    3eac:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3eb0:	dc 01       	movw	r26, r24
    3eb2:	cb 01       	movw	r24, r22
    3eb4:	9e af       	std	Y+62, r25	; 0x3e
    3eb6:	8d af       	std	Y+61, r24	; 0x3d
    3eb8:	8d ad       	ldd	r24, Y+61	; 0x3d
    3eba:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ebc:	9a af       	std	Y+58, r25	; 0x3a
    3ebe:	89 af       	std	Y+57, r24	; 0x39
    3ec0:	89 ad       	ldd	r24, Y+57	; 0x39
    3ec2:	9a ad       	ldd	r25, Y+58	; 0x3a
    3ec4:	01 97       	sbiw	r24, 0x01	; 1
    3ec6:	f1 f7       	brne	.-4      	; 0x3ec4 <__stack+0x1cc5>
    3ec8:	9a af       	std	Y+58, r25	; 0x3a
    3eca:	89 af       	std	Y+57, r24	; 0x39
	  _delay_ms(150);
	  servo_1(90);
    3ecc:	8a e5       	ldi	r24, 0x5A	; 90
    3ece:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>

		}
		if(data== 0x39)
    3ed2:	fe 01       	movw	r30, r28
    3ed4:	eb 5e       	subi	r30, 0xEB	; 235
    3ed6:	fd 4f       	sbci	r31, 0xFD	; 253
    3ed8:	80 81       	ld	r24, Z
    3eda:	89 33       	cpi	r24, 0x39	; 57
    3edc:	09 f0       	breq	.+2      	; 0x3ee0 <__stack+0x1ce1>
    3ede:	da c1       	rjmp	.+948    	; 0x4294 <__stack+0x2095>
		{
    //drop_storage();
	  servo_3(120);
    3ee0:	88 e7       	ldi	r24, 0x78	; 120
    3ee2:	0e 94 9c 04 	call	0x938	; 0x938 <servo_3>
		servo_1(90);
    3ee6:	8a e5       	ldi	r24, 0x5A	; 90
    3ee8:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
		servo_2(180);
    3eec:	84 eb       	ldi	r24, 0xB4	; 180
    3eee:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    3ef2:	80 e0       	ldi	r24, 0x00	; 0
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	aa e7       	ldi	r26, 0x7A	; 122
    3ef8:	b3 e4       	ldi	r27, 0x43	; 67
    3efa:	8d ab       	std	Y+53, r24	; 0x35
    3efc:	9e ab       	std	Y+54, r25	; 0x36
    3efe:	af ab       	std	Y+55, r26	; 0x37
    3f00:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f02:	6d a9       	ldd	r22, Y+53	; 0x35
    3f04:	7e a9       	ldd	r23, Y+54	; 0x36
    3f06:	8f a9       	ldd	r24, Y+55	; 0x37
    3f08:	98 ad       	ldd	r25, Y+56	; 0x38
    3f0a:	26 e6       	ldi	r18, 0x66	; 102
    3f0c:	36 e6       	ldi	r19, 0x66	; 102
    3f0e:	46 e6       	ldi	r20, 0x66	; 102
    3f10:	55 e4       	ldi	r21, 0x45	; 69
    3f12:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3f16:	dc 01       	movw	r26, r24
    3f18:	cb 01       	movw	r24, r22
    3f1a:	89 ab       	std	Y+49, r24	; 0x31
    3f1c:	9a ab       	std	Y+50, r25	; 0x32
    3f1e:	ab ab       	std	Y+51, r26	; 0x33
    3f20:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3f22:	69 a9       	ldd	r22, Y+49	; 0x31
    3f24:	7a a9       	ldd	r23, Y+50	; 0x32
    3f26:	8b a9       	ldd	r24, Y+51	; 0x33
    3f28:	9c a9       	ldd	r25, Y+52	; 0x34
    3f2a:	20 e0       	ldi	r18, 0x00	; 0
    3f2c:	30 e0       	ldi	r19, 0x00	; 0
    3f2e:	40 e8       	ldi	r20, 0x80	; 128
    3f30:	5f e3       	ldi	r21, 0x3F	; 63
    3f32:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    3f36:	88 23       	and	r24, r24
    3f38:	2c f4       	brge	.+10     	; 0x3f44 <__stack+0x1d45>
		__ticks = 1;
    3f3a:	81 e0       	ldi	r24, 0x01	; 1
    3f3c:	90 e0       	ldi	r25, 0x00	; 0
    3f3e:	98 ab       	std	Y+48, r25	; 0x30
    3f40:	8f a7       	std	Y+47, r24	; 0x2f
    3f42:	3f c0       	rjmp	.+126    	; 0x3fc2 <__stack+0x1dc3>
	else if (__tmp > 65535)
    3f44:	69 a9       	ldd	r22, Y+49	; 0x31
    3f46:	7a a9       	ldd	r23, Y+50	; 0x32
    3f48:	8b a9       	ldd	r24, Y+51	; 0x33
    3f4a:	9c a9       	ldd	r25, Y+52	; 0x34
    3f4c:	20 e0       	ldi	r18, 0x00	; 0
    3f4e:	3f ef       	ldi	r19, 0xFF	; 255
    3f50:	4f e7       	ldi	r20, 0x7F	; 127
    3f52:	57 e4       	ldi	r21, 0x47	; 71
    3f54:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    3f58:	18 16       	cp	r1, r24
    3f5a:	4c f5       	brge	.+82     	; 0x3fae <__stack+0x1daf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f5c:	6d a9       	ldd	r22, Y+53	; 0x35
    3f5e:	7e a9       	ldd	r23, Y+54	; 0x36
    3f60:	8f a9       	ldd	r24, Y+55	; 0x37
    3f62:	98 ad       	ldd	r25, Y+56	; 0x38
    3f64:	20 e0       	ldi	r18, 0x00	; 0
    3f66:	30 e0       	ldi	r19, 0x00	; 0
    3f68:	40 e2       	ldi	r20, 0x20	; 32
    3f6a:	51 e4       	ldi	r21, 0x41	; 65
    3f6c:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    3f70:	dc 01       	movw	r26, r24
    3f72:	cb 01       	movw	r24, r22
    3f74:	bc 01       	movw	r22, r24
    3f76:	cd 01       	movw	r24, r26
    3f78:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3f7c:	dc 01       	movw	r26, r24
    3f7e:	cb 01       	movw	r24, r22
    3f80:	98 ab       	std	Y+48, r25	; 0x30
    3f82:	8f a7       	std	Y+47, r24	; 0x2f
    3f84:	0f c0       	rjmp	.+30     	; 0x3fa4 <__stack+0x1da5>
    3f86:	80 e7       	ldi	r24, 0x70	; 112
    3f88:	91 e0       	ldi	r25, 0x01	; 1
    3f8a:	9e a7       	std	Y+46, r25	; 0x2e
    3f8c:	8d a7       	std	Y+45, r24	; 0x2d
    3f8e:	8d a5       	ldd	r24, Y+45	; 0x2d
    3f90:	9e a5       	ldd	r25, Y+46	; 0x2e
    3f92:	01 97       	sbiw	r24, 0x01	; 1
    3f94:	f1 f7       	brne	.-4      	; 0x3f92 <__stack+0x1d93>
    3f96:	9e a7       	std	Y+46, r25	; 0x2e
    3f98:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f9a:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f9c:	98 a9       	ldd	r25, Y+48	; 0x30
    3f9e:	01 97       	sbiw	r24, 0x01	; 1
    3fa0:	98 ab       	std	Y+48, r25	; 0x30
    3fa2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fa4:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fa6:	98 a9       	ldd	r25, Y+48	; 0x30
    3fa8:	00 97       	sbiw	r24, 0x00	; 0
    3faa:	69 f7       	brne	.-38     	; 0x3f86 <__stack+0x1d87>
    3fac:	14 c0       	rjmp	.+40     	; 0x3fd6 <__stack+0x1dd7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fae:	69 a9       	ldd	r22, Y+49	; 0x31
    3fb0:	7a a9       	ldd	r23, Y+50	; 0x32
    3fb2:	8b a9       	ldd	r24, Y+51	; 0x33
    3fb4:	9c a9       	ldd	r25, Y+52	; 0x34
    3fb6:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    3fba:	dc 01       	movw	r26, r24
    3fbc:	cb 01       	movw	r24, r22
    3fbe:	98 ab       	std	Y+48, r25	; 0x30
    3fc0:	8f a7       	std	Y+47, r24	; 0x2f
    3fc2:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fc4:	98 a9       	ldd	r25, Y+48	; 0x30
    3fc6:	9c a7       	std	Y+44, r25	; 0x2c
    3fc8:	8b a7       	std	Y+43, r24	; 0x2b
    3fca:	8b a5       	ldd	r24, Y+43	; 0x2b
    3fcc:	9c a5       	ldd	r25, Y+44	; 0x2c
    3fce:	01 97       	sbiw	r24, 0x01	; 1
    3fd0:	f1 f7       	brne	.-4      	; 0x3fce <__stack+0x1dcf>
    3fd2:	9c a7       	std	Y+44, r25	; 0x2c
    3fd4:	8b a7       	std	Y+43, r24	; 0x2b
	  _delay_ms(250);
	   servo_1(15);
    3fd6:	8f e0       	ldi	r24, 0x0F	; 15
    3fd8:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
    3fdc:	80 e0       	ldi	r24, 0x00	; 0
    3fde:	90 e0       	ldi	r25, 0x00	; 0
    3fe0:	a8 e4       	ldi	r26, 0x48	; 72
    3fe2:	b2 e4       	ldi	r27, 0x42	; 66
    3fe4:	8f a3       	std	Y+39, r24	; 0x27
    3fe6:	98 a7       	std	Y+40, r25	; 0x28
    3fe8:	a9 a7       	std	Y+41, r26	; 0x29
    3fea:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fec:	6f a1       	ldd	r22, Y+39	; 0x27
    3fee:	78 a5       	ldd	r23, Y+40	; 0x28
    3ff0:	89 a5       	ldd	r24, Y+41	; 0x29
    3ff2:	9a a5       	ldd	r25, Y+42	; 0x2a
    3ff4:	26 e6       	ldi	r18, 0x66	; 102
    3ff6:	36 e6       	ldi	r19, 0x66	; 102
    3ff8:	46 e6       	ldi	r20, 0x66	; 102
    3ffa:	55 e4       	ldi	r21, 0x45	; 69
    3ffc:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    4000:	dc 01       	movw	r26, r24
    4002:	cb 01       	movw	r24, r22
    4004:	8b a3       	std	Y+35, r24	; 0x23
    4006:	9c a3       	std	Y+36, r25	; 0x24
    4008:	ad a3       	std	Y+37, r26	; 0x25
    400a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    400c:	6b a1       	ldd	r22, Y+35	; 0x23
    400e:	7c a1       	ldd	r23, Y+36	; 0x24
    4010:	8d a1       	ldd	r24, Y+37	; 0x25
    4012:	9e a1       	ldd	r25, Y+38	; 0x26
    4014:	20 e0       	ldi	r18, 0x00	; 0
    4016:	30 e0       	ldi	r19, 0x00	; 0
    4018:	40 e8       	ldi	r20, 0x80	; 128
    401a:	5f e3       	ldi	r21, 0x3F	; 63
    401c:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    4020:	88 23       	and	r24, r24
    4022:	2c f4       	brge	.+10     	; 0x402e <__stack+0x1e2f>
		__ticks = 1;
    4024:	81 e0       	ldi	r24, 0x01	; 1
    4026:	90 e0       	ldi	r25, 0x00	; 0
    4028:	9a a3       	std	Y+34, r25	; 0x22
    402a:	89 a3       	std	Y+33, r24	; 0x21
    402c:	3f c0       	rjmp	.+126    	; 0x40ac <__stack+0x1ead>
	else if (__tmp > 65535)
    402e:	6b a1       	ldd	r22, Y+35	; 0x23
    4030:	7c a1       	ldd	r23, Y+36	; 0x24
    4032:	8d a1       	ldd	r24, Y+37	; 0x25
    4034:	9e a1       	ldd	r25, Y+38	; 0x26
    4036:	20 e0       	ldi	r18, 0x00	; 0
    4038:	3f ef       	ldi	r19, 0xFF	; 255
    403a:	4f e7       	ldi	r20, 0x7F	; 127
    403c:	57 e4       	ldi	r21, 0x47	; 71
    403e:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    4042:	18 16       	cp	r1, r24
    4044:	4c f5       	brge	.+82     	; 0x4098 <__stack+0x1e99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4046:	6f a1       	ldd	r22, Y+39	; 0x27
    4048:	78 a5       	ldd	r23, Y+40	; 0x28
    404a:	89 a5       	ldd	r24, Y+41	; 0x29
    404c:	9a a5       	ldd	r25, Y+42	; 0x2a
    404e:	20 e0       	ldi	r18, 0x00	; 0
    4050:	30 e0       	ldi	r19, 0x00	; 0
    4052:	40 e2       	ldi	r20, 0x20	; 32
    4054:	51 e4       	ldi	r21, 0x41	; 65
    4056:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    405a:	dc 01       	movw	r26, r24
    405c:	cb 01       	movw	r24, r22
    405e:	bc 01       	movw	r22, r24
    4060:	cd 01       	movw	r24, r26
    4062:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    4066:	dc 01       	movw	r26, r24
    4068:	cb 01       	movw	r24, r22
    406a:	9a a3       	std	Y+34, r25	; 0x22
    406c:	89 a3       	std	Y+33, r24	; 0x21
    406e:	0f c0       	rjmp	.+30     	; 0x408e <__stack+0x1e8f>
    4070:	80 e7       	ldi	r24, 0x70	; 112
    4072:	91 e0       	ldi	r25, 0x01	; 1
    4074:	98 a3       	std	Y+32, r25	; 0x20
    4076:	8f 8f       	std	Y+31, r24	; 0x1f
    4078:	8f 8d       	ldd	r24, Y+31	; 0x1f
    407a:	98 a1       	ldd	r25, Y+32	; 0x20
    407c:	01 97       	sbiw	r24, 0x01	; 1
    407e:	f1 f7       	brne	.-4      	; 0x407c <__stack+0x1e7d>
    4080:	98 a3       	std	Y+32, r25	; 0x20
    4082:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4084:	89 a1       	ldd	r24, Y+33	; 0x21
    4086:	9a a1       	ldd	r25, Y+34	; 0x22
    4088:	01 97       	sbiw	r24, 0x01	; 1
    408a:	9a a3       	std	Y+34, r25	; 0x22
    408c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    408e:	89 a1       	ldd	r24, Y+33	; 0x21
    4090:	9a a1       	ldd	r25, Y+34	; 0x22
    4092:	00 97       	sbiw	r24, 0x00	; 0
    4094:	69 f7       	brne	.-38     	; 0x4070 <__stack+0x1e71>
    4096:	14 c0       	rjmp	.+40     	; 0x40c0 <__stack+0x1ec1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4098:	6b a1       	ldd	r22, Y+35	; 0x23
    409a:	7c a1       	ldd	r23, Y+36	; 0x24
    409c:	8d a1       	ldd	r24, Y+37	; 0x25
    409e:	9e a1       	ldd	r25, Y+38	; 0x26
    40a0:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    40a4:	dc 01       	movw	r26, r24
    40a6:	cb 01       	movw	r24, r22
    40a8:	9a a3       	std	Y+34, r25	; 0x22
    40aa:	89 a3       	std	Y+33, r24	; 0x21
    40ac:	89 a1       	ldd	r24, Y+33	; 0x21
    40ae:	9a a1       	ldd	r25, Y+34	; 0x22
    40b0:	9e 8f       	std	Y+30, r25	; 0x1e
    40b2:	8d 8f       	std	Y+29, r24	; 0x1d
    40b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    40b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    40b8:	01 97       	sbiw	r24, 0x01	; 1
    40ba:	f1 f7       	brne	.-4      	; 0x40b8 <__stack+0x1eb9>
    40bc:	9e 8f       	std	Y+30, r25	; 0x1e
    40be:	8d 8f       	std	Y+29, r24	; 0x1d
	  _delay_ms(50);
	   servo_2(0);
    40c0:	80 e0       	ldi	r24, 0x00	; 0
    40c2:	0e 94 4e 04 	call	0x89c	; 0x89c <servo_2>
    40c6:	80 e0       	ldi	r24, 0x00	; 0
    40c8:	90 e0       	ldi	r25, 0x00	; 0
    40ca:	aa e7       	ldi	r26, 0x7A	; 122
    40cc:	b3 e4       	ldi	r27, 0x43	; 67
    40ce:	89 8f       	std	Y+25, r24	; 0x19
    40d0:	9a 8f       	std	Y+26, r25	; 0x1a
    40d2:	ab 8f       	std	Y+27, r26	; 0x1b
    40d4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40d6:	69 8d       	ldd	r22, Y+25	; 0x19
    40d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    40da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    40dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    40de:	26 e6       	ldi	r18, 0x66	; 102
    40e0:	36 e6       	ldi	r19, 0x66	; 102
    40e2:	46 e6       	ldi	r20, 0x66	; 102
    40e4:	55 e4       	ldi	r21, 0x45	; 69
    40e6:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    40ea:	dc 01       	movw	r26, r24
    40ec:	cb 01       	movw	r24, r22
    40ee:	8d 8b       	std	Y+21, r24	; 0x15
    40f0:	9e 8b       	std	Y+22, r25	; 0x16
    40f2:	af 8b       	std	Y+23, r26	; 0x17
    40f4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    40f6:	6d 89       	ldd	r22, Y+21	; 0x15
    40f8:	7e 89       	ldd	r23, Y+22	; 0x16
    40fa:	8f 89       	ldd	r24, Y+23	; 0x17
    40fc:	98 8d       	ldd	r25, Y+24	; 0x18
    40fe:	20 e0       	ldi	r18, 0x00	; 0
    4100:	30 e0       	ldi	r19, 0x00	; 0
    4102:	40 e8       	ldi	r20, 0x80	; 128
    4104:	5f e3       	ldi	r21, 0x3F	; 63
    4106:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    410a:	88 23       	and	r24, r24
    410c:	2c f4       	brge	.+10     	; 0x4118 <__stack+0x1f19>
		__ticks = 1;
    410e:	81 e0       	ldi	r24, 0x01	; 1
    4110:	90 e0       	ldi	r25, 0x00	; 0
    4112:	9c 8b       	std	Y+20, r25	; 0x14
    4114:	8b 8b       	std	Y+19, r24	; 0x13
    4116:	3f c0       	rjmp	.+126    	; 0x4196 <__stack+0x1f97>
	else if (__tmp > 65535)
    4118:	6d 89       	ldd	r22, Y+21	; 0x15
    411a:	7e 89       	ldd	r23, Y+22	; 0x16
    411c:	8f 89       	ldd	r24, Y+23	; 0x17
    411e:	98 8d       	ldd	r25, Y+24	; 0x18
    4120:	20 e0       	ldi	r18, 0x00	; 0
    4122:	3f ef       	ldi	r19, 0xFF	; 255
    4124:	4f e7       	ldi	r20, 0x7F	; 127
    4126:	57 e4       	ldi	r21, 0x47	; 71
    4128:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    412c:	18 16       	cp	r1, r24
    412e:	4c f5       	brge	.+82     	; 0x4182 <__stack+0x1f83>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4130:	69 8d       	ldd	r22, Y+25	; 0x19
    4132:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4134:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4136:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4138:	20 e0       	ldi	r18, 0x00	; 0
    413a:	30 e0       	ldi	r19, 0x00	; 0
    413c:	40 e2       	ldi	r20, 0x20	; 32
    413e:	51 e4       	ldi	r21, 0x41	; 65
    4140:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    4144:	dc 01       	movw	r26, r24
    4146:	cb 01       	movw	r24, r22
    4148:	bc 01       	movw	r22, r24
    414a:	cd 01       	movw	r24, r26
    414c:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    4150:	dc 01       	movw	r26, r24
    4152:	cb 01       	movw	r24, r22
    4154:	9c 8b       	std	Y+20, r25	; 0x14
    4156:	8b 8b       	std	Y+19, r24	; 0x13
    4158:	0f c0       	rjmp	.+30     	; 0x4178 <__stack+0x1f79>
    415a:	80 e7       	ldi	r24, 0x70	; 112
    415c:	91 e0       	ldi	r25, 0x01	; 1
    415e:	9a 8b       	std	Y+18, r25	; 0x12
    4160:	89 8b       	std	Y+17, r24	; 0x11
    4162:	89 89       	ldd	r24, Y+17	; 0x11
    4164:	9a 89       	ldd	r25, Y+18	; 0x12
    4166:	01 97       	sbiw	r24, 0x01	; 1
    4168:	f1 f7       	brne	.-4      	; 0x4166 <__stack+0x1f67>
    416a:	9a 8b       	std	Y+18, r25	; 0x12
    416c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    416e:	8b 89       	ldd	r24, Y+19	; 0x13
    4170:	9c 89       	ldd	r25, Y+20	; 0x14
    4172:	01 97       	sbiw	r24, 0x01	; 1
    4174:	9c 8b       	std	Y+20, r25	; 0x14
    4176:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4178:	8b 89       	ldd	r24, Y+19	; 0x13
    417a:	9c 89       	ldd	r25, Y+20	; 0x14
    417c:	00 97       	sbiw	r24, 0x00	; 0
    417e:	69 f7       	brne	.-38     	; 0x415a <__stack+0x1f5b>
    4180:	14 c0       	rjmp	.+40     	; 0x41aa <__stack+0x1fab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4182:	6d 89       	ldd	r22, Y+21	; 0x15
    4184:	7e 89       	ldd	r23, Y+22	; 0x16
    4186:	8f 89       	ldd	r24, Y+23	; 0x17
    4188:	98 8d       	ldd	r25, Y+24	; 0x18
    418a:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    418e:	dc 01       	movw	r26, r24
    4190:	cb 01       	movw	r24, r22
    4192:	9c 8b       	std	Y+20, r25	; 0x14
    4194:	8b 8b       	std	Y+19, r24	; 0x13
    4196:	8b 89       	ldd	r24, Y+19	; 0x13
    4198:	9c 89       	ldd	r25, Y+20	; 0x14
    419a:	98 8b       	std	Y+16, r25	; 0x10
    419c:	8f 87       	std	Y+15, r24	; 0x0f
    419e:	8f 85       	ldd	r24, Y+15	; 0x0f
    41a0:	98 89       	ldd	r25, Y+16	; 0x10
    41a2:	01 97       	sbiw	r24, 0x01	; 1
    41a4:	f1 f7       	brne	.-4      	; 0x41a2 <__stack+0x1fa3>
    41a6:	98 8b       	std	Y+16, r25	; 0x10
    41a8:	8f 87       	std	Y+15, r24	; 0x0f
	  _delay_ms(250);
	    servo_1(90);
    41aa:	8a e5       	ldi	r24, 0x5A	; 90
    41ac:	0e 94 00 04 	call	0x800	; 0x800 <servo_1>
    41b0:	80 e0       	ldi	r24, 0x00	; 0
    41b2:	90 e0       	ldi	r25, 0x00	; 0
    41b4:	aa ef       	ldi	r26, 0xFA	; 250
    41b6:	b3 e4       	ldi	r27, 0x43	; 67
    41b8:	8b 87       	std	Y+11, r24	; 0x0b
    41ba:	9c 87       	std	Y+12, r25	; 0x0c
    41bc:	ad 87       	std	Y+13, r26	; 0x0d
    41be:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    41c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    41c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    41c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    41c8:	26 e6       	ldi	r18, 0x66	; 102
    41ca:	36 e6       	ldi	r19, 0x66	; 102
    41cc:	46 e6       	ldi	r20, 0x66	; 102
    41ce:	55 e4       	ldi	r21, 0x45	; 69
    41d0:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    41d4:	dc 01       	movw	r26, r24
    41d6:	cb 01       	movw	r24, r22
    41d8:	8f 83       	std	Y+7, r24	; 0x07
    41da:	98 87       	std	Y+8, r25	; 0x08
    41dc:	a9 87       	std	Y+9, r26	; 0x09
    41de:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    41e0:	6f 81       	ldd	r22, Y+7	; 0x07
    41e2:	78 85       	ldd	r23, Y+8	; 0x08
    41e4:	89 85       	ldd	r24, Y+9	; 0x09
    41e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    41e8:	20 e0       	ldi	r18, 0x00	; 0
    41ea:	30 e0       	ldi	r19, 0x00	; 0
    41ec:	40 e8       	ldi	r20, 0x80	; 128
    41ee:	5f e3       	ldi	r21, 0x3F	; 63
    41f0:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <__ltsf2>
    41f4:	88 23       	and	r24, r24
    41f6:	2c f4       	brge	.+10     	; 0x4202 <__stack+0x2003>
		__ticks = 1;
    41f8:	81 e0       	ldi	r24, 0x01	; 1
    41fa:	90 e0       	ldi	r25, 0x00	; 0
    41fc:	9e 83       	std	Y+6, r25	; 0x06
    41fe:	8d 83       	std	Y+5, r24	; 0x05
    4200:	3f c0       	rjmp	.+126    	; 0x4280 <__stack+0x2081>
	else if (__tmp > 65535)
    4202:	6f 81       	ldd	r22, Y+7	; 0x07
    4204:	78 85       	ldd	r23, Y+8	; 0x08
    4206:	89 85       	ldd	r24, Y+9	; 0x09
    4208:	9a 85       	ldd	r25, Y+10	; 0x0a
    420a:	20 e0       	ldi	r18, 0x00	; 0
    420c:	3f ef       	ldi	r19, 0xFF	; 255
    420e:	4f e7       	ldi	r20, 0x7F	; 127
    4210:	57 e4       	ldi	r21, 0x47	; 71
    4212:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__gtsf2>
    4216:	18 16       	cp	r1, r24
    4218:	4c f5       	brge	.+82     	; 0x426c <__stack+0x206d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    421a:	6b 85       	ldd	r22, Y+11	; 0x0b
    421c:	7c 85       	ldd	r23, Y+12	; 0x0c
    421e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4220:	9e 85       	ldd	r25, Y+14	; 0x0e
    4222:	20 e0       	ldi	r18, 0x00	; 0
    4224:	30 e0       	ldi	r19, 0x00	; 0
    4226:	40 e2       	ldi	r20, 0x20	; 32
    4228:	51 e4       	ldi	r21, 0x41	; 65
    422a:	0e 94 90 23 	call	0x4720	; 0x4720 <__mulsf3>
    422e:	dc 01       	movw	r26, r24
    4230:	cb 01       	movw	r24, r22
    4232:	bc 01       	movw	r22, r24
    4234:	cd 01       	movw	r24, r26
    4236:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    423a:	dc 01       	movw	r26, r24
    423c:	cb 01       	movw	r24, r22
    423e:	9e 83       	std	Y+6, r25	; 0x06
    4240:	8d 83       	std	Y+5, r24	; 0x05
    4242:	0f c0       	rjmp	.+30     	; 0x4262 <__stack+0x2063>
    4244:	80 e7       	ldi	r24, 0x70	; 112
    4246:	91 e0       	ldi	r25, 0x01	; 1
    4248:	9c 83       	std	Y+4, r25	; 0x04
    424a:	8b 83       	std	Y+3, r24	; 0x03
    424c:	8b 81       	ldd	r24, Y+3	; 0x03
    424e:	9c 81       	ldd	r25, Y+4	; 0x04
    4250:	01 97       	sbiw	r24, 0x01	; 1
    4252:	f1 f7       	brne	.-4      	; 0x4250 <__stack+0x2051>
    4254:	9c 83       	std	Y+4, r25	; 0x04
    4256:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4258:	8d 81       	ldd	r24, Y+5	; 0x05
    425a:	9e 81       	ldd	r25, Y+6	; 0x06
    425c:	01 97       	sbiw	r24, 0x01	; 1
    425e:	9e 83       	std	Y+6, r25	; 0x06
    4260:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4262:	8d 81       	ldd	r24, Y+5	; 0x05
    4264:	9e 81       	ldd	r25, Y+6	; 0x06
    4266:	00 97       	sbiw	r24, 0x00	; 0
    4268:	69 f7       	brne	.-38     	; 0x4244 <__stack+0x2045>
    426a:	14 c0       	rjmp	.+40     	; 0x4294 <__stack+0x2095>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    426c:	6f 81       	ldd	r22, Y+7	; 0x07
    426e:	78 85       	ldd	r23, Y+8	; 0x08
    4270:	89 85       	ldd	r24, Y+9	; 0x09
    4272:	9a 85       	ldd	r25, Y+10	; 0x0a
    4274:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fixunssfsi>
    4278:	dc 01       	movw	r26, r24
    427a:	cb 01       	movw	r24, r22
    427c:	9e 83       	std	Y+6, r25	; 0x06
    427e:	8d 83       	std	Y+5, r24	; 0x05
    4280:	8d 81       	ldd	r24, Y+5	; 0x05
    4282:	9e 81       	ldd	r25, Y+6	; 0x06
    4284:	9a 83       	std	Y+2, r25	; 0x02
    4286:	89 83       	std	Y+1, r24	; 0x01
    4288:	89 81       	ldd	r24, Y+1	; 0x01
    428a:	9a 81       	ldd	r25, Y+2	; 0x02
    428c:	01 97       	sbiw	r24, 0x01	; 1
    428e:	f1 f7       	brne	.-4      	; 0x428c <__stack+0x208d>
    4290:	9a 83       	std	Y+2, r25	; 0x02
    4292:	89 83       	std	Y+1, r24	; 0x01
	  
	  
	  
		}

}
    4294:	cb 5e       	subi	r28, 0xEB	; 235
    4296:	dd 4f       	sbci	r29, 0xFD	; 253
    4298:	0f b6       	in	r0, 0x3f	; 63
    429a:	f8 94       	cli
    429c:	de bf       	out	0x3e, r29	; 62
    429e:	0f be       	out	0x3f, r0	; 63
    42a0:	cd bf       	out	0x3d, r28	; 61
    42a2:	cf 91       	pop	r28
    42a4:	df 91       	pop	r29
    42a6:	1f 91       	pop	r17
    42a8:	0f 91       	pop	r16
    42aa:	08 95       	ret

000042ac <uart0_init>:
// desired baud rate:9600
// actual baud rate:9600 (error 0.0%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
    42ac:	df 93       	push	r29
    42ae:	cf 93       	push	r28
    42b0:	cd b7       	in	r28, 0x3d	; 61
    42b2:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
    42b4:	e1 ec       	ldi	r30, 0xC1	; 193
    42b6:	f0 e0       	ldi	r31, 0x00	; 0
    42b8:	10 82       	st	Z, r1
 UCSR0A = 0x00;
    42ba:	e0 ec       	ldi	r30, 0xC0	; 192
    42bc:	f0 e0       	ldi	r31, 0x00	; 0
    42be:	10 82       	st	Z, r1
 UCSR0C = 0x06;
    42c0:	e2 ec       	ldi	r30, 0xC2	; 194
    42c2:	f0 e0       	ldi	r31, 0x00	; 0
    42c4:	86 e0       	ldi	r24, 0x06	; 6
    42c6:	80 83       	st	Z, r24
 UBRR0L = 0x5F; //set baud rate lo
    42c8:	e4 ec       	ldi	r30, 0xC4	; 196
    42ca:	f0 e0       	ldi	r31, 0x00	; 0
    42cc:	8f e5       	ldi	r24, 0x5F	; 95
    42ce:	80 83       	st	Z, r24
 UBRR0H = 0x00; //set baud rate hi
    42d0:	e5 ec       	ldi	r30, 0xC5	; 197
    42d2:	f0 e0       	ldi	r31, 0x00	; 0
    42d4:	10 82       	st	Z, r1
 UCSR0B = 0x98;
    42d6:	e1 ec       	ldi	r30, 0xC1	; 193
    42d8:	f0 e0       	ldi	r31, 0x00	; 0
    42da:	88 e9       	ldi	r24, 0x98	; 152
    42dc:	80 83       	st	Z, r24
}
    42de:	cf 91       	pop	r28
    42e0:	df 91       	pop	r29
    42e2:	08 95       	ret

000042e4 <__vector_25>:

SIGNAL(SIG_USART0_RECV) 		// ISR for receive complete interrupt) 
{
    42e4:	1f 92       	push	r1
    42e6:	0f 92       	push	r0
    42e8:	0f b6       	in	r0, 0x3f	; 63
    42ea:	0f 92       	push	r0
    42ec:	00 90 5b 00 	lds	r0, 0x005B
    42f0:	0f 92       	push	r0
    42f2:	11 24       	eor	r1, r1
    42f4:	8f 93       	push	r24
    42f6:	ef 93       	push	r30
    42f8:	ff 93       	push	r31
    42fa:	df 93       	push	r29
    42fc:	cf 93       	push	r28
    42fe:	cd b7       	in	r28, 0x3d	; 61
    4300:	de b7       	in	r29, 0x3e	; 62
	data = UDR0; 				//making copy of data from UDR0 in 'data' variable
    4302:	e6 ec       	ldi	r30, 0xC6	; 198
    4304:	f0 e0       	ldi	r31, 0x00	; 0
    4306:	80 81       	ld	r24, Z
    4308:	80 93 08 03 	sts	0x0308, r24
	UDR0 = data;				//echo data back to PC
    430c:	e6 ec       	ldi	r30, 0xC6	; 198
    430e:	f0 e0       	ldi	r31, 0x00	; 0
    4310:	80 91 08 03 	lds	r24, 0x0308
    4314:	80 83       	st	Z, r24
}
    4316:	cf 91       	pop	r28
    4318:	df 91       	pop	r29
    431a:	ff 91       	pop	r31
    431c:	ef 91       	pop	r30
    431e:	8f 91       	pop	r24
    4320:	0f 90       	pop	r0
    4322:	00 92 5b 00 	sts	0x005B, r0
    4326:	0f 90       	pop	r0
    4328:	0f be       	out	0x3f, r0	; 63
    432a:	0f 90       	pop	r0
    432c:	1f 90       	pop	r1
    432e:	18 95       	reti

00004330 <init_devices>:


//Function To Initialize all The Devices
void init_devices()
{
    4330:	df 93       	push	r29
    4332:	cf 93       	push	r28
    4334:	cd b7       	in	r28, 0x3d	; 61
    4336:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupts
    4338:	f8 94       	cli
 port_init();  //Initializes all the ports
    433a:	0e 94 36 01 	call	0x26c	; 0x26c <port_init>
 uart0_init(); //Initailize UART1 for serial communiaction
    433e:	0e 94 56 21 	call	0x42ac	; 0x42ac <uart0_init>
 timer5_init();	//TIMER 5 for PWM CONTROL OF MOTORS
    4342:	0e 94 cf 01 	call	0x39e	; 0x39e <timer5_init>
 timer1_init(); //TIMER 1 for SERVO PWM
    4346:	0e 94 4d 03 	call	0x69a	; 0x69a <timer1_init>
 left_position_encoder_interrupt_init();
    434a:	0e 94 4b 01 	call	0x296	; 0x296 <left_position_encoder_interrupt_init>
 right_position_encoder_interrupt_init();
    434e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <right_position_encoder_interrupt_init>
 port_init();
    4352:	0e 94 36 01 	call	0x26c	; 0x26c <port_init>
 sei(); //re-enable interrupts
    4356:	78 94       	sei

}
    4358:	cf 91       	pop	r28
    435a:	df 91       	pop	r29
    435c:	08 95       	ret

0000435e <main>:



//Main Function
int main(void)
{
    435e:	df 93       	push	r29
    4360:	cf 93       	push	r28
    4362:	cd b7       	in	r28, 0x3d	; 61
    4364:	de b7       	in	r29, 0x3e	; 62
	init_devices();
    4366:	0e 94 98 21 	call	0x4330	; 0x4330 <init_devices>
	while(1)
	{
	run(data);
    436a:	80 91 08 03 	lds	r24, 0x0308
    436e:	0e 94 22 05 	call	0xa44	; 0xa44 <run>
    4372:	fb cf       	rjmp	.-10     	; 0x436a <main+0xc>

00004374 <__fixunssfsi>:
    4374:	ef 92       	push	r14
    4376:	ff 92       	push	r15
    4378:	0f 93       	push	r16
    437a:	1f 93       	push	r17
    437c:	7b 01       	movw	r14, r22
    437e:	8c 01       	movw	r16, r24
    4380:	20 e0       	ldi	r18, 0x00	; 0
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	40 e0       	ldi	r20, 0x00	; 0
    4386:	5f e4       	ldi	r21, 0x4F	; 79
    4388:	0e 94 66 25 	call	0x4acc	; 0x4acc <__gesf2>
    438c:	88 23       	and	r24, r24
    438e:	8c f0       	brlt	.+34     	; 0x43b2 <__fixunssfsi+0x3e>
    4390:	c8 01       	movw	r24, r16
    4392:	b7 01       	movw	r22, r14
    4394:	20 e0       	ldi	r18, 0x00	; 0
    4396:	30 e0       	ldi	r19, 0x00	; 0
    4398:	40 e0       	ldi	r20, 0x00	; 0
    439a:	5f e4       	ldi	r21, 0x4F	; 79
    439c:	0e 94 32 23 	call	0x4664	; 0x4664 <__subsf3>
    43a0:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <__fixsfsi>
    43a4:	9b 01       	movw	r18, r22
    43a6:	ac 01       	movw	r20, r24
    43a8:	20 50       	subi	r18, 0x00	; 0
    43aa:	30 40       	sbci	r19, 0x00	; 0
    43ac:	40 40       	sbci	r20, 0x00	; 0
    43ae:	50 48       	sbci	r21, 0x80	; 128
    43b0:	06 c0       	rjmp	.+12     	; 0x43be <__fixunssfsi+0x4a>
    43b2:	c8 01       	movw	r24, r16
    43b4:	b7 01       	movw	r22, r14
    43b6:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <__fixsfsi>
    43ba:	9b 01       	movw	r18, r22
    43bc:	ac 01       	movw	r20, r24
    43be:	b9 01       	movw	r22, r18
    43c0:	ca 01       	movw	r24, r20
    43c2:	1f 91       	pop	r17
    43c4:	0f 91       	pop	r16
    43c6:	ff 90       	pop	r15
    43c8:	ef 90       	pop	r14
    43ca:	08 95       	ret

000043cc <_fpadd_parts>:
    43cc:	a0 e0       	ldi	r26, 0x00	; 0
    43ce:	b0 e0       	ldi	r27, 0x00	; 0
    43d0:	ec ee       	ldi	r30, 0xEC	; 236
    43d2:	f1 e2       	ldi	r31, 0x21	; 33
    43d4:	0c 94 88 28 	jmp	0x5110	; 0x5110 <__prologue_saves__>
    43d8:	dc 01       	movw	r26, r24
    43da:	2b 01       	movw	r4, r22
    43dc:	fa 01       	movw	r30, r20
    43de:	9c 91       	ld	r25, X
    43e0:	92 30       	cpi	r25, 0x02	; 2
    43e2:	08 f4       	brcc	.+2      	; 0x43e6 <_fpadd_parts+0x1a>
    43e4:	39 c1       	rjmp	.+626    	; 0x4658 <_fpadd_parts+0x28c>
    43e6:	eb 01       	movw	r28, r22
    43e8:	88 81       	ld	r24, Y
    43ea:	82 30       	cpi	r24, 0x02	; 2
    43ec:	08 f4       	brcc	.+2      	; 0x43f0 <_fpadd_parts+0x24>
    43ee:	33 c1       	rjmp	.+614    	; 0x4656 <_fpadd_parts+0x28a>
    43f0:	94 30       	cpi	r25, 0x04	; 4
    43f2:	69 f4       	brne	.+26     	; 0x440e <_fpadd_parts+0x42>
    43f4:	84 30       	cpi	r24, 0x04	; 4
    43f6:	09 f0       	breq	.+2      	; 0x43fa <_fpadd_parts+0x2e>
    43f8:	2f c1       	rjmp	.+606    	; 0x4658 <_fpadd_parts+0x28c>
    43fa:	11 96       	adiw	r26, 0x01	; 1
    43fc:	9c 91       	ld	r25, X
    43fe:	11 97       	sbiw	r26, 0x01	; 1
    4400:	89 81       	ldd	r24, Y+1	; 0x01
    4402:	98 17       	cp	r25, r24
    4404:	09 f4       	brne	.+2      	; 0x4408 <_fpadd_parts+0x3c>
    4406:	28 c1       	rjmp	.+592    	; 0x4658 <_fpadd_parts+0x28c>
    4408:	a0 e0       	ldi	r26, 0x00	; 0
    440a:	b2 e0       	ldi	r27, 0x02	; 2
    440c:	25 c1       	rjmp	.+586    	; 0x4658 <_fpadd_parts+0x28c>
    440e:	84 30       	cpi	r24, 0x04	; 4
    4410:	09 f4       	brne	.+2      	; 0x4414 <_fpadd_parts+0x48>
    4412:	21 c1       	rjmp	.+578    	; 0x4656 <_fpadd_parts+0x28a>
    4414:	82 30       	cpi	r24, 0x02	; 2
    4416:	a9 f4       	brne	.+42     	; 0x4442 <_fpadd_parts+0x76>
    4418:	92 30       	cpi	r25, 0x02	; 2
    441a:	09 f0       	breq	.+2      	; 0x441e <_fpadd_parts+0x52>
    441c:	1d c1       	rjmp	.+570    	; 0x4658 <_fpadd_parts+0x28c>
    441e:	9a 01       	movw	r18, r20
    4420:	ad 01       	movw	r20, r26
    4422:	88 e0       	ldi	r24, 0x08	; 8
    4424:	ea 01       	movw	r28, r20
    4426:	09 90       	ld	r0, Y+
    4428:	ae 01       	movw	r20, r28
    442a:	e9 01       	movw	r28, r18
    442c:	09 92       	st	Y+, r0
    442e:	9e 01       	movw	r18, r28
    4430:	81 50       	subi	r24, 0x01	; 1
    4432:	c1 f7       	brne	.-16     	; 0x4424 <_fpadd_parts+0x58>
    4434:	e2 01       	movw	r28, r4
    4436:	89 81       	ldd	r24, Y+1	; 0x01
    4438:	11 96       	adiw	r26, 0x01	; 1
    443a:	9c 91       	ld	r25, X
    443c:	89 23       	and	r24, r25
    443e:	81 83       	std	Z+1, r24	; 0x01
    4440:	08 c1       	rjmp	.+528    	; 0x4652 <_fpadd_parts+0x286>
    4442:	92 30       	cpi	r25, 0x02	; 2
    4444:	09 f4       	brne	.+2      	; 0x4448 <_fpadd_parts+0x7c>
    4446:	07 c1       	rjmp	.+526    	; 0x4656 <_fpadd_parts+0x28a>
    4448:	12 96       	adiw	r26, 0x02	; 2
    444a:	2d 90       	ld	r2, X+
    444c:	3c 90       	ld	r3, X
    444e:	13 97       	sbiw	r26, 0x03	; 3
    4450:	eb 01       	movw	r28, r22
    4452:	8a 81       	ldd	r24, Y+2	; 0x02
    4454:	9b 81       	ldd	r25, Y+3	; 0x03
    4456:	14 96       	adiw	r26, 0x04	; 4
    4458:	ad 90       	ld	r10, X+
    445a:	bd 90       	ld	r11, X+
    445c:	cd 90       	ld	r12, X+
    445e:	dc 90       	ld	r13, X
    4460:	17 97       	sbiw	r26, 0x07	; 7
    4462:	ec 80       	ldd	r14, Y+4	; 0x04
    4464:	fd 80       	ldd	r15, Y+5	; 0x05
    4466:	0e 81       	ldd	r16, Y+6	; 0x06
    4468:	1f 81       	ldd	r17, Y+7	; 0x07
    446a:	91 01       	movw	r18, r2
    446c:	28 1b       	sub	r18, r24
    446e:	39 0b       	sbc	r19, r25
    4470:	b9 01       	movw	r22, r18
    4472:	37 ff       	sbrs	r19, 7
    4474:	04 c0       	rjmp	.+8      	; 0x447e <_fpadd_parts+0xb2>
    4476:	66 27       	eor	r22, r22
    4478:	77 27       	eor	r23, r23
    447a:	62 1b       	sub	r22, r18
    447c:	73 0b       	sbc	r23, r19
    447e:	60 32       	cpi	r22, 0x20	; 32
    4480:	71 05       	cpc	r23, r1
    4482:	0c f0       	brlt	.+2      	; 0x4486 <_fpadd_parts+0xba>
    4484:	61 c0       	rjmp	.+194    	; 0x4548 <_fpadd_parts+0x17c>
    4486:	12 16       	cp	r1, r18
    4488:	13 06       	cpc	r1, r19
    448a:	6c f5       	brge	.+90     	; 0x44e6 <_fpadd_parts+0x11a>
    448c:	37 01       	movw	r6, r14
    448e:	48 01       	movw	r8, r16
    4490:	06 2e       	mov	r0, r22
    4492:	04 c0       	rjmp	.+8      	; 0x449c <_fpadd_parts+0xd0>
    4494:	96 94       	lsr	r9
    4496:	87 94       	ror	r8
    4498:	77 94       	ror	r7
    449a:	67 94       	ror	r6
    449c:	0a 94       	dec	r0
    449e:	d2 f7       	brpl	.-12     	; 0x4494 <_fpadd_parts+0xc8>
    44a0:	21 e0       	ldi	r18, 0x01	; 1
    44a2:	30 e0       	ldi	r19, 0x00	; 0
    44a4:	40 e0       	ldi	r20, 0x00	; 0
    44a6:	50 e0       	ldi	r21, 0x00	; 0
    44a8:	04 c0       	rjmp	.+8      	; 0x44b2 <_fpadd_parts+0xe6>
    44aa:	22 0f       	add	r18, r18
    44ac:	33 1f       	adc	r19, r19
    44ae:	44 1f       	adc	r20, r20
    44b0:	55 1f       	adc	r21, r21
    44b2:	6a 95       	dec	r22
    44b4:	d2 f7       	brpl	.-12     	; 0x44aa <_fpadd_parts+0xde>
    44b6:	21 50       	subi	r18, 0x01	; 1
    44b8:	30 40       	sbci	r19, 0x00	; 0
    44ba:	40 40       	sbci	r20, 0x00	; 0
    44bc:	50 40       	sbci	r21, 0x00	; 0
    44be:	2e 21       	and	r18, r14
    44c0:	3f 21       	and	r19, r15
    44c2:	40 23       	and	r20, r16
    44c4:	51 23       	and	r21, r17
    44c6:	21 15       	cp	r18, r1
    44c8:	31 05       	cpc	r19, r1
    44ca:	41 05       	cpc	r20, r1
    44cc:	51 05       	cpc	r21, r1
    44ce:	21 f0       	breq	.+8      	; 0x44d8 <_fpadd_parts+0x10c>
    44d0:	21 e0       	ldi	r18, 0x01	; 1
    44d2:	30 e0       	ldi	r19, 0x00	; 0
    44d4:	40 e0       	ldi	r20, 0x00	; 0
    44d6:	50 e0       	ldi	r21, 0x00	; 0
    44d8:	79 01       	movw	r14, r18
    44da:	8a 01       	movw	r16, r20
    44dc:	e6 28       	or	r14, r6
    44de:	f7 28       	or	r15, r7
    44e0:	08 29       	or	r16, r8
    44e2:	19 29       	or	r17, r9
    44e4:	3c c0       	rjmp	.+120    	; 0x455e <_fpadd_parts+0x192>
    44e6:	23 2b       	or	r18, r19
    44e8:	d1 f1       	breq	.+116    	; 0x455e <_fpadd_parts+0x192>
    44ea:	26 0e       	add	r2, r22
    44ec:	37 1e       	adc	r3, r23
    44ee:	35 01       	movw	r6, r10
    44f0:	46 01       	movw	r8, r12
    44f2:	06 2e       	mov	r0, r22
    44f4:	04 c0       	rjmp	.+8      	; 0x44fe <_fpadd_parts+0x132>
    44f6:	96 94       	lsr	r9
    44f8:	87 94       	ror	r8
    44fa:	77 94       	ror	r7
    44fc:	67 94       	ror	r6
    44fe:	0a 94       	dec	r0
    4500:	d2 f7       	brpl	.-12     	; 0x44f6 <_fpadd_parts+0x12a>
    4502:	21 e0       	ldi	r18, 0x01	; 1
    4504:	30 e0       	ldi	r19, 0x00	; 0
    4506:	40 e0       	ldi	r20, 0x00	; 0
    4508:	50 e0       	ldi	r21, 0x00	; 0
    450a:	04 c0       	rjmp	.+8      	; 0x4514 <_fpadd_parts+0x148>
    450c:	22 0f       	add	r18, r18
    450e:	33 1f       	adc	r19, r19
    4510:	44 1f       	adc	r20, r20
    4512:	55 1f       	adc	r21, r21
    4514:	6a 95       	dec	r22
    4516:	d2 f7       	brpl	.-12     	; 0x450c <_fpadd_parts+0x140>
    4518:	21 50       	subi	r18, 0x01	; 1
    451a:	30 40       	sbci	r19, 0x00	; 0
    451c:	40 40       	sbci	r20, 0x00	; 0
    451e:	50 40       	sbci	r21, 0x00	; 0
    4520:	2a 21       	and	r18, r10
    4522:	3b 21       	and	r19, r11
    4524:	4c 21       	and	r20, r12
    4526:	5d 21       	and	r21, r13
    4528:	21 15       	cp	r18, r1
    452a:	31 05       	cpc	r19, r1
    452c:	41 05       	cpc	r20, r1
    452e:	51 05       	cpc	r21, r1
    4530:	21 f0       	breq	.+8      	; 0x453a <_fpadd_parts+0x16e>
    4532:	21 e0       	ldi	r18, 0x01	; 1
    4534:	30 e0       	ldi	r19, 0x00	; 0
    4536:	40 e0       	ldi	r20, 0x00	; 0
    4538:	50 e0       	ldi	r21, 0x00	; 0
    453a:	59 01       	movw	r10, r18
    453c:	6a 01       	movw	r12, r20
    453e:	a6 28       	or	r10, r6
    4540:	b7 28       	or	r11, r7
    4542:	c8 28       	or	r12, r8
    4544:	d9 28       	or	r13, r9
    4546:	0b c0       	rjmp	.+22     	; 0x455e <_fpadd_parts+0x192>
    4548:	82 15       	cp	r24, r2
    454a:	93 05       	cpc	r25, r3
    454c:	2c f0       	brlt	.+10     	; 0x4558 <_fpadd_parts+0x18c>
    454e:	1c 01       	movw	r2, r24
    4550:	aa 24       	eor	r10, r10
    4552:	bb 24       	eor	r11, r11
    4554:	65 01       	movw	r12, r10
    4556:	03 c0       	rjmp	.+6      	; 0x455e <_fpadd_parts+0x192>
    4558:	ee 24       	eor	r14, r14
    455a:	ff 24       	eor	r15, r15
    455c:	87 01       	movw	r16, r14
    455e:	11 96       	adiw	r26, 0x01	; 1
    4560:	9c 91       	ld	r25, X
    4562:	d2 01       	movw	r26, r4
    4564:	11 96       	adiw	r26, 0x01	; 1
    4566:	8c 91       	ld	r24, X
    4568:	98 17       	cp	r25, r24
    456a:	09 f4       	brne	.+2      	; 0x456e <_fpadd_parts+0x1a2>
    456c:	45 c0       	rjmp	.+138    	; 0x45f8 <_fpadd_parts+0x22c>
    456e:	99 23       	and	r25, r25
    4570:	39 f0       	breq	.+14     	; 0x4580 <_fpadd_parts+0x1b4>
    4572:	a8 01       	movw	r20, r16
    4574:	97 01       	movw	r18, r14
    4576:	2a 19       	sub	r18, r10
    4578:	3b 09       	sbc	r19, r11
    457a:	4c 09       	sbc	r20, r12
    457c:	5d 09       	sbc	r21, r13
    457e:	06 c0       	rjmp	.+12     	; 0x458c <_fpadd_parts+0x1c0>
    4580:	a6 01       	movw	r20, r12
    4582:	95 01       	movw	r18, r10
    4584:	2e 19       	sub	r18, r14
    4586:	3f 09       	sbc	r19, r15
    4588:	40 0b       	sbc	r20, r16
    458a:	51 0b       	sbc	r21, r17
    458c:	57 fd       	sbrc	r21, 7
    458e:	08 c0       	rjmp	.+16     	; 0x45a0 <_fpadd_parts+0x1d4>
    4590:	11 82       	std	Z+1, r1	; 0x01
    4592:	33 82       	std	Z+3, r3	; 0x03
    4594:	22 82       	std	Z+2, r2	; 0x02
    4596:	24 83       	std	Z+4, r18	; 0x04
    4598:	35 83       	std	Z+5, r19	; 0x05
    459a:	46 83       	std	Z+6, r20	; 0x06
    459c:	57 83       	std	Z+7, r21	; 0x07
    459e:	1d c0       	rjmp	.+58     	; 0x45da <_fpadd_parts+0x20e>
    45a0:	81 e0       	ldi	r24, 0x01	; 1
    45a2:	81 83       	std	Z+1, r24	; 0x01
    45a4:	33 82       	std	Z+3, r3	; 0x03
    45a6:	22 82       	std	Z+2, r2	; 0x02
    45a8:	88 27       	eor	r24, r24
    45aa:	99 27       	eor	r25, r25
    45ac:	dc 01       	movw	r26, r24
    45ae:	82 1b       	sub	r24, r18
    45b0:	93 0b       	sbc	r25, r19
    45b2:	a4 0b       	sbc	r26, r20
    45b4:	b5 0b       	sbc	r27, r21
    45b6:	84 83       	std	Z+4, r24	; 0x04
    45b8:	95 83       	std	Z+5, r25	; 0x05
    45ba:	a6 83       	std	Z+6, r26	; 0x06
    45bc:	b7 83       	std	Z+7, r27	; 0x07
    45be:	0d c0       	rjmp	.+26     	; 0x45da <_fpadd_parts+0x20e>
    45c0:	22 0f       	add	r18, r18
    45c2:	33 1f       	adc	r19, r19
    45c4:	44 1f       	adc	r20, r20
    45c6:	55 1f       	adc	r21, r21
    45c8:	24 83       	std	Z+4, r18	; 0x04
    45ca:	35 83       	std	Z+5, r19	; 0x05
    45cc:	46 83       	std	Z+6, r20	; 0x06
    45ce:	57 83       	std	Z+7, r21	; 0x07
    45d0:	82 81       	ldd	r24, Z+2	; 0x02
    45d2:	93 81       	ldd	r25, Z+3	; 0x03
    45d4:	01 97       	sbiw	r24, 0x01	; 1
    45d6:	93 83       	std	Z+3, r25	; 0x03
    45d8:	82 83       	std	Z+2, r24	; 0x02
    45da:	24 81       	ldd	r18, Z+4	; 0x04
    45dc:	35 81       	ldd	r19, Z+5	; 0x05
    45de:	46 81       	ldd	r20, Z+6	; 0x06
    45e0:	57 81       	ldd	r21, Z+7	; 0x07
    45e2:	da 01       	movw	r26, r20
    45e4:	c9 01       	movw	r24, r18
    45e6:	01 97       	sbiw	r24, 0x01	; 1
    45e8:	a1 09       	sbc	r26, r1
    45ea:	b1 09       	sbc	r27, r1
    45ec:	8f 5f       	subi	r24, 0xFF	; 255
    45ee:	9f 4f       	sbci	r25, 0xFF	; 255
    45f0:	af 4f       	sbci	r26, 0xFF	; 255
    45f2:	bf 43       	sbci	r27, 0x3F	; 63
    45f4:	28 f3       	brcs	.-54     	; 0x45c0 <_fpadd_parts+0x1f4>
    45f6:	0b c0       	rjmp	.+22     	; 0x460e <_fpadd_parts+0x242>
    45f8:	91 83       	std	Z+1, r25	; 0x01
    45fa:	33 82       	std	Z+3, r3	; 0x03
    45fc:	22 82       	std	Z+2, r2	; 0x02
    45fe:	ea 0c       	add	r14, r10
    4600:	fb 1c       	adc	r15, r11
    4602:	0c 1d       	adc	r16, r12
    4604:	1d 1d       	adc	r17, r13
    4606:	e4 82       	std	Z+4, r14	; 0x04
    4608:	f5 82       	std	Z+5, r15	; 0x05
    460a:	06 83       	std	Z+6, r16	; 0x06
    460c:	17 83       	std	Z+7, r17	; 0x07
    460e:	83 e0       	ldi	r24, 0x03	; 3
    4610:	80 83       	st	Z, r24
    4612:	24 81       	ldd	r18, Z+4	; 0x04
    4614:	35 81       	ldd	r19, Z+5	; 0x05
    4616:	46 81       	ldd	r20, Z+6	; 0x06
    4618:	57 81       	ldd	r21, Z+7	; 0x07
    461a:	57 ff       	sbrs	r21, 7
    461c:	1a c0       	rjmp	.+52     	; 0x4652 <_fpadd_parts+0x286>
    461e:	c9 01       	movw	r24, r18
    4620:	aa 27       	eor	r26, r26
    4622:	97 fd       	sbrc	r25, 7
    4624:	a0 95       	com	r26
    4626:	ba 2f       	mov	r27, r26
    4628:	81 70       	andi	r24, 0x01	; 1
    462a:	90 70       	andi	r25, 0x00	; 0
    462c:	a0 70       	andi	r26, 0x00	; 0
    462e:	b0 70       	andi	r27, 0x00	; 0
    4630:	56 95       	lsr	r21
    4632:	47 95       	ror	r20
    4634:	37 95       	ror	r19
    4636:	27 95       	ror	r18
    4638:	82 2b       	or	r24, r18
    463a:	93 2b       	or	r25, r19
    463c:	a4 2b       	or	r26, r20
    463e:	b5 2b       	or	r27, r21
    4640:	84 83       	std	Z+4, r24	; 0x04
    4642:	95 83       	std	Z+5, r25	; 0x05
    4644:	a6 83       	std	Z+6, r26	; 0x06
    4646:	b7 83       	std	Z+7, r27	; 0x07
    4648:	82 81       	ldd	r24, Z+2	; 0x02
    464a:	93 81       	ldd	r25, Z+3	; 0x03
    464c:	01 96       	adiw	r24, 0x01	; 1
    464e:	93 83       	std	Z+3, r25	; 0x03
    4650:	82 83       	std	Z+2, r24	; 0x02
    4652:	df 01       	movw	r26, r30
    4654:	01 c0       	rjmp	.+2      	; 0x4658 <_fpadd_parts+0x28c>
    4656:	d2 01       	movw	r26, r4
    4658:	cd 01       	movw	r24, r26
    465a:	cd b7       	in	r28, 0x3d	; 61
    465c:	de b7       	in	r29, 0x3e	; 62
    465e:	e2 e1       	ldi	r30, 0x12	; 18
    4660:	0c 94 a4 28 	jmp	0x5148	; 0x5148 <__epilogue_restores__>

00004664 <__subsf3>:
    4664:	a0 e2       	ldi	r26, 0x20	; 32
    4666:	b0 e0       	ldi	r27, 0x00	; 0
    4668:	e8 e3       	ldi	r30, 0x38	; 56
    466a:	f3 e2       	ldi	r31, 0x23	; 35
    466c:	0c 94 94 28 	jmp	0x5128	; 0x5128 <__prologue_saves__+0x18>
    4670:	69 83       	std	Y+1, r22	; 0x01
    4672:	7a 83       	std	Y+2, r23	; 0x02
    4674:	8b 83       	std	Y+3, r24	; 0x03
    4676:	9c 83       	std	Y+4, r25	; 0x04
    4678:	2d 83       	std	Y+5, r18	; 0x05
    467a:	3e 83       	std	Y+6, r19	; 0x06
    467c:	4f 83       	std	Y+7, r20	; 0x07
    467e:	58 87       	std	Y+8, r21	; 0x08
    4680:	e9 e0       	ldi	r30, 0x09	; 9
    4682:	ee 2e       	mov	r14, r30
    4684:	f1 2c       	mov	r15, r1
    4686:	ec 0e       	add	r14, r28
    4688:	fd 1e       	adc	r15, r29
    468a:	ce 01       	movw	r24, r28
    468c:	01 96       	adiw	r24, 0x01	; 1
    468e:	b7 01       	movw	r22, r14
    4690:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4694:	8e 01       	movw	r16, r28
    4696:	0f 5e       	subi	r16, 0xEF	; 239
    4698:	1f 4f       	sbci	r17, 0xFF	; 255
    469a:	ce 01       	movw	r24, r28
    469c:	05 96       	adiw	r24, 0x05	; 5
    469e:	b8 01       	movw	r22, r16
    46a0:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    46a4:	8a 89       	ldd	r24, Y+18	; 0x12
    46a6:	91 e0       	ldi	r25, 0x01	; 1
    46a8:	89 27       	eor	r24, r25
    46aa:	8a 8b       	std	Y+18, r24	; 0x12
    46ac:	c7 01       	movw	r24, r14
    46ae:	b8 01       	movw	r22, r16
    46b0:	ae 01       	movw	r20, r28
    46b2:	47 5e       	subi	r20, 0xE7	; 231
    46b4:	5f 4f       	sbci	r21, 0xFF	; 255
    46b6:	0e 94 e6 21 	call	0x43cc	; 0x43cc <_fpadd_parts>
    46ba:	0e 94 e2 26 	call	0x4dc4	; 0x4dc4 <__pack_f>
    46be:	a0 96       	adiw	r28, 0x20	; 32
    46c0:	e6 e0       	ldi	r30, 0x06	; 6
    46c2:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__epilogue_restores__+0x18>

000046c6 <__addsf3>:
    46c6:	a0 e2       	ldi	r26, 0x20	; 32
    46c8:	b0 e0       	ldi	r27, 0x00	; 0
    46ca:	e9 e6       	ldi	r30, 0x69	; 105
    46cc:	f3 e2       	ldi	r31, 0x23	; 35
    46ce:	0c 94 94 28 	jmp	0x5128	; 0x5128 <__prologue_saves__+0x18>
    46d2:	69 83       	std	Y+1, r22	; 0x01
    46d4:	7a 83       	std	Y+2, r23	; 0x02
    46d6:	8b 83       	std	Y+3, r24	; 0x03
    46d8:	9c 83       	std	Y+4, r25	; 0x04
    46da:	2d 83       	std	Y+5, r18	; 0x05
    46dc:	3e 83       	std	Y+6, r19	; 0x06
    46de:	4f 83       	std	Y+7, r20	; 0x07
    46e0:	58 87       	std	Y+8, r21	; 0x08
    46e2:	f9 e0       	ldi	r31, 0x09	; 9
    46e4:	ef 2e       	mov	r14, r31
    46e6:	f1 2c       	mov	r15, r1
    46e8:	ec 0e       	add	r14, r28
    46ea:	fd 1e       	adc	r15, r29
    46ec:	ce 01       	movw	r24, r28
    46ee:	01 96       	adiw	r24, 0x01	; 1
    46f0:	b7 01       	movw	r22, r14
    46f2:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    46f6:	8e 01       	movw	r16, r28
    46f8:	0f 5e       	subi	r16, 0xEF	; 239
    46fa:	1f 4f       	sbci	r17, 0xFF	; 255
    46fc:	ce 01       	movw	r24, r28
    46fe:	05 96       	adiw	r24, 0x05	; 5
    4700:	b8 01       	movw	r22, r16
    4702:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4706:	c7 01       	movw	r24, r14
    4708:	b8 01       	movw	r22, r16
    470a:	ae 01       	movw	r20, r28
    470c:	47 5e       	subi	r20, 0xE7	; 231
    470e:	5f 4f       	sbci	r21, 0xFF	; 255
    4710:	0e 94 e6 21 	call	0x43cc	; 0x43cc <_fpadd_parts>
    4714:	0e 94 e2 26 	call	0x4dc4	; 0x4dc4 <__pack_f>
    4718:	a0 96       	adiw	r28, 0x20	; 32
    471a:	e6 e0       	ldi	r30, 0x06	; 6
    471c:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__epilogue_restores__+0x18>

00004720 <__mulsf3>:
    4720:	a0 e2       	ldi	r26, 0x20	; 32
    4722:	b0 e0       	ldi	r27, 0x00	; 0
    4724:	e6 e9       	ldi	r30, 0x96	; 150
    4726:	f3 e2       	ldi	r31, 0x23	; 35
    4728:	0c 94 88 28 	jmp	0x5110	; 0x5110 <__prologue_saves__>
    472c:	69 83       	std	Y+1, r22	; 0x01
    472e:	7a 83       	std	Y+2, r23	; 0x02
    4730:	8b 83       	std	Y+3, r24	; 0x03
    4732:	9c 83       	std	Y+4, r25	; 0x04
    4734:	2d 83       	std	Y+5, r18	; 0x05
    4736:	3e 83       	std	Y+6, r19	; 0x06
    4738:	4f 83       	std	Y+7, r20	; 0x07
    473a:	58 87       	std	Y+8, r21	; 0x08
    473c:	ce 01       	movw	r24, r28
    473e:	01 96       	adiw	r24, 0x01	; 1
    4740:	be 01       	movw	r22, r28
    4742:	67 5f       	subi	r22, 0xF7	; 247
    4744:	7f 4f       	sbci	r23, 0xFF	; 255
    4746:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    474a:	ce 01       	movw	r24, r28
    474c:	05 96       	adiw	r24, 0x05	; 5
    474e:	be 01       	movw	r22, r28
    4750:	6f 5e       	subi	r22, 0xEF	; 239
    4752:	7f 4f       	sbci	r23, 0xFF	; 255
    4754:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4758:	99 85       	ldd	r25, Y+9	; 0x09
    475a:	92 30       	cpi	r25, 0x02	; 2
    475c:	88 f0       	brcs	.+34     	; 0x4780 <__mulsf3+0x60>
    475e:	89 89       	ldd	r24, Y+17	; 0x11
    4760:	82 30       	cpi	r24, 0x02	; 2
    4762:	c8 f0       	brcs	.+50     	; 0x4796 <__mulsf3+0x76>
    4764:	94 30       	cpi	r25, 0x04	; 4
    4766:	19 f4       	brne	.+6      	; 0x476e <__mulsf3+0x4e>
    4768:	82 30       	cpi	r24, 0x02	; 2
    476a:	51 f4       	brne	.+20     	; 0x4780 <__mulsf3+0x60>
    476c:	04 c0       	rjmp	.+8      	; 0x4776 <__mulsf3+0x56>
    476e:	84 30       	cpi	r24, 0x04	; 4
    4770:	29 f4       	brne	.+10     	; 0x477c <__mulsf3+0x5c>
    4772:	92 30       	cpi	r25, 0x02	; 2
    4774:	81 f4       	brne	.+32     	; 0x4796 <__mulsf3+0x76>
    4776:	80 e0       	ldi	r24, 0x00	; 0
    4778:	92 e0       	ldi	r25, 0x02	; 2
    477a:	c6 c0       	rjmp	.+396    	; 0x4908 <__mulsf3+0x1e8>
    477c:	92 30       	cpi	r25, 0x02	; 2
    477e:	49 f4       	brne	.+18     	; 0x4792 <__mulsf3+0x72>
    4780:	20 e0       	ldi	r18, 0x00	; 0
    4782:	9a 85       	ldd	r25, Y+10	; 0x0a
    4784:	8a 89       	ldd	r24, Y+18	; 0x12
    4786:	98 13       	cpse	r25, r24
    4788:	21 e0       	ldi	r18, 0x01	; 1
    478a:	2a 87       	std	Y+10, r18	; 0x0a
    478c:	ce 01       	movw	r24, r28
    478e:	09 96       	adiw	r24, 0x09	; 9
    4790:	bb c0       	rjmp	.+374    	; 0x4908 <__mulsf3+0x1e8>
    4792:	82 30       	cpi	r24, 0x02	; 2
    4794:	49 f4       	brne	.+18     	; 0x47a8 <__mulsf3+0x88>
    4796:	20 e0       	ldi	r18, 0x00	; 0
    4798:	9a 85       	ldd	r25, Y+10	; 0x0a
    479a:	8a 89       	ldd	r24, Y+18	; 0x12
    479c:	98 13       	cpse	r25, r24
    479e:	21 e0       	ldi	r18, 0x01	; 1
    47a0:	2a 8b       	std	Y+18, r18	; 0x12
    47a2:	ce 01       	movw	r24, r28
    47a4:	41 96       	adiw	r24, 0x11	; 17
    47a6:	b0 c0       	rjmp	.+352    	; 0x4908 <__mulsf3+0x1e8>
    47a8:	2d 84       	ldd	r2, Y+13	; 0x0d
    47aa:	3e 84       	ldd	r3, Y+14	; 0x0e
    47ac:	4f 84       	ldd	r4, Y+15	; 0x0f
    47ae:	58 88       	ldd	r5, Y+16	; 0x10
    47b0:	6d 88       	ldd	r6, Y+21	; 0x15
    47b2:	7e 88       	ldd	r7, Y+22	; 0x16
    47b4:	8f 88       	ldd	r8, Y+23	; 0x17
    47b6:	98 8c       	ldd	r9, Y+24	; 0x18
    47b8:	ee 24       	eor	r14, r14
    47ba:	ff 24       	eor	r15, r15
    47bc:	87 01       	movw	r16, r14
    47be:	aa 24       	eor	r10, r10
    47c0:	bb 24       	eor	r11, r11
    47c2:	65 01       	movw	r12, r10
    47c4:	40 e0       	ldi	r20, 0x00	; 0
    47c6:	50 e0       	ldi	r21, 0x00	; 0
    47c8:	60 e0       	ldi	r22, 0x00	; 0
    47ca:	70 e0       	ldi	r23, 0x00	; 0
    47cc:	e0 e0       	ldi	r30, 0x00	; 0
    47ce:	f0 e0       	ldi	r31, 0x00	; 0
    47d0:	c1 01       	movw	r24, r2
    47d2:	81 70       	andi	r24, 0x01	; 1
    47d4:	90 70       	andi	r25, 0x00	; 0
    47d6:	89 2b       	or	r24, r25
    47d8:	e9 f0       	breq	.+58     	; 0x4814 <__mulsf3+0xf4>
    47da:	e6 0c       	add	r14, r6
    47dc:	f7 1c       	adc	r15, r7
    47de:	08 1d       	adc	r16, r8
    47e0:	19 1d       	adc	r17, r9
    47e2:	9a 01       	movw	r18, r20
    47e4:	ab 01       	movw	r20, r22
    47e6:	2a 0d       	add	r18, r10
    47e8:	3b 1d       	adc	r19, r11
    47ea:	4c 1d       	adc	r20, r12
    47ec:	5d 1d       	adc	r21, r13
    47ee:	80 e0       	ldi	r24, 0x00	; 0
    47f0:	90 e0       	ldi	r25, 0x00	; 0
    47f2:	a0 e0       	ldi	r26, 0x00	; 0
    47f4:	b0 e0       	ldi	r27, 0x00	; 0
    47f6:	e6 14       	cp	r14, r6
    47f8:	f7 04       	cpc	r15, r7
    47fa:	08 05       	cpc	r16, r8
    47fc:	19 05       	cpc	r17, r9
    47fe:	20 f4       	brcc	.+8      	; 0x4808 <__mulsf3+0xe8>
    4800:	81 e0       	ldi	r24, 0x01	; 1
    4802:	90 e0       	ldi	r25, 0x00	; 0
    4804:	a0 e0       	ldi	r26, 0x00	; 0
    4806:	b0 e0       	ldi	r27, 0x00	; 0
    4808:	ba 01       	movw	r22, r20
    480a:	a9 01       	movw	r20, r18
    480c:	48 0f       	add	r20, r24
    480e:	59 1f       	adc	r21, r25
    4810:	6a 1f       	adc	r22, r26
    4812:	7b 1f       	adc	r23, r27
    4814:	aa 0c       	add	r10, r10
    4816:	bb 1c       	adc	r11, r11
    4818:	cc 1c       	adc	r12, r12
    481a:	dd 1c       	adc	r13, r13
    481c:	97 fe       	sbrs	r9, 7
    481e:	08 c0       	rjmp	.+16     	; 0x4830 <__mulsf3+0x110>
    4820:	81 e0       	ldi	r24, 0x01	; 1
    4822:	90 e0       	ldi	r25, 0x00	; 0
    4824:	a0 e0       	ldi	r26, 0x00	; 0
    4826:	b0 e0       	ldi	r27, 0x00	; 0
    4828:	a8 2a       	or	r10, r24
    482a:	b9 2a       	or	r11, r25
    482c:	ca 2a       	or	r12, r26
    482e:	db 2a       	or	r13, r27
    4830:	31 96       	adiw	r30, 0x01	; 1
    4832:	e0 32       	cpi	r30, 0x20	; 32
    4834:	f1 05       	cpc	r31, r1
    4836:	49 f0       	breq	.+18     	; 0x484a <__mulsf3+0x12a>
    4838:	66 0c       	add	r6, r6
    483a:	77 1c       	adc	r7, r7
    483c:	88 1c       	adc	r8, r8
    483e:	99 1c       	adc	r9, r9
    4840:	56 94       	lsr	r5
    4842:	47 94       	ror	r4
    4844:	37 94       	ror	r3
    4846:	27 94       	ror	r2
    4848:	c3 cf       	rjmp	.-122    	; 0x47d0 <__mulsf3+0xb0>
    484a:	fa 85       	ldd	r31, Y+10	; 0x0a
    484c:	ea 89       	ldd	r30, Y+18	; 0x12
    484e:	2b 89       	ldd	r18, Y+19	; 0x13
    4850:	3c 89       	ldd	r19, Y+20	; 0x14
    4852:	8b 85       	ldd	r24, Y+11	; 0x0b
    4854:	9c 85       	ldd	r25, Y+12	; 0x0c
    4856:	28 0f       	add	r18, r24
    4858:	39 1f       	adc	r19, r25
    485a:	2e 5f       	subi	r18, 0xFE	; 254
    485c:	3f 4f       	sbci	r19, 0xFF	; 255
    485e:	17 c0       	rjmp	.+46     	; 0x488e <__mulsf3+0x16e>
    4860:	ca 01       	movw	r24, r20
    4862:	81 70       	andi	r24, 0x01	; 1
    4864:	90 70       	andi	r25, 0x00	; 0
    4866:	89 2b       	or	r24, r25
    4868:	61 f0       	breq	.+24     	; 0x4882 <__mulsf3+0x162>
    486a:	16 95       	lsr	r17
    486c:	07 95       	ror	r16
    486e:	f7 94       	ror	r15
    4870:	e7 94       	ror	r14
    4872:	80 e0       	ldi	r24, 0x00	; 0
    4874:	90 e0       	ldi	r25, 0x00	; 0
    4876:	a0 e0       	ldi	r26, 0x00	; 0
    4878:	b0 e8       	ldi	r27, 0x80	; 128
    487a:	e8 2a       	or	r14, r24
    487c:	f9 2a       	or	r15, r25
    487e:	0a 2b       	or	r16, r26
    4880:	1b 2b       	or	r17, r27
    4882:	76 95       	lsr	r23
    4884:	67 95       	ror	r22
    4886:	57 95       	ror	r21
    4888:	47 95       	ror	r20
    488a:	2f 5f       	subi	r18, 0xFF	; 255
    488c:	3f 4f       	sbci	r19, 0xFF	; 255
    488e:	77 fd       	sbrc	r23, 7
    4890:	e7 cf       	rjmp	.-50     	; 0x4860 <__mulsf3+0x140>
    4892:	0c c0       	rjmp	.+24     	; 0x48ac <__mulsf3+0x18c>
    4894:	44 0f       	add	r20, r20
    4896:	55 1f       	adc	r21, r21
    4898:	66 1f       	adc	r22, r22
    489a:	77 1f       	adc	r23, r23
    489c:	17 fd       	sbrc	r17, 7
    489e:	41 60       	ori	r20, 0x01	; 1
    48a0:	ee 0c       	add	r14, r14
    48a2:	ff 1c       	adc	r15, r15
    48a4:	00 1f       	adc	r16, r16
    48a6:	11 1f       	adc	r17, r17
    48a8:	21 50       	subi	r18, 0x01	; 1
    48aa:	30 40       	sbci	r19, 0x00	; 0
    48ac:	40 30       	cpi	r20, 0x00	; 0
    48ae:	90 e0       	ldi	r25, 0x00	; 0
    48b0:	59 07       	cpc	r21, r25
    48b2:	90 e0       	ldi	r25, 0x00	; 0
    48b4:	69 07       	cpc	r22, r25
    48b6:	90 e4       	ldi	r25, 0x40	; 64
    48b8:	79 07       	cpc	r23, r25
    48ba:	60 f3       	brcs	.-40     	; 0x4894 <__mulsf3+0x174>
    48bc:	2b 8f       	std	Y+27, r18	; 0x1b
    48be:	3c 8f       	std	Y+28, r19	; 0x1c
    48c0:	db 01       	movw	r26, r22
    48c2:	ca 01       	movw	r24, r20
    48c4:	8f 77       	andi	r24, 0x7F	; 127
    48c6:	90 70       	andi	r25, 0x00	; 0
    48c8:	a0 70       	andi	r26, 0x00	; 0
    48ca:	b0 70       	andi	r27, 0x00	; 0
    48cc:	80 34       	cpi	r24, 0x40	; 64
    48ce:	91 05       	cpc	r25, r1
    48d0:	a1 05       	cpc	r26, r1
    48d2:	b1 05       	cpc	r27, r1
    48d4:	61 f4       	brne	.+24     	; 0x48ee <__mulsf3+0x1ce>
    48d6:	47 fd       	sbrc	r20, 7
    48d8:	0a c0       	rjmp	.+20     	; 0x48ee <__mulsf3+0x1ce>
    48da:	e1 14       	cp	r14, r1
    48dc:	f1 04       	cpc	r15, r1
    48de:	01 05       	cpc	r16, r1
    48e0:	11 05       	cpc	r17, r1
    48e2:	29 f0       	breq	.+10     	; 0x48ee <__mulsf3+0x1ce>
    48e4:	40 5c       	subi	r20, 0xC0	; 192
    48e6:	5f 4f       	sbci	r21, 0xFF	; 255
    48e8:	6f 4f       	sbci	r22, 0xFF	; 255
    48ea:	7f 4f       	sbci	r23, 0xFF	; 255
    48ec:	40 78       	andi	r20, 0x80	; 128
    48ee:	1a 8e       	std	Y+26, r1	; 0x1a
    48f0:	fe 17       	cp	r31, r30
    48f2:	11 f0       	breq	.+4      	; 0x48f8 <__mulsf3+0x1d8>
    48f4:	81 e0       	ldi	r24, 0x01	; 1
    48f6:	8a 8f       	std	Y+26, r24	; 0x1a
    48f8:	4d 8f       	std	Y+29, r20	; 0x1d
    48fa:	5e 8f       	std	Y+30, r21	; 0x1e
    48fc:	6f 8f       	std	Y+31, r22	; 0x1f
    48fe:	78 a3       	std	Y+32, r23	; 0x20
    4900:	83 e0       	ldi	r24, 0x03	; 3
    4902:	89 8f       	std	Y+25, r24	; 0x19
    4904:	ce 01       	movw	r24, r28
    4906:	49 96       	adiw	r24, 0x19	; 25
    4908:	0e 94 e2 26 	call	0x4dc4	; 0x4dc4 <__pack_f>
    490c:	a0 96       	adiw	r28, 0x20	; 32
    490e:	e2 e1       	ldi	r30, 0x12	; 18
    4910:	0c 94 a4 28 	jmp	0x5148	; 0x5148 <__epilogue_restores__>

00004914 <__divsf3>:
    4914:	a8 e1       	ldi	r26, 0x18	; 24
    4916:	b0 e0       	ldi	r27, 0x00	; 0
    4918:	e0 e9       	ldi	r30, 0x90	; 144
    491a:	f4 e2       	ldi	r31, 0x24	; 36
    491c:	0c 94 90 28 	jmp	0x5120	; 0x5120 <__prologue_saves__+0x10>
    4920:	69 83       	std	Y+1, r22	; 0x01
    4922:	7a 83       	std	Y+2, r23	; 0x02
    4924:	8b 83       	std	Y+3, r24	; 0x03
    4926:	9c 83       	std	Y+4, r25	; 0x04
    4928:	2d 83       	std	Y+5, r18	; 0x05
    492a:	3e 83       	std	Y+6, r19	; 0x06
    492c:	4f 83       	std	Y+7, r20	; 0x07
    492e:	58 87       	std	Y+8, r21	; 0x08
    4930:	b9 e0       	ldi	r27, 0x09	; 9
    4932:	eb 2e       	mov	r14, r27
    4934:	f1 2c       	mov	r15, r1
    4936:	ec 0e       	add	r14, r28
    4938:	fd 1e       	adc	r15, r29
    493a:	ce 01       	movw	r24, r28
    493c:	01 96       	adiw	r24, 0x01	; 1
    493e:	b7 01       	movw	r22, r14
    4940:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4944:	8e 01       	movw	r16, r28
    4946:	0f 5e       	subi	r16, 0xEF	; 239
    4948:	1f 4f       	sbci	r17, 0xFF	; 255
    494a:	ce 01       	movw	r24, r28
    494c:	05 96       	adiw	r24, 0x05	; 5
    494e:	b8 01       	movw	r22, r16
    4950:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4954:	29 85       	ldd	r18, Y+9	; 0x09
    4956:	22 30       	cpi	r18, 0x02	; 2
    4958:	08 f4       	brcc	.+2      	; 0x495c <__divsf3+0x48>
    495a:	7e c0       	rjmp	.+252    	; 0x4a58 <__divsf3+0x144>
    495c:	39 89       	ldd	r19, Y+17	; 0x11
    495e:	32 30       	cpi	r19, 0x02	; 2
    4960:	10 f4       	brcc	.+4      	; 0x4966 <__divsf3+0x52>
    4962:	b8 01       	movw	r22, r16
    4964:	7c c0       	rjmp	.+248    	; 0x4a5e <__divsf3+0x14a>
    4966:	8a 85       	ldd	r24, Y+10	; 0x0a
    4968:	9a 89       	ldd	r25, Y+18	; 0x12
    496a:	89 27       	eor	r24, r25
    496c:	8a 87       	std	Y+10, r24	; 0x0a
    496e:	24 30       	cpi	r18, 0x04	; 4
    4970:	11 f0       	breq	.+4      	; 0x4976 <__divsf3+0x62>
    4972:	22 30       	cpi	r18, 0x02	; 2
    4974:	31 f4       	brne	.+12     	; 0x4982 <__divsf3+0x6e>
    4976:	23 17       	cp	r18, r19
    4978:	09 f0       	breq	.+2      	; 0x497c <__divsf3+0x68>
    497a:	6e c0       	rjmp	.+220    	; 0x4a58 <__divsf3+0x144>
    497c:	60 e0       	ldi	r22, 0x00	; 0
    497e:	72 e0       	ldi	r23, 0x02	; 2
    4980:	6e c0       	rjmp	.+220    	; 0x4a5e <__divsf3+0x14a>
    4982:	34 30       	cpi	r19, 0x04	; 4
    4984:	39 f4       	brne	.+14     	; 0x4994 <__divsf3+0x80>
    4986:	1d 86       	std	Y+13, r1	; 0x0d
    4988:	1e 86       	std	Y+14, r1	; 0x0e
    498a:	1f 86       	std	Y+15, r1	; 0x0f
    498c:	18 8a       	std	Y+16, r1	; 0x10
    498e:	1c 86       	std	Y+12, r1	; 0x0c
    4990:	1b 86       	std	Y+11, r1	; 0x0b
    4992:	04 c0       	rjmp	.+8      	; 0x499c <__divsf3+0x88>
    4994:	32 30       	cpi	r19, 0x02	; 2
    4996:	21 f4       	brne	.+8      	; 0x49a0 <__divsf3+0x8c>
    4998:	84 e0       	ldi	r24, 0x04	; 4
    499a:	89 87       	std	Y+9, r24	; 0x09
    499c:	b7 01       	movw	r22, r14
    499e:	5f c0       	rjmp	.+190    	; 0x4a5e <__divsf3+0x14a>
    49a0:	2b 85       	ldd	r18, Y+11	; 0x0b
    49a2:	3c 85       	ldd	r19, Y+12	; 0x0c
    49a4:	8b 89       	ldd	r24, Y+19	; 0x13
    49a6:	9c 89       	ldd	r25, Y+20	; 0x14
    49a8:	28 1b       	sub	r18, r24
    49aa:	39 0b       	sbc	r19, r25
    49ac:	3c 87       	std	Y+12, r19	; 0x0c
    49ae:	2b 87       	std	Y+11, r18	; 0x0b
    49b0:	ed 84       	ldd	r14, Y+13	; 0x0d
    49b2:	fe 84       	ldd	r15, Y+14	; 0x0e
    49b4:	0f 85       	ldd	r16, Y+15	; 0x0f
    49b6:	18 89       	ldd	r17, Y+16	; 0x10
    49b8:	ad 88       	ldd	r10, Y+21	; 0x15
    49ba:	be 88       	ldd	r11, Y+22	; 0x16
    49bc:	cf 88       	ldd	r12, Y+23	; 0x17
    49be:	d8 8c       	ldd	r13, Y+24	; 0x18
    49c0:	ea 14       	cp	r14, r10
    49c2:	fb 04       	cpc	r15, r11
    49c4:	0c 05       	cpc	r16, r12
    49c6:	1d 05       	cpc	r17, r13
    49c8:	40 f4       	brcc	.+16     	; 0x49da <__divsf3+0xc6>
    49ca:	ee 0c       	add	r14, r14
    49cc:	ff 1c       	adc	r15, r15
    49ce:	00 1f       	adc	r16, r16
    49d0:	11 1f       	adc	r17, r17
    49d2:	21 50       	subi	r18, 0x01	; 1
    49d4:	30 40       	sbci	r19, 0x00	; 0
    49d6:	3c 87       	std	Y+12, r19	; 0x0c
    49d8:	2b 87       	std	Y+11, r18	; 0x0b
    49da:	20 e0       	ldi	r18, 0x00	; 0
    49dc:	30 e0       	ldi	r19, 0x00	; 0
    49de:	40 e0       	ldi	r20, 0x00	; 0
    49e0:	50 e0       	ldi	r21, 0x00	; 0
    49e2:	80 e0       	ldi	r24, 0x00	; 0
    49e4:	90 e0       	ldi	r25, 0x00	; 0
    49e6:	a0 e0       	ldi	r26, 0x00	; 0
    49e8:	b0 e4       	ldi	r27, 0x40	; 64
    49ea:	60 e0       	ldi	r22, 0x00	; 0
    49ec:	70 e0       	ldi	r23, 0x00	; 0
    49ee:	ea 14       	cp	r14, r10
    49f0:	fb 04       	cpc	r15, r11
    49f2:	0c 05       	cpc	r16, r12
    49f4:	1d 05       	cpc	r17, r13
    49f6:	40 f0       	brcs	.+16     	; 0x4a08 <__divsf3+0xf4>
    49f8:	28 2b       	or	r18, r24
    49fa:	39 2b       	or	r19, r25
    49fc:	4a 2b       	or	r20, r26
    49fe:	5b 2b       	or	r21, r27
    4a00:	ea 18       	sub	r14, r10
    4a02:	fb 08       	sbc	r15, r11
    4a04:	0c 09       	sbc	r16, r12
    4a06:	1d 09       	sbc	r17, r13
    4a08:	b6 95       	lsr	r27
    4a0a:	a7 95       	ror	r26
    4a0c:	97 95       	ror	r25
    4a0e:	87 95       	ror	r24
    4a10:	ee 0c       	add	r14, r14
    4a12:	ff 1c       	adc	r15, r15
    4a14:	00 1f       	adc	r16, r16
    4a16:	11 1f       	adc	r17, r17
    4a18:	6f 5f       	subi	r22, 0xFF	; 255
    4a1a:	7f 4f       	sbci	r23, 0xFF	; 255
    4a1c:	6f 31       	cpi	r22, 0x1F	; 31
    4a1e:	71 05       	cpc	r23, r1
    4a20:	31 f7       	brne	.-52     	; 0x49ee <__divsf3+0xda>
    4a22:	da 01       	movw	r26, r20
    4a24:	c9 01       	movw	r24, r18
    4a26:	8f 77       	andi	r24, 0x7F	; 127
    4a28:	90 70       	andi	r25, 0x00	; 0
    4a2a:	a0 70       	andi	r26, 0x00	; 0
    4a2c:	b0 70       	andi	r27, 0x00	; 0
    4a2e:	80 34       	cpi	r24, 0x40	; 64
    4a30:	91 05       	cpc	r25, r1
    4a32:	a1 05       	cpc	r26, r1
    4a34:	b1 05       	cpc	r27, r1
    4a36:	61 f4       	brne	.+24     	; 0x4a50 <__divsf3+0x13c>
    4a38:	27 fd       	sbrc	r18, 7
    4a3a:	0a c0       	rjmp	.+20     	; 0x4a50 <__divsf3+0x13c>
    4a3c:	e1 14       	cp	r14, r1
    4a3e:	f1 04       	cpc	r15, r1
    4a40:	01 05       	cpc	r16, r1
    4a42:	11 05       	cpc	r17, r1
    4a44:	29 f0       	breq	.+10     	; 0x4a50 <__divsf3+0x13c>
    4a46:	20 5c       	subi	r18, 0xC0	; 192
    4a48:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4a:	4f 4f       	sbci	r20, 0xFF	; 255
    4a4c:	5f 4f       	sbci	r21, 0xFF	; 255
    4a4e:	20 78       	andi	r18, 0x80	; 128
    4a50:	2d 87       	std	Y+13, r18	; 0x0d
    4a52:	3e 87       	std	Y+14, r19	; 0x0e
    4a54:	4f 87       	std	Y+15, r20	; 0x0f
    4a56:	58 8b       	std	Y+16, r21	; 0x10
    4a58:	be 01       	movw	r22, r28
    4a5a:	67 5f       	subi	r22, 0xF7	; 247
    4a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    4a5e:	cb 01       	movw	r24, r22
    4a60:	0e 94 e2 26 	call	0x4dc4	; 0x4dc4 <__pack_f>
    4a64:	68 96       	adiw	r28, 0x18	; 24
    4a66:	ea e0       	ldi	r30, 0x0A	; 10
    4a68:	0c 94 ac 28 	jmp	0x5158	; 0x5158 <__epilogue_restores__+0x10>

00004a6c <__gtsf2>:
    4a6c:	a8 e1       	ldi	r26, 0x18	; 24
    4a6e:	b0 e0       	ldi	r27, 0x00	; 0
    4a70:	ec e3       	ldi	r30, 0x3C	; 60
    4a72:	f5 e2       	ldi	r31, 0x25	; 37
    4a74:	0c 94 94 28 	jmp	0x5128	; 0x5128 <__prologue_saves__+0x18>
    4a78:	69 83       	std	Y+1, r22	; 0x01
    4a7a:	7a 83       	std	Y+2, r23	; 0x02
    4a7c:	8b 83       	std	Y+3, r24	; 0x03
    4a7e:	9c 83       	std	Y+4, r25	; 0x04
    4a80:	2d 83       	std	Y+5, r18	; 0x05
    4a82:	3e 83       	std	Y+6, r19	; 0x06
    4a84:	4f 83       	std	Y+7, r20	; 0x07
    4a86:	58 87       	std	Y+8, r21	; 0x08
    4a88:	89 e0       	ldi	r24, 0x09	; 9
    4a8a:	e8 2e       	mov	r14, r24
    4a8c:	f1 2c       	mov	r15, r1
    4a8e:	ec 0e       	add	r14, r28
    4a90:	fd 1e       	adc	r15, r29
    4a92:	ce 01       	movw	r24, r28
    4a94:	01 96       	adiw	r24, 0x01	; 1
    4a96:	b7 01       	movw	r22, r14
    4a98:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4a9c:	8e 01       	movw	r16, r28
    4a9e:	0f 5e       	subi	r16, 0xEF	; 239
    4aa0:	1f 4f       	sbci	r17, 0xFF	; 255
    4aa2:	ce 01       	movw	r24, r28
    4aa4:	05 96       	adiw	r24, 0x05	; 5
    4aa6:	b8 01       	movw	r22, r16
    4aa8:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4aac:	89 85       	ldd	r24, Y+9	; 0x09
    4aae:	82 30       	cpi	r24, 0x02	; 2
    4ab0:	40 f0       	brcs	.+16     	; 0x4ac2 <__gtsf2+0x56>
    4ab2:	89 89       	ldd	r24, Y+17	; 0x11
    4ab4:	82 30       	cpi	r24, 0x02	; 2
    4ab6:	28 f0       	brcs	.+10     	; 0x4ac2 <__gtsf2+0x56>
    4ab8:	c7 01       	movw	r24, r14
    4aba:	b8 01       	movw	r22, r16
    4abc:	0e 94 2f 28 	call	0x505e	; 0x505e <__fpcmp_parts_f>
    4ac0:	01 c0       	rjmp	.+2      	; 0x4ac4 <__gtsf2+0x58>
    4ac2:	8f ef       	ldi	r24, 0xFF	; 255
    4ac4:	68 96       	adiw	r28, 0x18	; 24
    4ac6:	e6 e0       	ldi	r30, 0x06	; 6
    4ac8:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__epilogue_restores__+0x18>

00004acc <__gesf2>:
    4acc:	a8 e1       	ldi	r26, 0x18	; 24
    4ace:	b0 e0       	ldi	r27, 0x00	; 0
    4ad0:	ec e6       	ldi	r30, 0x6C	; 108
    4ad2:	f5 e2       	ldi	r31, 0x25	; 37
    4ad4:	0c 94 94 28 	jmp	0x5128	; 0x5128 <__prologue_saves__+0x18>
    4ad8:	69 83       	std	Y+1, r22	; 0x01
    4ada:	7a 83       	std	Y+2, r23	; 0x02
    4adc:	8b 83       	std	Y+3, r24	; 0x03
    4ade:	9c 83       	std	Y+4, r25	; 0x04
    4ae0:	2d 83       	std	Y+5, r18	; 0x05
    4ae2:	3e 83       	std	Y+6, r19	; 0x06
    4ae4:	4f 83       	std	Y+7, r20	; 0x07
    4ae6:	58 87       	std	Y+8, r21	; 0x08
    4ae8:	89 e0       	ldi	r24, 0x09	; 9
    4aea:	e8 2e       	mov	r14, r24
    4aec:	f1 2c       	mov	r15, r1
    4aee:	ec 0e       	add	r14, r28
    4af0:	fd 1e       	adc	r15, r29
    4af2:	ce 01       	movw	r24, r28
    4af4:	01 96       	adiw	r24, 0x01	; 1
    4af6:	b7 01       	movw	r22, r14
    4af8:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4afc:	8e 01       	movw	r16, r28
    4afe:	0f 5e       	subi	r16, 0xEF	; 239
    4b00:	1f 4f       	sbci	r17, 0xFF	; 255
    4b02:	ce 01       	movw	r24, r28
    4b04:	05 96       	adiw	r24, 0x05	; 5
    4b06:	b8 01       	movw	r22, r16
    4b08:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4b0c:	89 85       	ldd	r24, Y+9	; 0x09
    4b0e:	82 30       	cpi	r24, 0x02	; 2
    4b10:	40 f0       	brcs	.+16     	; 0x4b22 <__gesf2+0x56>
    4b12:	89 89       	ldd	r24, Y+17	; 0x11
    4b14:	82 30       	cpi	r24, 0x02	; 2
    4b16:	28 f0       	brcs	.+10     	; 0x4b22 <__gesf2+0x56>
    4b18:	c7 01       	movw	r24, r14
    4b1a:	b8 01       	movw	r22, r16
    4b1c:	0e 94 2f 28 	call	0x505e	; 0x505e <__fpcmp_parts_f>
    4b20:	01 c0       	rjmp	.+2      	; 0x4b24 <__gesf2+0x58>
    4b22:	8f ef       	ldi	r24, 0xFF	; 255
    4b24:	68 96       	adiw	r28, 0x18	; 24
    4b26:	e6 e0       	ldi	r30, 0x06	; 6
    4b28:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__epilogue_restores__+0x18>

00004b2c <__ltsf2>:
    4b2c:	a8 e1       	ldi	r26, 0x18	; 24
    4b2e:	b0 e0       	ldi	r27, 0x00	; 0
    4b30:	ec e9       	ldi	r30, 0x9C	; 156
    4b32:	f5 e2       	ldi	r31, 0x25	; 37
    4b34:	0c 94 94 28 	jmp	0x5128	; 0x5128 <__prologue_saves__+0x18>
    4b38:	69 83       	std	Y+1, r22	; 0x01
    4b3a:	7a 83       	std	Y+2, r23	; 0x02
    4b3c:	8b 83       	std	Y+3, r24	; 0x03
    4b3e:	9c 83       	std	Y+4, r25	; 0x04
    4b40:	2d 83       	std	Y+5, r18	; 0x05
    4b42:	3e 83       	std	Y+6, r19	; 0x06
    4b44:	4f 83       	std	Y+7, r20	; 0x07
    4b46:	58 87       	std	Y+8, r21	; 0x08
    4b48:	89 e0       	ldi	r24, 0x09	; 9
    4b4a:	e8 2e       	mov	r14, r24
    4b4c:	f1 2c       	mov	r15, r1
    4b4e:	ec 0e       	add	r14, r28
    4b50:	fd 1e       	adc	r15, r29
    4b52:	ce 01       	movw	r24, r28
    4b54:	01 96       	adiw	r24, 0x01	; 1
    4b56:	b7 01       	movw	r22, r14
    4b58:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4b5c:	8e 01       	movw	r16, r28
    4b5e:	0f 5e       	subi	r16, 0xEF	; 239
    4b60:	1f 4f       	sbci	r17, 0xFF	; 255
    4b62:	ce 01       	movw	r24, r28
    4b64:	05 96       	adiw	r24, 0x05	; 5
    4b66:	b8 01       	movw	r22, r16
    4b68:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4b6c:	89 85       	ldd	r24, Y+9	; 0x09
    4b6e:	82 30       	cpi	r24, 0x02	; 2
    4b70:	40 f0       	brcs	.+16     	; 0x4b82 <__ltsf2+0x56>
    4b72:	89 89       	ldd	r24, Y+17	; 0x11
    4b74:	82 30       	cpi	r24, 0x02	; 2
    4b76:	28 f0       	brcs	.+10     	; 0x4b82 <__ltsf2+0x56>
    4b78:	c7 01       	movw	r24, r14
    4b7a:	b8 01       	movw	r22, r16
    4b7c:	0e 94 2f 28 	call	0x505e	; 0x505e <__fpcmp_parts_f>
    4b80:	01 c0       	rjmp	.+2      	; 0x4b84 <__ltsf2+0x58>
    4b82:	81 e0       	ldi	r24, 0x01	; 1
    4b84:	68 96       	adiw	r28, 0x18	; 24
    4b86:	e6 e0       	ldi	r30, 0x06	; 6
    4b88:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__epilogue_restores__+0x18>

00004b8c <__fixsfsi>:
    4b8c:	ac e0       	ldi	r26, 0x0C	; 12
    4b8e:	b0 e0       	ldi	r27, 0x00	; 0
    4b90:	ec ec       	ldi	r30, 0xCC	; 204
    4b92:	f5 e2       	ldi	r31, 0x25	; 37
    4b94:	0c 94 98 28 	jmp	0x5130	; 0x5130 <__prologue_saves__+0x20>
    4b98:	69 83       	std	Y+1, r22	; 0x01
    4b9a:	7a 83       	std	Y+2, r23	; 0x02
    4b9c:	8b 83       	std	Y+3, r24	; 0x03
    4b9e:	9c 83       	std	Y+4, r25	; 0x04
    4ba0:	ce 01       	movw	r24, r28
    4ba2:	01 96       	adiw	r24, 0x01	; 1
    4ba4:	be 01       	movw	r22, r28
    4ba6:	6b 5f       	subi	r22, 0xFB	; 251
    4ba8:	7f 4f       	sbci	r23, 0xFF	; 255
    4baa:	0e 94 b7 27 	call	0x4f6e	; 0x4f6e <__unpack_f>
    4bae:	8d 81       	ldd	r24, Y+5	; 0x05
    4bb0:	82 30       	cpi	r24, 0x02	; 2
    4bb2:	61 f1       	breq	.+88     	; 0x4c0c <__fixsfsi+0x80>
    4bb4:	82 30       	cpi	r24, 0x02	; 2
    4bb6:	50 f1       	brcs	.+84     	; 0x4c0c <__fixsfsi+0x80>
    4bb8:	84 30       	cpi	r24, 0x04	; 4
    4bba:	21 f4       	brne	.+8      	; 0x4bc4 <__fixsfsi+0x38>
    4bbc:	8e 81       	ldd	r24, Y+6	; 0x06
    4bbe:	88 23       	and	r24, r24
    4bc0:	51 f1       	breq	.+84     	; 0x4c16 <__fixsfsi+0x8a>
    4bc2:	2e c0       	rjmp	.+92     	; 0x4c20 <__fixsfsi+0x94>
    4bc4:	2f 81       	ldd	r18, Y+7	; 0x07
    4bc6:	38 85       	ldd	r19, Y+8	; 0x08
    4bc8:	37 fd       	sbrc	r19, 7
    4bca:	20 c0       	rjmp	.+64     	; 0x4c0c <__fixsfsi+0x80>
    4bcc:	6e 81       	ldd	r22, Y+6	; 0x06
    4bce:	2f 31       	cpi	r18, 0x1F	; 31
    4bd0:	31 05       	cpc	r19, r1
    4bd2:	1c f0       	brlt	.+6      	; 0x4bda <__fixsfsi+0x4e>
    4bd4:	66 23       	and	r22, r22
    4bd6:	f9 f0       	breq	.+62     	; 0x4c16 <__fixsfsi+0x8a>
    4bd8:	23 c0       	rjmp	.+70     	; 0x4c20 <__fixsfsi+0x94>
    4bda:	8e e1       	ldi	r24, 0x1E	; 30
    4bdc:	90 e0       	ldi	r25, 0x00	; 0
    4bde:	82 1b       	sub	r24, r18
    4be0:	93 0b       	sbc	r25, r19
    4be2:	29 85       	ldd	r18, Y+9	; 0x09
    4be4:	3a 85       	ldd	r19, Y+10	; 0x0a
    4be6:	4b 85       	ldd	r20, Y+11	; 0x0b
    4be8:	5c 85       	ldd	r21, Y+12	; 0x0c
    4bea:	04 c0       	rjmp	.+8      	; 0x4bf4 <__fixsfsi+0x68>
    4bec:	56 95       	lsr	r21
    4bee:	47 95       	ror	r20
    4bf0:	37 95       	ror	r19
    4bf2:	27 95       	ror	r18
    4bf4:	8a 95       	dec	r24
    4bf6:	d2 f7       	brpl	.-12     	; 0x4bec <__fixsfsi+0x60>
    4bf8:	66 23       	and	r22, r22
    4bfa:	b1 f0       	breq	.+44     	; 0x4c28 <__fixsfsi+0x9c>
    4bfc:	50 95       	com	r21
    4bfe:	40 95       	com	r20
    4c00:	30 95       	com	r19
    4c02:	21 95       	neg	r18
    4c04:	3f 4f       	sbci	r19, 0xFF	; 255
    4c06:	4f 4f       	sbci	r20, 0xFF	; 255
    4c08:	5f 4f       	sbci	r21, 0xFF	; 255
    4c0a:	0e c0       	rjmp	.+28     	; 0x4c28 <__fixsfsi+0x9c>
    4c0c:	20 e0       	ldi	r18, 0x00	; 0
    4c0e:	30 e0       	ldi	r19, 0x00	; 0
    4c10:	40 e0       	ldi	r20, 0x00	; 0
    4c12:	50 e0       	ldi	r21, 0x00	; 0
    4c14:	09 c0       	rjmp	.+18     	; 0x4c28 <__fixsfsi+0x9c>
    4c16:	2f ef       	ldi	r18, 0xFF	; 255
    4c18:	3f ef       	ldi	r19, 0xFF	; 255
    4c1a:	4f ef       	ldi	r20, 0xFF	; 255
    4c1c:	5f e7       	ldi	r21, 0x7F	; 127
    4c1e:	04 c0       	rjmp	.+8      	; 0x4c28 <__fixsfsi+0x9c>
    4c20:	20 e0       	ldi	r18, 0x00	; 0
    4c22:	30 e0       	ldi	r19, 0x00	; 0
    4c24:	40 e0       	ldi	r20, 0x00	; 0
    4c26:	50 e8       	ldi	r21, 0x80	; 128
    4c28:	b9 01       	movw	r22, r18
    4c2a:	ca 01       	movw	r24, r20
    4c2c:	2c 96       	adiw	r28, 0x0c	; 12
    4c2e:	e2 e0       	ldi	r30, 0x02	; 2
    4c30:	0c 94 b4 28 	jmp	0x5168	; 0x5168 <__epilogue_restores__+0x20>

00004c34 <__floatunsisf>:
    4c34:	a8 e0       	ldi	r26, 0x08	; 8
    4c36:	b0 e0       	ldi	r27, 0x00	; 0
    4c38:	e0 e2       	ldi	r30, 0x20	; 32
    4c3a:	f6 e2       	ldi	r31, 0x26	; 38
    4c3c:	0c 94 90 28 	jmp	0x5120	; 0x5120 <__prologue_saves__+0x10>
    4c40:	7b 01       	movw	r14, r22
    4c42:	8c 01       	movw	r16, r24
    4c44:	61 15       	cp	r22, r1
    4c46:	71 05       	cpc	r23, r1
    4c48:	81 05       	cpc	r24, r1
    4c4a:	91 05       	cpc	r25, r1
    4c4c:	19 f4       	brne	.+6      	; 0x4c54 <__floatunsisf+0x20>
    4c4e:	82 e0       	ldi	r24, 0x02	; 2
    4c50:	89 83       	std	Y+1, r24	; 0x01
    4c52:	60 c0       	rjmp	.+192    	; 0x4d14 <__floatunsisf+0xe0>
    4c54:	83 e0       	ldi	r24, 0x03	; 3
    4c56:	89 83       	std	Y+1, r24	; 0x01
    4c58:	8e e1       	ldi	r24, 0x1E	; 30
    4c5a:	c8 2e       	mov	r12, r24
    4c5c:	d1 2c       	mov	r13, r1
    4c5e:	dc 82       	std	Y+4, r13	; 0x04
    4c60:	cb 82       	std	Y+3, r12	; 0x03
    4c62:	ed 82       	std	Y+5, r14	; 0x05
    4c64:	fe 82       	std	Y+6, r15	; 0x06
    4c66:	0f 83       	std	Y+7, r16	; 0x07
    4c68:	18 87       	std	Y+8, r17	; 0x08
    4c6a:	c8 01       	movw	r24, r16
    4c6c:	b7 01       	movw	r22, r14
    4c6e:	0e 94 93 26 	call	0x4d26	; 0x4d26 <__clzsi2>
    4c72:	fc 01       	movw	r30, r24
    4c74:	31 97       	sbiw	r30, 0x01	; 1
    4c76:	f7 ff       	sbrs	r31, 7
    4c78:	3b c0       	rjmp	.+118    	; 0x4cf0 <__floatunsisf+0xbc>
    4c7a:	22 27       	eor	r18, r18
    4c7c:	33 27       	eor	r19, r19
    4c7e:	2e 1b       	sub	r18, r30
    4c80:	3f 0b       	sbc	r19, r31
    4c82:	57 01       	movw	r10, r14
    4c84:	68 01       	movw	r12, r16
    4c86:	02 2e       	mov	r0, r18
    4c88:	04 c0       	rjmp	.+8      	; 0x4c92 <__floatunsisf+0x5e>
    4c8a:	d6 94       	lsr	r13
    4c8c:	c7 94       	ror	r12
    4c8e:	b7 94       	ror	r11
    4c90:	a7 94       	ror	r10
    4c92:	0a 94       	dec	r0
    4c94:	d2 f7       	brpl	.-12     	; 0x4c8a <__floatunsisf+0x56>
    4c96:	40 e0       	ldi	r20, 0x00	; 0
    4c98:	50 e0       	ldi	r21, 0x00	; 0
    4c9a:	60 e0       	ldi	r22, 0x00	; 0
    4c9c:	70 e0       	ldi	r23, 0x00	; 0
    4c9e:	81 e0       	ldi	r24, 0x01	; 1
    4ca0:	90 e0       	ldi	r25, 0x00	; 0
    4ca2:	a0 e0       	ldi	r26, 0x00	; 0
    4ca4:	b0 e0       	ldi	r27, 0x00	; 0
    4ca6:	04 c0       	rjmp	.+8      	; 0x4cb0 <__floatunsisf+0x7c>
    4ca8:	88 0f       	add	r24, r24
    4caa:	99 1f       	adc	r25, r25
    4cac:	aa 1f       	adc	r26, r26
    4cae:	bb 1f       	adc	r27, r27
    4cb0:	2a 95       	dec	r18
    4cb2:	d2 f7       	brpl	.-12     	; 0x4ca8 <__floatunsisf+0x74>
    4cb4:	01 97       	sbiw	r24, 0x01	; 1
    4cb6:	a1 09       	sbc	r26, r1
    4cb8:	b1 09       	sbc	r27, r1
    4cba:	8e 21       	and	r24, r14
    4cbc:	9f 21       	and	r25, r15
    4cbe:	a0 23       	and	r26, r16
    4cc0:	b1 23       	and	r27, r17
    4cc2:	00 97       	sbiw	r24, 0x00	; 0
    4cc4:	a1 05       	cpc	r26, r1
    4cc6:	b1 05       	cpc	r27, r1
    4cc8:	21 f0       	breq	.+8      	; 0x4cd2 <__floatunsisf+0x9e>
    4cca:	41 e0       	ldi	r20, 0x01	; 1
    4ccc:	50 e0       	ldi	r21, 0x00	; 0
    4cce:	60 e0       	ldi	r22, 0x00	; 0
    4cd0:	70 e0       	ldi	r23, 0x00	; 0
    4cd2:	4a 29       	or	r20, r10
    4cd4:	5b 29       	or	r21, r11
    4cd6:	6c 29       	or	r22, r12
    4cd8:	7d 29       	or	r23, r13
    4cda:	4d 83       	std	Y+5, r20	; 0x05
    4cdc:	5e 83       	std	Y+6, r21	; 0x06
    4cde:	6f 83       	std	Y+7, r22	; 0x07
    4ce0:	78 87       	std	Y+8, r23	; 0x08
    4ce2:	8e e1       	ldi	r24, 0x1E	; 30
    4ce4:	90 e0       	ldi	r25, 0x00	; 0
    4ce6:	8e 1b       	sub	r24, r30
    4ce8:	9f 0b       	sbc	r25, r31
    4cea:	9c 83       	std	Y+4, r25	; 0x04
    4cec:	8b 83       	std	Y+3, r24	; 0x03
    4cee:	12 c0       	rjmp	.+36     	; 0x4d14 <__floatunsisf+0xe0>
    4cf0:	30 97       	sbiw	r30, 0x00	; 0
    4cf2:	81 f0       	breq	.+32     	; 0x4d14 <__floatunsisf+0xe0>
    4cf4:	0e 2e       	mov	r0, r30
    4cf6:	04 c0       	rjmp	.+8      	; 0x4d00 <__floatunsisf+0xcc>
    4cf8:	ee 0c       	add	r14, r14
    4cfa:	ff 1c       	adc	r15, r15
    4cfc:	00 1f       	adc	r16, r16
    4cfe:	11 1f       	adc	r17, r17
    4d00:	0a 94       	dec	r0
    4d02:	d2 f7       	brpl	.-12     	; 0x4cf8 <__floatunsisf+0xc4>
    4d04:	ed 82       	std	Y+5, r14	; 0x05
    4d06:	fe 82       	std	Y+6, r15	; 0x06
    4d08:	0f 83       	std	Y+7, r16	; 0x07
    4d0a:	18 87       	std	Y+8, r17	; 0x08
    4d0c:	ce 1a       	sub	r12, r30
    4d0e:	df 0a       	sbc	r13, r31
    4d10:	dc 82       	std	Y+4, r13	; 0x04
    4d12:	cb 82       	std	Y+3, r12	; 0x03
    4d14:	1a 82       	std	Y+2, r1	; 0x02
    4d16:	ce 01       	movw	r24, r28
    4d18:	01 96       	adiw	r24, 0x01	; 1
    4d1a:	0e 94 e2 26 	call	0x4dc4	; 0x4dc4 <__pack_f>
    4d1e:	28 96       	adiw	r28, 0x08	; 8
    4d20:	ea e0       	ldi	r30, 0x0A	; 10
    4d22:	0c 94 ac 28 	jmp	0x5158	; 0x5158 <__epilogue_restores__+0x10>

00004d26 <__clzsi2>:
    4d26:	ef 92       	push	r14
    4d28:	ff 92       	push	r15
    4d2a:	0f 93       	push	r16
    4d2c:	1f 93       	push	r17
    4d2e:	7b 01       	movw	r14, r22
    4d30:	8c 01       	movw	r16, r24
    4d32:	80 e0       	ldi	r24, 0x00	; 0
    4d34:	e8 16       	cp	r14, r24
    4d36:	80 e0       	ldi	r24, 0x00	; 0
    4d38:	f8 06       	cpc	r15, r24
    4d3a:	81 e0       	ldi	r24, 0x01	; 1
    4d3c:	08 07       	cpc	r16, r24
    4d3e:	80 e0       	ldi	r24, 0x00	; 0
    4d40:	18 07       	cpc	r17, r24
    4d42:	88 f4       	brcc	.+34     	; 0x4d66 <__clzsi2+0x40>
    4d44:	8f ef       	ldi	r24, 0xFF	; 255
    4d46:	e8 16       	cp	r14, r24
    4d48:	f1 04       	cpc	r15, r1
    4d4a:	01 05       	cpc	r16, r1
    4d4c:	11 05       	cpc	r17, r1
    4d4e:	31 f0       	breq	.+12     	; 0x4d5c <__clzsi2+0x36>
    4d50:	28 f0       	brcs	.+10     	; 0x4d5c <__clzsi2+0x36>
    4d52:	88 e0       	ldi	r24, 0x08	; 8
    4d54:	90 e0       	ldi	r25, 0x00	; 0
    4d56:	a0 e0       	ldi	r26, 0x00	; 0
    4d58:	b0 e0       	ldi	r27, 0x00	; 0
    4d5a:	17 c0       	rjmp	.+46     	; 0x4d8a <__clzsi2+0x64>
    4d5c:	80 e0       	ldi	r24, 0x00	; 0
    4d5e:	90 e0       	ldi	r25, 0x00	; 0
    4d60:	a0 e0       	ldi	r26, 0x00	; 0
    4d62:	b0 e0       	ldi	r27, 0x00	; 0
    4d64:	12 c0       	rjmp	.+36     	; 0x4d8a <__clzsi2+0x64>
    4d66:	80 e0       	ldi	r24, 0x00	; 0
    4d68:	e8 16       	cp	r14, r24
    4d6a:	80 e0       	ldi	r24, 0x00	; 0
    4d6c:	f8 06       	cpc	r15, r24
    4d6e:	80 e0       	ldi	r24, 0x00	; 0
    4d70:	08 07       	cpc	r16, r24
    4d72:	81 e0       	ldi	r24, 0x01	; 1
    4d74:	18 07       	cpc	r17, r24
    4d76:	28 f0       	brcs	.+10     	; 0x4d82 <__clzsi2+0x5c>
    4d78:	88 e1       	ldi	r24, 0x18	; 24
    4d7a:	90 e0       	ldi	r25, 0x00	; 0
    4d7c:	a0 e0       	ldi	r26, 0x00	; 0
    4d7e:	b0 e0       	ldi	r27, 0x00	; 0
    4d80:	04 c0       	rjmp	.+8      	; 0x4d8a <__clzsi2+0x64>
    4d82:	80 e1       	ldi	r24, 0x10	; 16
    4d84:	90 e0       	ldi	r25, 0x00	; 0
    4d86:	a0 e0       	ldi	r26, 0x00	; 0
    4d88:	b0 e0       	ldi	r27, 0x00	; 0
    4d8a:	20 e2       	ldi	r18, 0x20	; 32
    4d8c:	30 e0       	ldi	r19, 0x00	; 0
    4d8e:	40 e0       	ldi	r20, 0x00	; 0
    4d90:	50 e0       	ldi	r21, 0x00	; 0
    4d92:	28 1b       	sub	r18, r24
    4d94:	39 0b       	sbc	r19, r25
    4d96:	4a 0b       	sbc	r20, r26
    4d98:	5b 0b       	sbc	r21, r27
    4d9a:	04 c0       	rjmp	.+8      	; 0x4da4 <__clzsi2+0x7e>
    4d9c:	16 95       	lsr	r17
    4d9e:	07 95       	ror	r16
    4da0:	f7 94       	ror	r15
    4da2:	e7 94       	ror	r14
    4da4:	8a 95       	dec	r24
    4da6:	d2 f7       	brpl	.-12     	; 0x4d9c <__clzsi2+0x76>
    4da8:	f7 01       	movw	r30, r14
    4daa:	e8 5f       	subi	r30, 0xF8	; 248
    4dac:	fd 4f       	sbci	r31, 0xFD	; 253
    4dae:	80 81       	ld	r24, Z
    4db0:	28 1b       	sub	r18, r24
    4db2:	31 09       	sbc	r19, r1
    4db4:	41 09       	sbc	r20, r1
    4db6:	51 09       	sbc	r21, r1
    4db8:	c9 01       	movw	r24, r18
    4dba:	1f 91       	pop	r17
    4dbc:	0f 91       	pop	r16
    4dbe:	ff 90       	pop	r15
    4dc0:	ef 90       	pop	r14
    4dc2:	08 95       	ret

00004dc4 <__pack_f>:
    4dc4:	df 92       	push	r13
    4dc6:	ef 92       	push	r14
    4dc8:	ff 92       	push	r15
    4dca:	0f 93       	push	r16
    4dcc:	1f 93       	push	r17
    4dce:	fc 01       	movw	r30, r24
    4dd0:	e4 80       	ldd	r14, Z+4	; 0x04
    4dd2:	f5 80       	ldd	r15, Z+5	; 0x05
    4dd4:	06 81       	ldd	r16, Z+6	; 0x06
    4dd6:	17 81       	ldd	r17, Z+7	; 0x07
    4dd8:	d1 80       	ldd	r13, Z+1	; 0x01
    4dda:	80 81       	ld	r24, Z
    4ddc:	82 30       	cpi	r24, 0x02	; 2
    4dde:	48 f4       	brcc	.+18     	; 0x4df2 <__pack_f+0x2e>
    4de0:	80 e0       	ldi	r24, 0x00	; 0
    4de2:	90 e0       	ldi	r25, 0x00	; 0
    4de4:	a0 e1       	ldi	r26, 0x10	; 16
    4de6:	b0 e0       	ldi	r27, 0x00	; 0
    4de8:	e8 2a       	or	r14, r24
    4dea:	f9 2a       	or	r15, r25
    4dec:	0a 2b       	or	r16, r26
    4dee:	1b 2b       	or	r17, r27
    4df0:	a5 c0       	rjmp	.+330    	; 0x4f3c <__pack_f+0x178>
    4df2:	84 30       	cpi	r24, 0x04	; 4
    4df4:	09 f4       	brne	.+2      	; 0x4df8 <__pack_f+0x34>
    4df6:	9f c0       	rjmp	.+318    	; 0x4f36 <__pack_f+0x172>
    4df8:	82 30       	cpi	r24, 0x02	; 2
    4dfa:	21 f4       	brne	.+8      	; 0x4e04 <__pack_f+0x40>
    4dfc:	ee 24       	eor	r14, r14
    4dfe:	ff 24       	eor	r15, r15
    4e00:	87 01       	movw	r16, r14
    4e02:	05 c0       	rjmp	.+10     	; 0x4e0e <__pack_f+0x4a>
    4e04:	e1 14       	cp	r14, r1
    4e06:	f1 04       	cpc	r15, r1
    4e08:	01 05       	cpc	r16, r1
    4e0a:	11 05       	cpc	r17, r1
    4e0c:	19 f4       	brne	.+6      	; 0x4e14 <__pack_f+0x50>
    4e0e:	e0 e0       	ldi	r30, 0x00	; 0
    4e10:	f0 e0       	ldi	r31, 0x00	; 0
    4e12:	96 c0       	rjmp	.+300    	; 0x4f40 <__pack_f+0x17c>
    4e14:	62 81       	ldd	r22, Z+2	; 0x02
    4e16:	73 81       	ldd	r23, Z+3	; 0x03
    4e18:	9f ef       	ldi	r25, 0xFF	; 255
    4e1a:	62 38       	cpi	r22, 0x82	; 130
    4e1c:	79 07       	cpc	r23, r25
    4e1e:	0c f0       	brlt	.+2      	; 0x4e22 <__pack_f+0x5e>
    4e20:	5b c0       	rjmp	.+182    	; 0x4ed8 <__pack_f+0x114>
    4e22:	22 e8       	ldi	r18, 0x82	; 130
    4e24:	3f ef       	ldi	r19, 0xFF	; 255
    4e26:	26 1b       	sub	r18, r22
    4e28:	37 0b       	sbc	r19, r23
    4e2a:	2a 31       	cpi	r18, 0x1A	; 26
    4e2c:	31 05       	cpc	r19, r1
    4e2e:	2c f0       	brlt	.+10     	; 0x4e3a <__pack_f+0x76>
    4e30:	20 e0       	ldi	r18, 0x00	; 0
    4e32:	30 e0       	ldi	r19, 0x00	; 0
    4e34:	40 e0       	ldi	r20, 0x00	; 0
    4e36:	50 e0       	ldi	r21, 0x00	; 0
    4e38:	2a c0       	rjmp	.+84     	; 0x4e8e <__pack_f+0xca>
    4e3a:	b8 01       	movw	r22, r16
    4e3c:	a7 01       	movw	r20, r14
    4e3e:	02 2e       	mov	r0, r18
    4e40:	04 c0       	rjmp	.+8      	; 0x4e4a <__pack_f+0x86>
    4e42:	76 95       	lsr	r23
    4e44:	67 95       	ror	r22
    4e46:	57 95       	ror	r21
    4e48:	47 95       	ror	r20
    4e4a:	0a 94       	dec	r0
    4e4c:	d2 f7       	brpl	.-12     	; 0x4e42 <__pack_f+0x7e>
    4e4e:	81 e0       	ldi	r24, 0x01	; 1
    4e50:	90 e0       	ldi	r25, 0x00	; 0
    4e52:	a0 e0       	ldi	r26, 0x00	; 0
    4e54:	b0 e0       	ldi	r27, 0x00	; 0
    4e56:	04 c0       	rjmp	.+8      	; 0x4e60 <__pack_f+0x9c>
    4e58:	88 0f       	add	r24, r24
    4e5a:	99 1f       	adc	r25, r25
    4e5c:	aa 1f       	adc	r26, r26
    4e5e:	bb 1f       	adc	r27, r27
    4e60:	2a 95       	dec	r18
    4e62:	d2 f7       	brpl	.-12     	; 0x4e58 <__pack_f+0x94>
    4e64:	01 97       	sbiw	r24, 0x01	; 1
    4e66:	a1 09       	sbc	r26, r1
    4e68:	b1 09       	sbc	r27, r1
    4e6a:	8e 21       	and	r24, r14
    4e6c:	9f 21       	and	r25, r15
    4e6e:	a0 23       	and	r26, r16
    4e70:	b1 23       	and	r27, r17
    4e72:	00 97       	sbiw	r24, 0x00	; 0
    4e74:	a1 05       	cpc	r26, r1
    4e76:	b1 05       	cpc	r27, r1
    4e78:	21 f0       	breq	.+8      	; 0x4e82 <__pack_f+0xbe>
    4e7a:	81 e0       	ldi	r24, 0x01	; 1
    4e7c:	90 e0       	ldi	r25, 0x00	; 0
    4e7e:	a0 e0       	ldi	r26, 0x00	; 0
    4e80:	b0 e0       	ldi	r27, 0x00	; 0
    4e82:	9a 01       	movw	r18, r20
    4e84:	ab 01       	movw	r20, r22
    4e86:	28 2b       	or	r18, r24
    4e88:	39 2b       	or	r19, r25
    4e8a:	4a 2b       	or	r20, r26
    4e8c:	5b 2b       	or	r21, r27
    4e8e:	da 01       	movw	r26, r20
    4e90:	c9 01       	movw	r24, r18
    4e92:	8f 77       	andi	r24, 0x7F	; 127
    4e94:	90 70       	andi	r25, 0x00	; 0
    4e96:	a0 70       	andi	r26, 0x00	; 0
    4e98:	b0 70       	andi	r27, 0x00	; 0
    4e9a:	80 34       	cpi	r24, 0x40	; 64
    4e9c:	91 05       	cpc	r25, r1
    4e9e:	a1 05       	cpc	r26, r1
    4ea0:	b1 05       	cpc	r27, r1
    4ea2:	39 f4       	brne	.+14     	; 0x4eb2 <__pack_f+0xee>
    4ea4:	27 ff       	sbrs	r18, 7
    4ea6:	09 c0       	rjmp	.+18     	; 0x4eba <__pack_f+0xf6>
    4ea8:	20 5c       	subi	r18, 0xC0	; 192
    4eaa:	3f 4f       	sbci	r19, 0xFF	; 255
    4eac:	4f 4f       	sbci	r20, 0xFF	; 255
    4eae:	5f 4f       	sbci	r21, 0xFF	; 255
    4eb0:	04 c0       	rjmp	.+8      	; 0x4eba <__pack_f+0xf6>
    4eb2:	21 5c       	subi	r18, 0xC1	; 193
    4eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb6:	4f 4f       	sbci	r20, 0xFF	; 255
    4eb8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eba:	e0 e0       	ldi	r30, 0x00	; 0
    4ebc:	f0 e0       	ldi	r31, 0x00	; 0
    4ebe:	20 30       	cpi	r18, 0x00	; 0
    4ec0:	a0 e0       	ldi	r26, 0x00	; 0
    4ec2:	3a 07       	cpc	r19, r26
    4ec4:	a0 e0       	ldi	r26, 0x00	; 0
    4ec6:	4a 07       	cpc	r20, r26
    4ec8:	a0 e4       	ldi	r26, 0x40	; 64
    4eca:	5a 07       	cpc	r21, r26
    4ecc:	10 f0       	brcs	.+4      	; 0x4ed2 <__pack_f+0x10e>
    4ece:	e1 e0       	ldi	r30, 0x01	; 1
    4ed0:	f0 e0       	ldi	r31, 0x00	; 0
    4ed2:	79 01       	movw	r14, r18
    4ed4:	8a 01       	movw	r16, r20
    4ed6:	27 c0       	rjmp	.+78     	; 0x4f26 <__pack_f+0x162>
    4ed8:	60 38       	cpi	r22, 0x80	; 128
    4eda:	71 05       	cpc	r23, r1
    4edc:	64 f5       	brge	.+88     	; 0x4f36 <__pack_f+0x172>
    4ede:	fb 01       	movw	r30, r22
    4ee0:	e1 58       	subi	r30, 0x81	; 129
    4ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ee4:	d8 01       	movw	r26, r16
    4ee6:	c7 01       	movw	r24, r14
    4ee8:	8f 77       	andi	r24, 0x7F	; 127
    4eea:	90 70       	andi	r25, 0x00	; 0
    4eec:	a0 70       	andi	r26, 0x00	; 0
    4eee:	b0 70       	andi	r27, 0x00	; 0
    4ef0:	80 34       	cpi	r24, 0x40	; 64
    4ef2:	91 05       	cpc	r25, r1
    4ef4:	a1 05       	cpc	r26, r1
    4ef6:	b1 05       	cpc	r27, r1
    4ef8:	39 f4       	brne	.+14     	; 0x4f08 <__pack_f+0x144>
    4efa:	e7 fe       	sbrs	r14, 7
    4efc:	0d c0       	rjmp	.+26     	; 0x4f18 <__pack_f+0x154>
    4efe:	80 e4       	ldi	r24, 0x40	; 64
    4f00:	90 e0       	ldi	r25, 0x00	; 0
    4f02:	a0 e0       	ldi	r26, 0x00	; 0
    4f04:	b0 e0       	ldi	r27, 0x00	; 0
    4f06:	04 c0       	rjmp	.+8      	; 0x4f10 <__pack_f+0x14c>
    4f08:	8f e3       	ldi	r24, 0x3F	; 63
    4f0a:	90 e0       	ldi	r25, 0x00	; 0
    4f0c:	a0 e0       	ldi	r26, 0x00	; 0
    4f0e:	b0 e0       	ldi	r27, 0x00	; 0
    4f10:	e8 0e       	add	r14, r24
    4f12:	f9 1e       	adc	r15, r25
    4f14:	0a 1f       	adc	r16, r26
    4f16:	1b 1f       	adc	r17, r27
    4f18:	17 ff       	sbrs	r17, 7
    4f1a:	05 c0       	rjmp	.+10     	; 0x4f26 <__pack_f+0x162>
    4f1c:	16 95       	lsr	r17
    4f1e:	07 95       	ror	r16
    4f20:	f7 94       	ror	r15
    4f22:	e7 94       	ror	r14
    4f24:	31 96       	adiw	r30, 0x01	; 1
    4f26:	87 e0       	ldi	r24, 0x07	; 7
    4f28:	16 95       	lsr	r17
    4f2a:	07 95       	ror	r16
    4f2c:	f7 94       	ror	r15
    4f2e:	e7 94       	ror	r14
    4f30:	8a 95       	dec	r24
    4f32:	d1 f7       	brne	.-12     	; 0x4f28 <__pack_f+0x164>
    4f34:	05 c0       	rjmp	.+10     	; 0x4f40 <__pack_f+0x17c>
    4f36:	ee 24       	eor	r14, r14
    4f38:	ff 24       	eor	r15, r15
    4f3a:	87 01       	movw	r16, r14
    4f3c:	ef ef       	ldi	r30, 0xFF	; 255
    4f3e:	f0 e0       	ldi	r31, 0x00	; 0
    4f40:	6e 2f       	mov	r22, r30
    4f42:	67 95       	ror	r22
    4f44:	66 27       	eor	r22, r22
    4f46:	67 95       	ror	r22
    4f48:	90 2f       	mov	r25, r16
    4f4a:	9f 77       	andi	r25, 0x7F	; 127
    4f4c:	d7 94       	ror	r13
    4f4e:	dd 24       	eor	r13, r13
    4f50:	d7 94       	ror	r13
    4f52:	8e 2f       	mov	r24, r30
    4f54:	86 95       	lsr	r24
    4f56:	49 2f       	mov	r20, r25
    4f58:	46 2b       	or	r20, r22
    4f5a:	58 2f       	mov	r21, r24
    4f5c:	5d 29       	or	r21, r13
    4f5e:	b7 01       	movw	r22, r14
    4f60:	ca 01       	movw	r24, r20
    4f62:	1f 91       	pop	r17
    4f64:	0f 91       	pop	r16
    4f66:	ff 90       	pop	r15
    4f68:	ef 90       	pop	r14
    4f6a:	df 90       	pop	r13
    4f6c:	08 95       	ret

00004f6e <__unpack_f>:
    4f6e:	fc 01       	movw	r30, r24
    4f70:	db 01       	movw	r26, r22
    4f72:	40 81       	ld	r20, Z
    4f74:	51 81       	ldd	r21, Z+1	; 0x01
    4f76:	22 81       	ldd	r18, Z+2	; 0x02
    4f78:	62 2f       	mov	r22, r18
    4f7a:	6f 77       	andi	r22, 0x7F	; 127
    4f7c:	70 e0       	ldi	r23, 0x00	; 0
    4f7e:	22 1f       	adc	r18, r18
    4f80:	22 27       	eor	r18, r18
    4f82:	22 1f       	adc	r18, r18
    4f84:	93 81       	ldd	r25, Z+3	; 0x03
    4f86:	89 2f       	mov	r24, r25
    4f88:	88 0f       	add	r24, r24
    4f8a:	82 2b       	or	r24, r18
    4f8c:	28 2f       	mov	r18, r24
    4f8e:	30 e0       	ldi	r19, 0x00	; 0
    4f90:	99 1f       	adc	r25, r25
    4f92:	99 27       	eor	r25, r25
    4f94:	99 1f       	adc	r25, r25
    4f96:	11 96       	adiw	r26, 0x01	; 1
    4f98:	9c 93       	st	X, r25
    4f9a:	11 97       	sbiw	r26, 0x01	; 1
    4f9c:	21 15       	cp	r18, r1
    4f9e:	31 05       	cpc	r19, r1
    4fa0:	a9 f5       	brne	.+106    	; 0x500c <__unpack_f+0x9e>
    4fa2:	41 15       	cp	r20, r1
    4fa4:	51 05       	cpc	r21, r1
    4fa6:	61 05       	cpc	r22, r1
    4fa8:	71 05       	cpc	r23, r1
    4faa:	11 f4       	brne	.+4      	; 0x4fb0 <__unpack_f+0x42>
    4fac:	82 e0       	ldi	r24, 0x02	; 2
    4fae:	37 c0       	rjmp	.+110    	; 0x501e <__unpack_f+0xb0>
    4fb0:	82 e8       	ldi	r24, 0x82	; 130
    4fb2:	9f ef       	ldi	r25, 0xFF	; 255
    4fb4:	13 96       	adiw	r26, 0x03	; 3
    4fb6:	9c 93       	st	X, r25
    4fb8:	8e 93       	st	-X, r24
    4fba:	12 97       	sbiw	r26, 0x02	; 2
    4fbc:	9a 01       	movw	r18, r20
    4fbe:	ab 01       	movw	r20, r22
    4fc0:	67 e0       	ldi	r22, 0x07	; 7
    4fc2:	22 0f       	add	r18, r18
    4fc4:	33 1f       	adc	r19, r19
    4fc6:	44 1f       	adc	r20, r20
    4fc8:	55 1f       	adc	r21, r21
    4fca:	6a 95       	dec	r22
    4fcc:	d1 f7       	brne	.-12     	; 0x4fc2 <__unpack_f+0x54>
    4fce:	83 e0       	ldi	r24, 0x03	; 3
    4fd0:	8c 93       	st	X, r24
    4fd2:	0d c0       	rjmp	.+26     	; 0x4fee <__unpack_f+0x80>
    4fd4:	22 0f       	add	r18, r18
    4fd6:	33 1f       	adc	r19, r19
    4fd8:	44 1f       	adc	r20, r20
    4fda:	55 1f       	adc	r21, r21
    4fdc:	12 96       	adiw	r26, 0x02	; 2
    4fde:	8d 91       	ld	r24, X+
    4fe0:	9c 91       	ld	r25, X
    4fe2:	13 97       	sbiw	r26, 0x03	; 3
    4fe4:	01 97       	sbiw	r24, 0x01	; 1
    4fe6:	13 96       	adiw	r26, 0x03	; 3
    4fe8:	9c 93       	st	X, r25
    4fea:	8e 93       	st	-X, r24
    4fec:	12 97       	sbiw	r26, 0x02	; 2
    4fee:	20 30       	cpi	r18, 0x00	; 0
    4ff0:	80 e0       	ldi	r24, 0x00	; 0
    4ff2:	38 07       	cpc	r19, r24
    4ff4:	80 e0       	ldi	r24, 0x00	; 0
    4ff6:	48 07       	cpc	r20, r24
    4ff8:	80 e4       	ldi	r24, 0x40	; 64
    4ffa:	58 07       	cpc	r21, r24
    4ffc:	58 f3       	brcs	.-42     	; 0x4fd4 <__unpack_f+0x66>
    4ffe:	14 96       	adiw	r26, 0x04	; 4
    5000:	2d 93       	st	X+, r18
    5002:	3d 93       	st	X+, r19
    5004:	4d 93       	st	X+, r20
    5006:	5c 93       	st	X, r21
    5008:	17 97       	sbiw	r26, 0x07	; 7
    500a:	08 95       	ret
    500c:	2f 3f       	cpi	r18, 0xFF	; 255
    500e:	31 05       	cpc	r19, r1
    5010:	79 f4       	brne	.+30     	; 0x5030 <__unpack_f+0xc2>
    5012:	41 15       	cp	r20, r1
    5014:	51 05       	cpc	r21, r1
    5016:	61 05       	cpc	r22, r1
    5018:	71 05       	cpc	r23, r1
    501a:	19 f4       	brne	.+6      	; 0x5022 <__unpack_f+0xb4>
    501c:	84 e0       	ldi	r24, 0x04	; 4
    501e:	8c 93       	st	X, r24
    5020:	08 95       	ret
    5022:	64 ff       	sbrs	r22, 4
    5024:	03 c0       	rjmp	.+6      	; 0x502c <__unpack_f+0xbe>
    5026:	81 e0       	ldi	r24, 0x01	; 1
    5028:	8c 93       	st	X, r24
    502a:	12 c0       	rjmp	.+36     	; 0x5050 <__unpack_f+0xe2>
    502c:	1c 92       	st	X, r1
    502e:	10 c0       	rjmp	.+32     	; 0x5050 <__unpack_f+0xe2>
    5030:	2f 57       	subi	r18, 0x7F	; 127
    5032:	30 40       	sbci	r19, 0x00	; 0
    5034:	13 96       	adiw	r26, 0x03	; 3
    5036:	3c 93       	st	X, r19
    5038:	2e 93       	st	-X, r18
    503a:	12 97       	sbiw	r26, 0x02	; 2
    503c:	83 e0       	ldi	r24, 0x03	; 3
    503e:	8c 93       	st	X, r24
    5040:	87 e0       	ldi	r24, 0x07	; 7
    5042:	44 0f       	add	r20, r20
    5044:	55 1f       	adc	r21, r21
    5046:	66 1f       	adc	r22, r22
    5048:	77 1f       	adc	r23, r23
    504a:	8a 95       	dec	r24
    504c:	d1 f7       	brne	.-12     	; 0x5042 <__unpack_f+0xd4>
    504e:	70 64       	ori	r23, 0x40	; 64
    5050:	14 96       	adiw	r26, 0x04	; 4
    5052:	4d 93       	st	X+, r20
    5054:	5d 93       	st	X+, r21
    5056:	6d 93       	st	X+, r22
    5058:	7c 93       	st	X, r23
    505a:	17 97       	sbiw	r26, 0x07	; 7
    505c:	08 95       	ret

0000505e <__fpcmp_parts_f>:
    505e:	1f 93       	push	r17
    5060:	dc 01       	movw	r26, r24
    5062:	fb 01       	movw	r30, r22
    5064:	9c 91       	ld	r25, X
    5066:	92 30       	cpi	r25, 0x02	; 2
    5068:	08 f4       	brcc	.+2      	; 0x506c <__fpcmp_parts_f+0xe>
    506a:	47 c0       	rjmp	.+142    	; 0x50fa <__fpcmp_parts_f+0x9c>
    506c:	80 81       	ld	r24, Z
    506e:	82 30       	cpi	r24, 0x02	; 2
    5070:	08 f4       	brcc	.+2      	; 0x5074 <__fpcmp_parts_f+0x16>
    5072:	43 c0       	rjmp	.+134    	; 0x50fa <__fpcmp_parts_f+0x9c>
    5074:	94 30       	cpi	r25, 0x04	; 4
    5076:	51 f4       	brne	.+20     	; 0x508c <__fpcmp_parts_f+0x2e>
    5078:	11 96       	adiw	r26, 0x01	; 1
    507a:	1c 91       	ld	r17, X
    507c:	84 30       	cpi	r24, 0x04	; 4
    507e:	99 f5       	brne	.+102    	; 0x50e6 <__fpcmp_parts_f+0x88>
    5080:	81 81       	ldd	r24, Z+1	; 0x01
    5082:	68 2f       	mov	r22, r24
    5084:	70 e0       	ldi	r23, 0x00	; 0
    5086:	61 1b       	sub	r22, r17
    5088:	71 09       	sbc	r23, r1
    508a:	3f c0       	rjmp	.+126    	; 0x510a <__fpcmp_parts_f+0xac>
    508c:	84 30       	cpi	r24, 0x04	; 4
    508e:	21 f0       	breq	.+8      	; 0x5098 <__fpcmp_parts_f+0x3a>
    5090:	92 30       	cpi	r25, 0x02	; 2
    5092:	31 f4       	brne	.+12     	; 0x50a0 <__fpcmp_parts_f+0x42>
    5094:	82 30       	cpi	r24, 0x02	; 2
    5096:	b9 f1       	breq	.+110    	; 0x5106 <__fpcmp_parts_f+0xa8>
    5098:	81 81       	ldd	r24, Z+1	; 0x01
    509a:	88 23       	and	r24, r24
    509c:	89 f1       	breq	.+98     	; 0x5100 <__fpcmp_parts_f+0xa2>
    509e:	2d c0       	rjmp	.+90     	; 0x50fa <__fpcmp_parts_f+0x9c>
    50a0:	11 96       	adiw	r26, 0x01	; 1
    50a2:	1c 91       	ld	r17, X
    50a4:	11 97       	sbiw	r26, 0x01	; 1
    50a6:	82 30       	cpi	r24, 0x02	; 2
    50a8:	f1 f0       	breq	.+60     	; 0x50e6 <__fpcmp_parts_f+0x88>
    50aa:	81 81       	ldd	r24, Z+1	; 0x01
    50ac:	18 17       	cp	r17, r24
    50ae:	d9 f4       	brne	.+54     	; 0x50e6 <__fpcmp_parts_f+0x88>
    50b0:	12 96       	adiw	r26, 0x02	; 2
    50b2:	2d 91       	ld	r18, X+
    50b4:	3c 91       	ld	r19, X
    50b6:	13 97       	sbiw	r26, 0x03	; 3
    50b8:	82 81       	ldd	r24, Z+2	; 0x02
    50ba:	93 81       	ldd	r25, Z+3	; 0x03
    50bc:	82 17       	cp	r24, r18
    50be:	93 07       	cpc	r25, r19
    50c0:	94 f0       	brlt	.+36     	; 0x50e6 <__fpcmp_parts_f+0x88>
    50c2:	28 17       	cp	r18, r24
    50c4:	39 07       	cpc	r19, r25
    50c6:	bc f0       	brlt	.+46     	; 0x50f6 <__fpcmp_parts_f+0x98>
    50c8:	14 96       	adiw	r26, 0x04	; 4
    50ca:	8d 91       	ld	r24, X+
    50cc:	9d 91       	ld	r25, X+
    50ce:	0d 90       	ld	r0, X+
    50d0:	bc 91       	ld	r27, X
    50d2:	a0 2d       	mov	r26, r0
    50d4:	24 81       	ldd	r18, Z+4	; 0x04
    50d6:	35 81       	ldd	r19, Z+5	; 0x05
    50d8:	46 81       	ldd	r20, Z+6	; 0x06
    50da:	57 81       	ldd	r21, Z+7	; 0x07
    50dc:	28 17       	cp	r18, r24
    50de:	39 07       	cpc	r19, r25
    50e0:	4a 07       	cpc	r20, r26
    50e2:	5b 07       	cpc	r21, r27
    50e4:	18 f4       	brcc	.+6      	; 0x50ec <__fpcmp_parts_f+0x8e>
    50e6:	11 23       	and	r17, r17
    50e8:	41 f0       	breq	.+16     	; 0x50fa <__fpcmp_parts_f+0x9c>
    50ea:	0a c0       	rjmp	.+20     	; 0x5100 <__fpcmp_parts_f+0xa2>
    50ec:	82 17       	cp	r24, r18
    50ee:	93 07       	cpc	r25, r19
    50f0:	a4 07       	cpc	r26, r20
    50f2:	b5 07       	cpc	r27, r21
    50f4:	40 f4       	brcc	.+16     	; 0x5106 <__fpcmp_parts_f+0xa8>
    50f6:	11 23       	and	r17, r17
    50f8:	19 f0       	breq	.+6      	; 0x5100 <__fpcmp_parts_f+0xa2>
    50fa:	61 e0       	ldi	r22, 0x01	; 1
    50fc:	70 e0       	ldi	r23, 0x00	; 0
    50fe:	05 c0       	rjmp	.+10     	; 0x510a <__fpcmp_parts_f+0xac>
    5100:	6f ef       	ldi	r22, 0xFF	; 255
    5102:	7f ef       	ldi	r23, 0xFF	; 255
    5104:	02 c0       	rjmp	.+4      	; 0x510a <__fpcmp_parts_f+0xac>
    5106:	60 e0       	ldi	r22, 0x00	; 0
    5108:	70 e0       	ldi	r23, 0x00	; 0
    510a:	cb 01       	movw	r24, r22
    510c:	1f 91       	pop	r17
    510e:	08 95       	ret

00005110 <__prologue_saves__>:
    5110:	2f 92       	push	r2
    5112:	3f 92       	push	r3
    5114:	4f 92       	push	r4
    5116:	5f 92       	push	r5
    5118:	6f 92       	push	r6
    511a:	7f 92       	push	r7
    511c:	8f 92       	push	r8
    511e:	9f 92       	push	r9
    5120:	af 92       	push	r10
    5122:	bf 92       	push	r11
    5124:	cf 92       	push	r12
    5126:	df 92       	push	r13
    5128:	ef 92       	push	r14
    512a:	ff 92       	push	r15
    512c:	0f 93       	push	r16
    512e:	1f 93       	push	r17
    5130:	cf 93       	push	r28
    5132:	df 93       	push	r29
    5134:	cd b7       	in	r28, 0x3d	; 61
    5136:	de b7       	in	r29, 0x3e	; 62
    5138:	ca 1b       	sub	r28, r26
    513a:	db 0b       	sbc	r29, r27
    513c:	0f b6       	in	r0, 0x3f	; 63
    513e:	f8 94       	cli
    5140:	de bf       	out	0x3e, r29	; 62
    5142:	0f be       	out	0x3f, r0	; 63
    5144:	cd bf       	out	0x3d, r28	; 61
    5146:	19 94       	eijmp

00005148 <__epilogue_restores__>:
    5148:	2a 88       	ldd	r2, Y+18	; 0x12
    514a:	39 88       	ldd	r3, Y+17	; 0x11
    514c:	48 88       	ldd	r4, Y+16	; 0x10
    514e:	5f 84       	ldd	r5, Y+15	; 0x0f
    5150:	6e 84       	ldd	r6, Y+14	; 0x0e
    5152:	7d 84       	ldd	r7, Y+13	; 0x0d
    5154:	8c 84       	ldd	r8, Y+12	; 0x0c
    5156:	9b 84       	ldd	r9, Y+11	; 0x0b
    5158:	aa 84       	ldd	r10, Y+10	; 0x0a
    515a:	b9 84       	ldd	r11, Y+9	; 0x09
    515c:	c8 84       	ldd	r12, Y+8	; 0x08
    515e:	df 80       	ldd	r13, Y+7	; 0x07
    5160:	ee 80       	ldd	r14, Y+6	; 0x06
    5162:	fd 80       	ldd	r15, Y+5	; 0x05
    5164:	0c 81       	ldd	r16, Y+4	; 0x04
    5166:	1b 81       	ldd	r17, Y+3	; 0x03
    5168:	aa 81       	ldd	r26, Y+2	; 0x02
    516a:	b9 81       	ldd	r27, Y+1	; 0x01
    516c:	ce 0f       	add	r28, r30
    516e:	d1 1d       	adc	r29, r1
    5170:	0f b6       	in	r0, 0x3f	; 63
    5172:	f8 94       	cli
    5174:	de bf       	out	0x3e, r29	; 62
    5176:	0f be       	out	0x3f, r0	; 63
    5178:	cd bf       	out	0x3d, r28	; 61
    517a:	ed 01       	movw	r28, r26
    517c:	08 95       	ret

0000517e <_exit>:
    517e:	f8 94       	cli

00005180 <__stop_program>:
    5180:	ff cf       	rjmp	.-2      	; 0x5180 <__stop_program>
